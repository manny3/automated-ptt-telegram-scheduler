<?xml version="1.0" encoding="UTF-8"?>
<testsuites name="PTT Telegram Scheduler Tests" tests="216" failures="0" errors="0" time="1.432">
  <testsuite name="Validation Functions" errors="0" failures="0" skipped="26" timestamp="2025-08-26T11:46:21" time="0.373" tests="26">
    <testcase classname="Validation Functions validateCreateConfiguration should validate correct data" name="Validation Functions validateCreateConfiguration should validate correct data" time="0">
      <skipped/>
    </testcase>
    <testcase classname="Validation Functions validateCreateConfiguration should reject null or undefined data" name="Validation Functions validateCreateConfiguration should reject null or undefined data" time="0">
      <skipped/>
    </testcase>
    <testcase classname="Validation Functions validateCreateConfiguration name validation should reject empty name" name="Validation Functions validateCreateConfiguration name validation should reject empty name" time="0">
      <skipped/>
    </testcase>
    <testcase classname="Validation Functions validateCreateConfiguration name validation should reject name longer than 100 characters" name="Validation Functions validateCreateConfiguration name validation should reject name longer than 100 characters" time="0">
      <skipped/>
    </testcase>
    <testcase classname="Validation Functions validateCreateConfiguration pttBoard validation should reject empty board name" name="Validation Functions validateCreateConfiguration pttBoard validation should reject empty board name" time="0">
      <skipped/>
    </testcase>
    <testcase classname="Validation Functions validateCreateConfiguration pttBoard validation should reject board name with invalid characters" name="Validation Functions validateCreateConfiguration pttBoard validation should reject board name with invalid characters" time="0">
      <skipped/>
    </testcase>
    <testcase classname="Validation Functions validateCreateConfiguration pttBoard validation should accept valid board names" name="Validation Functions validateCreateConfiguration pttBoard validation should accept valid board names" time="0">
      <skipped/>
    </testcase>
    <testcase classname="Validation Functions validateCreateConfiguration keywords validation should reject empty keywords array" name="Validation Functions validateCreateConfiguration keywords validation should reject empty keywords array" time="0">
      <skipped/>
    </testcase>
    <testcase classname="Validation Functions validateCreateConfiguration keywords validation should reject non-array keywords" name="Validation Functions validateCreateConfiguration keywords validation should reject non-array keywords" time="0">
      <skipped/>
    </testcase>
    <testcase classname="Validation Functions validateCreateConfiguration keywords validation should reject too many keywords" name="Validation Functions validateCreateConfiguration keywords validation should reject too many keywords" time="0">
      <skipped/>
    </testcase>
    <testcase classname="Validation Functions validateCreateConfiguration keywords validation should reject empty keyword strings" name="Validation Functions validateCreateConfiguration keywords validation should reject empty keyword strings" time="0">
      <skipped/>
    </testcase>
    <testcase classname="Validation Functions validateCreateConfiguration keywords validation should reject keywords that are too long" name="Validation Functions validateCreateConfiguration keywords validation should reject keywords that are too long" time="0">
      <skipped/>
    </testcase>
    <testcase classname="Validation Functions validateCreateConfiguration postCount validation should reject non-integer values" name="Validation Functions validateCreateConfiguration postCount validation should reject non-integer values" time="0">
      <skipped/>
    </testcase>
    <testcase classname="Validation Functions validateCreateConfiguration postCount validation should reject values outside 1-100 range" name="Validation Functions validateCreateConfiguration postCount validation should reject values outside 1-100 range" time="0">
      <skipped/>
    </testcase>
    <testcase classname="Validation Functions validateCreateConfiguration postCount validation should accept valid post counts" name="Validation Functions validateCreateConfiguration postCount validation should accept valid post counts" time="0">
      <skipped/>
    </testcase>
    <testcase classname="Validation Functions validateCreateConfiguration schedule validation should reject invalid schedule types" name="Validation Functions validateCreateConfiguration schedule validation should reject invalid schedule types" time="0">
      <skipped/>
    </testcase>
    <testcase classname="Validation Functions validateCreateConfiguration schedule validation should validate custom schedule intervals" name="Validation Functions validateCreateConfiguration schedule validation should validate custom schedule intervals" time="0">
      <skipped/>
    </testcase>
    <testcase classname="Validation Functions validateCreateConfiguration schedule validation should validate daily schedule times" name="Validation Functions validateCreateConfiguration schedule validation should validate daily schedule times" time="0">
      <skipped/>
    </testcase>
    <testcase classname="Validation Functions validateCreateConfiguration telegramChatId validation should reject empty chat ID" name="Validation Functions validateCreateConfiguration telegramChatId validation should reject empty chat ID" time="0">
      <skipped/>
    </testcase>
    <testcase classname="Validation Functions validateCreateConfiguration telegramChatId validation should reject non-numeric chat IDs" name="Validation Functions validateCreateConfiguration telegramChatId validation should reject non-numeric chat IDs" time="0">
      <skipped/>
    </testcase>
    <testcase classname="Validation Functions validateCreateConfiguration telegramChatId validation should accept valid chat IDs" name="Validation Functions validateCreateConfiguration telegramChatId validation should accept valid chat IDs" time="0">
      <skipped/>
    </testcase>
    <testcase classname="Validation Functions validateUpdateConfiguration should allow partial updates" name="Validation Functions validateUpdateConfiguration should allow partial updates" time="0">
      <skipped/>
    </testcase>
    <testcase classname="Validation Functions validateUpdateConfiguration should validate isActive field" name="Validation Functions validateUpdateConfiguration should validate isActive field" time="0">
      <skipped/>
    </testcase>
    <testcase classname="Validation Functions validateUpdateConfiguration should validate provided fields with same rules as create" name="Validation Functions validateUpdateConfiguration should validate provided fields with same rules as create" time="0">
      <skipped/>
    </testcase>
    <testcase classname="Validation Functions validateConfigurationId should accept valid IDs" name="Validation Functions validateConfigurationId should accept valid IDs" time="0">
      <skipped/>
    </testcase>
    <testcase classname="Validation Functions validateConfigurationId should reject empty IDs" name="Validation Functions validateConfigurationId should reject empty IDs" time="0">
      <skipped/>
    </testcase>
  </testsuite>
  <testsuite name="PTT-Telegram 整合測試" errors="0" failures="0" skipped="10" timestamp="2025-08-26T11:46:21" time="0.375" tests="10">
    <testcase classname="PTT-Telegram 整合測試 PTT 爬取整合 應該成功爬取 PTT 文章並解析內容" name="PTT-Telegram 整合測試 PTT 爬取整合 應該成功爬取 PTT 文章並解析內容" time="0">
      <skipped/>
    </testcase>
    <testcase classname="PTT-Telegram 整合測試 PTT 爬取整合 應該處理 PTT 18+ 年齡驗證頁面" name="PTT-Telegram 整合測試 PTT 爬取整合 應該處理 PTT 18+ 年齡驗證頁面" time="0">
      <skipped/>
    </testcase>
    <testcase classname="PTT-Telegram 整合測試 PTT 爬取整合 應該處理 PTT 連接錯誤和重試" name="PTT-Telegram 整合測試 PTT 爬取整合 應該處理 PTT 連接錯誤和重試" time="0">
      <skipped/>
    </testcase>
    <testcase classname="PTT-Telegram 整合測試 Telegram 整合 應該成功發送文章到 Telegram" name="PTT-Telegram 整合測試 Telegram 整合 應該成功發送文章到 Telegram" time="0">
      <skipped/>
    </testcase>
    <testcase classname="PTT-Telegram 整合測試 Telegram 整合 應該處理 Telegram API 錯誤" name="PTT-Telegram 整合測試 Telegram 整合 應該處理 Telegram API 錯誤" time="0">
      <skipped/>
    </testcase>
    <testcase classname="PTT-Telegram 整合測試 Telegram 整合 應該處理長訊息分割" name="PTT-Telegram 整合測試 Telegram 整合 應該處理長訊息分割" time="0">
      <skipped/>
    </testcase>
    <testcase classname="PTT-Telegram 整合測試 資料庫整合 應該正確儲存執行結果到 Firestore" name="PTT-Telegram 整合測試 資料庫整合 應該正確儲存執行結果到 Firestore" time="0">
      <skipped/>
    </testcase>
    <testcase classname="PTT-Telegram 整合測試 資料庫整合 應該正確更新配置的最後執行狀態" name="PTT-Telegram 整合測試 資料庫整合 應該正確更新配置的最後執行狀態" time="0">
      <skipped/>
    </testcase>
    <testcase classname="PTT-Telegram 整合測試 資料庫整合 應該處理 Firestore 連接錯誤" name="PTT-Telegram 整合測試 資料庫整合 應該處理 Firestore 連接錯誤" time="0">
      <skipped/>
    </testcase>
    <testcase classname="PTT-Telegram 整合測試 完整整合流程 應該執行完整的爬取-發送-儲存流程" name="PTT-Telegram 整合測試 完整整合流程 應該執行完整的爬取-發送-儲存流程" time="0">
      <skipped/>
    </testcase>
  </testsuite>
  <testsuite name="Telegram Bot Integration" errors="0" failures="0" skipped="26" timestamp="2025-08-26T11:46:21" time="0.376" tests="26">
    <testcase classname="Telegram Bot Integration formatArticleForTelegram 應該正確格式化單篇文章" name="Telegram Bot Integration formatArticleForTelegram 應該正確格式化單篇文章" time="0">
      <skipped/>
    </testcase>
    <testcase classname="Telegram Bot Integration formatArticlesForTelegram 應該正確格式化多篇文章" name="Telegram Bot Integration formatArticlesForTelegram 應該正確格式化多篇文章" time="0">
      <skipped/>
    </testcase>
    <testcase classname="Telegram Bot Integration formatArticlesForTelegram 應該處理空文章陣列" name="Telegram Bot Integration formatArticlesForTelegram 應該處理空文章陣列" time="0">
      <skipped/>
    </testcase>
    <testcase classname="Telegram Bot Integration splitLongMessage 應該保持短訊息不變" name="Telegram Bot Integration splitLongMessage 應該保持短訊息不變" time="0">
      <skipped/>
    </testcase>
    <testcase classname="Telegram Bot Integration splitLongMessage 應該分割長訊息" name="Telegram Bot Integration splitLongMessage 應該分割長訊息" time="0">
      <skipped/>
    </testcase>
    <testcase classname="Telegram Bot Integration splitLongMessage 應該按行分割訊息" name="Telegram Bot Integration splitLongMessage 應該按行分割訊息" time="0">
      <skipped/>
    </testcase>
    <testcase classname="Telegram Bot Integration groupArticlesForMessages 應該將文章分組為適當大小的訊息" name="Telegram Bot Integration groupArticlesForMessages 應該將文章分組為適當大小的訊息" time="0">
      <skipped/>
    </testcase>
    <testcase classname="Telegram Bot Integration groupArticlesForMessages 應該處理空文章陣列" name="Telegram Bot Integration groupArticlesForMessages 應該處理空文章陣列" time="0">
      <skipped/>
    </testcase>
    <testcase classname="Telegram Bot Integration TelegramBotClient sendMessage 應該成功發送訊息" name="Telegram Bot Integration TelegramBotClient sendMessage 應該成功發送訊息" time="0">
      <skipped/>
    </testcase>
    <testcase classname="Telegram Bot Integration TelegramBotClient sendMessage 應該處理無效聊天 ID 錯誤" name="Telegram Bot Integration TelegramBotClient sendMessage 應該處理無效聊天 ID 錯誤" time="0">
      <skipped/>
    </testcase>
    <testcase classname="Telegram Bot Integration TelegramBotClient sendMessage 應該處理 Bot 被封鎖錯誤" name="Telegram Bot Integration TelegramBotClient sendMessage 應該處理 Bot 被封鎖錯誤" time="0">
      <skipped/>
    </testcase>
    <testcase classname="Telegram Bot Integration TelegramBotClient sendMessage 應該處理速率限制" name="Telegram Bot Integration TelegramBotClient sendMessage 應該處理速率限制" time="0">
      <skipped/>
    </testcase>
    <testcase classname="Telegram Bot Integration TelegramBotClient sendMessage 應該在網路錯誤時重試" name="Telegram Bot Integration TelegramBotClient sendMessage 應該在網路錯誤時重試" time="0">
      <skipped/>
    </testcase>
    <testcase classname="Telegram Bot Integration TelegramBotClient sendMessage 應該在達到最大重試次數後失敗" name="Telegram Bot Integration TelegramBotClient sendMessage 應該在達到最大重試次數後失敗" time="0">
      <skipped/>
    </testcase>
    <testcase classname="Telegram Bot Integration TelegramBotClient sendArticleBatch 應該成功發送文章批次" name="Telegram Bot Integration TelegramBotClient sendArticleBatch 應該成功發送文章批次" time="0">
      <skipped/>
    </testcase>
    <testcase classname="Telegram Bot Integration TelegramBotClient sendArticleBatch 應該處理空聊天 ID" name="Telegram Bot Integration TelegramBotClient sendArticleBatch 應該處理空聊天 ID" time="0">
      <skipped/>
    </testcase>
    <testcase classname="Telegram Bot Integration TelegramBotClient sendArticleBatch 應該處理空文章陣列" name="Telegram Bot Integration TelegramBotClient sendArticleBatch 應該處理空文章陣列" time="0">
      <skipped/>
    </testcase>
    <testcase classname="Telegram Bot Integration TelegramBotClient sendArticleBatch 應該分割大量文章為多則訊息" name="Telegram Bot Integration TelegramBotClient sendArticleBatch 應該分割大量文章為多則訊息" time="0">
      <skipped/>
    </testcase>
    <testcase classname="Telegram Bot Integration TelegramBotClient testConnection 應該在連接成功時返回 true" name="Telegram Bot Integration TelegramBotClient testConnection 應該在連接成功時返回 true" time="0">
      <skipped/>
    </testcase>
    <testcase classname="Telegram Bot Integration TelegramBotClient testConnection 應該在連接失敗時返回 false" name="Telegram Bot Integration TelegramBotClient testConnection 應該在連接失敗時返回 false" time="0">
      <skipped/>
    </testcase>
    <testcase classname="Telegram Bot Integration TelegramBotClient getBotInfo 應該返回 Bot 資訊" name="Telegram Bot Integration TelegramBotClient getBotInfo 應該返回 Bot 資訊" time="0">
      <skipped/>
    </testcase>
    <testcase classname="Telegram Bot Integration TelegramBotClient getBotInfo 應該處理取得 Bot 資訊失敗" name="Telegram Bot Integration TelegramBotClient getBotInfo 應該處理取得 Bot 資訊失敗" time="0">
      <skipped/>
    </testcase>
    <testcase classname="Telegram Bot Integration 便利函數 sendArticlesToTelegram 應該建立 Bot 實例並發送文章" name="Telegram Bot Integration 便利函數 sendArticlesToTelegram 應該建立 Bot 實例並發送文章" time="0">
      <skipped/>
    </testcase>
    <testcase classname="Telegram Bot Integration 便利函數 testTelegramBot 應該測試 Bot 連接" name="Telegram Bot Integration 便利函數 testTelegramBot 應該測試 Bot 連接" time="0">
      <skipped/>
    </testcase>
    <testcase classname="Telegram Bot Integration TelegramBotError 應該建立具有正確屬性的錯誤" name="Telegram Bot Integration TelegramBotError 應該建立具有正確屬性的錯誤" time="0">
      <skipped/>
    </testcase>
    <testcase classname="Telegram Bot Integration TelegramBotError 應該預設 retryable 為 true" name="Telegram Bot Integration TelegramBotError 應該預設 retryable 為 true" time="0">
      <skipped/>
    </testcase>
  </testsuite>
  <testsuite name="效能測試" errors="0" failures="0" skipped="6" timestamp="2025-08-26T11:46:21" time="0.378" tests="6">
    <testcase classname="效能測試 並發執行效能測試 應該能夠處理 10 個並發配置執行" name="效能測試 並發執行效能測試 應該能夠處理 10 個並發配置執行" time="0">
      <skipped/>
    </testcase>
    <testcase classname="效能測試 並發執行效能測試 應該能夠處理 50 個並發配置執行" name="效能測試 並發執行效能測試 應該能夠處理 50 個並發配置執行" time="0">
      <skipped/>
    </testcase>
    <testcase classname="效能測試 並發執行效能測試 應該在部分失敗時保持整體效能" name="效能測試 並發執行效能測試 應該在部分失敗時保持整體效能" time="0">
      <skipped/>
    </testcase>
    <testcase classname="效能測試 記憶體使用效能測試 應該在大量資料處理時保持合理的記憶體使用" name="效能測試 記憶體使用效能測試 應該在大量資料處理時保持合理的記憶體使用" time="0">
      <skipped/>
    </testcase>
    <testcase classname="效能測試 API 回應時間效能測試 應該在合理時間內回應執行歷史查詢" name="效能測試 API 回應時間效能測試 應該在合理時間內回應執行歷史查詢" time="0">
      <skipped/>
    </testcase>
    <testcase classname="效能測試 API 回應時間效能測試 應該高效處理複雜篩選查詢" name="效能測試 API 回應時間效能測試 應該高效處理複雜篩選查詢" time="0">
      <skipped/>
    </testcase>
  </testsuite>
  <testsuite name="Firestore Configuration Operations" errors="0" failures="0" skipped="9" timestamp="2025-08-26T11:46:21" time="0.474" tests="9">
    <testcase classname="Firestore Configuration Operations createConfiguration should create a new configuration successfully" name="Firestore Configuration Operations createConfiguration should create a new configuration successfully" time="0">
      <skipped/>
    </testcase>
    <testcase classname="Firestore Configuration Operations createConfiguration should throw error when creation fails" name="Firestore Configuration Operations createConfiguration should throw error when creation fails" time="0">
      <skipped/>
    </testcase>
    <testcase classname="Firestore Configuration Operations getAllConfigurations should return all configurations" name="Firestore Configuration Operations getAllConfigurations should return all configurations" time="0">
      <skipped/>
    </testcase>
    <testcase classname="Firestore Configuration Operations getActiveConfigurations should return only active configurations" name="Firestore Configuration Operations getActiveConfigurations should return only active configurations" time="0">
      <skipped/>
    </testcase>
    <testcase classname="Firestore Configuration Operations updateConfiguration should update configuration successfully" name="Firestore Configuration Operations updateConfiguration should update configuration successfully" time="0">
      <skipped/>
    </testcase>
    <testcase classname="Firestore Configuration Operations deleteConfiguration should delete configuration successfully" name="Firestore Configuration Operations deleteConfiguration should delete configuration successfully" time="0">
      <skipped/>
    </testcase>
    <testcase classname="Firestore Execution Operations createExecution should create execution record successfully" name="Firestore Execution Operations createExecution should create execution record successfully" time="0">
      <skipped/>
    </testcase>
    <testcase classname="Firestore Execution Operations getExecutionHistory should return execution history for configuration" name="Firestore Execution Operations getExecutionHistory should return execution history for configuration" time="0">
      <skipped/>
    </testcase>
    <testcase classname="Firestore Execution Operations getExecutionStats should return execution statistics" name="Firestore Execution Operations getExecutionStats should return execution statistics" time="0">
      <skipped/>
    </testcase>
  </testsuite>
  <testsuite name="@testing-library/jest-dom 相容性測試" errors="0" failures="0" skipped="18" timestamp="2025-08-26T11:46:21" time="0.524" tests="18">
    <testcase classname="@testing-library/jest-dom 相容性測試 基本 DOM 匹配器 toBeInTheDocument - 驗證元素存在於 DOM 中" name="@testing-library/jest-dom 相容性測試 基本 DOM 匹配器 toBeInTheDocument - 驗證元素存在於 DOM 中" time="0">
      <skipped/>
    </testcase>
    <testcase classname="@testing-library/jest-dom 相容性測試 基本 DOM 匹配器 toHaveTextContent - 驗證元素文字內容" name="@testing-library/jest-dom 相容性測試 基本 DOM 匹配器 toHaveTextContent - 驗證元素文字內容" time="0">
      <skipped/>
    </testcase>
    <testcase classname="@testing-library/jest-dom 相容性測試 基本 DOM 匹配器 toHaveValue - 驗證表單元素值" name="@testing-library/jest-dom 相容性測試 基本 DOM 匹配器 toHaveValue - 驗證表單元素值" time="0">
      <skipped/>
    </testcase>
    <testcase classname="@testing-library/jest-dom 相容性測試 基本 DOM 匹配器 toBeDisabled/toBeEnabled - 驗證元素啟用狀態" name="@testing-library/jest-dom 相容性測試 基本 DOM 匹配器 toBeDisabled/toBeEnabled - 驗證元素啟用狀態" time="0">
      <skipped/>
    </testcase>
    <testcase classname="@testing-library/jest-dom 相容性測試 基本 DOM 匹配器 toBeVisible/toBeInTheDocument - 驗證元素可見性" name="@testing-library/jest-dom 相容性測試 基本 DOM 匹配器 toBeVisible/toBeInTheDocument - 驗證元素可見性" time="0">
      <skipped/>
    </testcase>
    <testcase classname="@testing-library/jest-dom 相容性測試 基本 DOM 匹配器 toBeChecked - 驗證複選框狀態" name="@testing-library/jest-dom 相容性測試 基本 DOM 匹配器 toBeChecked - 驗證複選框狀態" time="0">
      <skipped/>
    </testcase>
    <testcase classname="@testing-library/jest-dom 相容性測試 基本 DOM 匹配器 toHaveAttribute - 驗證元素屬性" name="@testing-library/jest-dom 相容性測試 基本 DOM 匹配器 toHaveAttribute - 驗證元素屬性" time="0">
      <skipped/>
    </testcase>
    <testcase classname="@testing-library/jest-dom 相容性測試 基本 DOM 匹配器 toHaveClass - 驗證 CSS 類別" name="@testing-library/jest-dom 相容性測試 基本 DOM 匹配器 toHaveClass - 驗證 CSS 類別" time="0">
      <skipped/>
    </testcase>
    <testcase classname="@testing-library/jest-dom 相容性測試 基本 DOM 匹配器 toHaveStyle - 驗證內聯樣式" name="@testing-library/jest-dom 相容性測試 基本 DOM 匹配器 toHaveStyle - 驗證內聯樣式" time="0">
      <skipped/>
    </testcase>
    <testcase classname="@testing-library/jest-dom 相容性測試 表單相關匹配器 toBeRequired - 驗證必填欄位" name="@testing-library/jest-dom 相容性測試 表單相關匹配器 toBeRequired - 驗證必填欄位" time="0">
      <skipped/>
    </testcase>
    <testcase classname="@testing-library/jest-dom 相容性測試 表單相關匹配器 toBeInvalid/toBeValid - 驗證表單驗證狀態" name="@testing-library/jest-dom 相容性測試 表單相關匹配器 toBeInvalid/toBeValid - 驗證表單驗證狀態" time="0">
      <skipped/>
    </testcase>
    <testcase classname="@testing-library/jest-dom 相容性測試 可訪問性相關匹配器 toHaveAccessibleName - 驗證可訪問名稱" name="@testing-library/jest-dom 相容性測試 可訪問性相關匹配器 toHaveAccessibleName - 驗證可訪問名稱" time="0">
      <skipped/>
    </testcase>
    <testcase classname="@testing-library/jest-dom 相容性測試 可訪問性相關匹配器 toHaveAccessibleDescription - 驗證可訪問描述" name="@testing-library/jest-dom 相容性測試 可訪問性相關匹配器 toHaveAccessibleDescription - 驗證可訪問描述" time="0">
      <skipped/>
    </testcase>
    <testcase classname="@testing-library/jest-dom 相容性測試 自定義匹配器測試 toBeWithinRange - 自定義數值範圍匹配器" name="@testing-library/jest-dom 相容性測試 自定義匹配器測試 toBeWithinRange - 自定義數值範圍匹配器" time="0">
      <skipped/>
    </testcase>
    <testcase classname="@testing-library/jest-dom 相容性測試 自定義匹配器測試 toHaveBeenCalledWithObjectContaining - 自定義物件匹配器" name="@testing-library/jest-dom 相容性測試 自定義匹配器測試 toHaveBeenCalledWithObjectContaining - 自定義物件匹配器" time="0">
      <skipped/>
    </testcase>
    <testcase classname="@testing-library/jest-dom 相容性測試 React 19 特定功能測試 應該正確處理 React 19 的新 JSX 轉換" name="@testing-library/jest-dom 相容性測試 React 19 特定功能測試 應該正確處理 React 19 的新 JSX 轉換" time="0">
      <skipped/>
    </testcase>
    <testcase classname="@testing-library/jest-dom 相容性測試 React 19 特定功能測試 應該正確處理 React 19 的 key 屬性" name="@testing-library/jest-dom 相容性測試 React 19 特定功能測試 應該正確處理 React 19 的 key 屬性" time="0">
      <skipped/>
    </testcase>
    <testcase classname="@testing-library/jest-dom 相容性測試 React 19 特定功能測試 應該正確處理 React 19 的事件處理" name="@testing-library/jest-dom 相容性測試 React 19 特定功能測試 應該正確處理 React 19 的事件處理" time="0">
      <skipped/>
    </testcase>
  </testsuite>
  <testsuite name="ConfigurationList" errors="0" failures="0" skipped="14" timestamp="2025-08-26T11:46:21" time="0.533" tests="14">
    <testcase classname="ConfigurationList Loading State should show loading skeleton when isLoading is true" name="ConfigurationList Loading State should show loading skeleton when isLoading is true" time="0">
      <skipped/>
    </testcase>
    <testcase classname="ConfigurationList Empty State should show empty state when no configurations" name="ConfigurationList Empty State should show empty state when no configurations" time="0">
      <skipped/>
    </testcase>
    <testcase classname="ConfigurationList Configuration Display should display configurations correctly" name="ConfigurationList Configuration Display should display configurations correctly" time="0">
      <skipped/>
    </testcase>
    <testcase classname="ConfigurationList Configuration Display should show active/inactive status correctly" name="ConfigurationList Configuration Display should show active/inactive status correctly" time="0">
      <skipped/>
    </testcase>
    <testcase classname="ConfigurationList Configuration Display should display schedule types correctly" name="ConfigurationList Configuration Display should display schedule types correctly" time="0">
      <skipped/>
    </testcase>
    <testcase classname="ConfigurationList Configuration Display should format last executed time correctly" name="ConfigurationList Configuration Display should format last executed time correctly" time="0">
      <skipped/>
    </testcase>
    <testcase classname="ConfigurationList Actions should call onEdit when edit button is clicked" name="ConfigurationList Actions should call onEdit when edit button is clicked" time="0">
      <skipped/>
    </testcase>
    <testcase classname="ConfigurationList Actions should call onDelete when delete is confirmed" name="ConfigurationList Actions should call onDelete when delete is confirmed" time="0">
      <skipped/>
    </testcase>
    <testcase classname="ConfigurationList Actions should not call onDelete when delete is cancelled" name="ConfigurationList Actions should not call onDelete when delete is cancelled" time="0">
      <skipped/>
    </testcase>
    <testcase classname="ConfigurationList Actions should show loading state during delete" name="ConfigurationList Actions should show loading state during delete" time="0">
      <skipped/>
    </testcase>
    <testcase classname="ConfigurationList Actions should call onToggleActive when enable/disable button is clicked" name="ConfigurationList Actions should call onToggleActive when enable/disable button is clicked" time="0">
      <skipped/>
    </testcase>
    <testcase classname="ConfigurationList Actions should show loading state during toggle" name="ConfigurationList Actions should show loading state during toggle" time="0">
      <skipped/>
    </testcase>
    <testcase classname="ConfigurationList Status Badges should display correct status badges" name="ConfigurationList Status Badges should display correct status badges" time="0">
      <skipped/>
    </testcase>
    <testcase classname="ConfigurationList Configuration Count should show correct active/total count" name="ConfigurationList Configuration Count should show correct active/total count" time="0">
      <skipped/>
    </testcase>
  </testsuite>
  <testsuite name="ConfigurationForm" errors="0" failures="0" skipped="17" timestamp="2025-08-26T11:46:21" time="0.536" tests="17">
    <testcase classname="ConfigurationForm Create Mode should render create form with default values" name="ConfigurationForm Create Mode should render create form with default values" time="0">
      <skipped/>
    </testcase>
    <testcase classname="ConfigurationForm Create Mode should show daily time input when daily schedule is selected" name="ConfigurationForm Create Mode should show daily time input when daily schedule is selected" time="0">
      <skipped/>
    </testcase>
    <testcase classname="ConfigurationForm Create Mode should show interval input when custom schedule is selected" name="ConfigurationForm Create Mode should show interval input when custom schedule is selected" time="0">
      <skipped/>
    </testcase>
    <testcase classname="ConfigurationForm Create Mode should hide both time inputs when hourly schedule is selected" name="ConfigurationForm Create Mode should hide both time inputs when hourly schedule is selected" time="0">
      <skipped/>
    </testcase>
    <testcase classname="ConfigurationForm Create Mode should not show active checkbox in create mode" name="ConfigurationForm Create Mode should not show active checkbox in create mode" time="0">
      <skipped/>
    </testcase>
    <testcase classname="ConfigurationForm Edit Mode should render edit form with initial data" name="ConfigurationForm Edit Mode should render edit form with initial data" time="0">
      <skipped/>
    </testcase>
    <testcase classname="ConfigurationForm Edit Mode should show active checkbox in edit mode" name="ConfigurationForm Edit Mode should show active checkbox in edit mode" time="0">
      <skipped/>
    </testcase>
    <testcase classname="ConfigurationForm Edit Mode should update form when initialData changes" name="ConfigurationForm Edit Mode should update form when initialData changes" time="0">
      <skipped/>
    </testcase>
    <testcase classname="ConfigurationForm Form Validation should display validation errors" name="ConfigurationForm Form Validation should display validation errors" time="0">
      <skipped/>
    </testcase>
    <testcase classname="ConfigurationForm Form Validation should clear field errors when user starts typing" name="ConfigurationForm Form Validation should clear field errors when user starts typing" time="0">
      <skipped/>
    </testcase>
    <testcase classname="ConfigurationForm Form Submission should submit valid form data in create mode" name="ConfigurationForm Form Submission should submit valid form data in create mode" time="0">
      <skipped/>
    </testcase>
    <testcase classname="ConfigurationForm Form Submission should submit valid form data in edit mode with isActive" name="ConfigurationForm Form Submission should submit valid form data in edit mode with isActive" time="0">
      <skipped/>
    </testcase>
    <testcase classname="ConfigurationForm Form Submission should handle custom schedule submission" name="ConfigurationForm Form Submission should handle custom schedule submission" time="0">
      <skipped/>
    </testcase>
    <testcase classname="ConfigurationForm Form Submission should show loading state during submission" name="ConfigurationForm Form Submission should show loading state during submission" time="0">
      <skipped/>
    </testcase>
    <testcase classname="ConfigurationForm Form Submission should display submit error" name="ConfigurationForm Form Submission should display submit error" time="0">
      <skipped/>
    </testcase>
    <testcase classname="ConfigurationForm Accessibility should have proper labels and ARIA attributes" name="ConfigurationForm Accessibility should have proper labels and ARIA attributes" time="0">
      <skipped/>
    </testcase>
    <testcase classname="ConfigurationForm Accessibility should disable form elements when loading" name="ConfigurationForm Accessibility should disable form elements when loading" time="0">
      <skipped/>
    </testcase>
  </testsuite>
  <testsuite name="測試環境驗證" errors="0" failures="0" skipped="24" timestamp="2025-08-26T11:46:21" time="0.532" tests="24">
    <testcase classname="測試環境驗證 Jest 配置驗證 應該正確載入 Jest 全域設定" name="測試環境驗證 Jest 配置驗證 應該正確載入 Jest 全域設定" time="0">
      <skipped/>
    </testcase>
    <testcase classname="測試環境驗證 Jest 配置驗證 應該正確設定測試超時" name="測試環境驗證 Jest 配置驗證 應該正確設定測試超時" time="0">
      <skipped/>
    </testcase>
    <testcase classname="測試環境驗證 Jest 配置驗證 應該有全域測試工具可用" name="測試環境驗證 Jest 配置驗證 應該有全域測試工具可用" time="0">
      <skipped/>
    </testcase>
    <testcase classname="測試環境驗證 @testing-library/react 相容性驗證 應該能正確渲染 React 組件" name="測試環境驗證 @testing-library/react 相容性驗證 應該能正確渲染 React 組件" time="0">
      <skipped/>
    </testcase>
    <testcase classname="測試環境驗證 @testing-library/react 相容性驗證 應該支援 React 19 的新功能" name="測試環境驗證 @testing-library/react 相容性驗證 應該支援 React 19 的新功能" time="0">
      <skipped/>
    </testcase>
    <testcase classname="測試環境驗證 @testing-library/jest-dom 匹配器驗證 應該支援 toBeInTheDocument 匹配器" name="測試環境驗證 @testing-library/jest-dom 匹配器驗證 應該支援 toBeInTheDocument 匹配器" time="0">
      <skipped/>
    </testcase>
    <testcase classname="測試環境驗證 @testing-library/jest-dom 匹配器驗證 應該支援 toHaveValue 匹配器" name="測試環境驗證 @testing-library/jest-dom 匹配器驗證 應該支援 toHaveValue 匹配器" time="0">
      <skipped/>
    </testcase>
    <testcase classname="測試環境驗證 @testing-library/jest-dom 匹配器驗證 應該支援 toBeDisabled 匹配器" name="測試環境驗證 @testing-library/jest-dom 匹配器驗證 應該支援 toBeDisabled 匹配器" time="0">
      <skipped/>
    </testcase>
    <testcase classname="測試環境驗證 @testing-library/jest-dom 匹配器驗證 應該支援 toBeVisible 匹配器" name="測試環境驗證 @testing-library/jest-dom 匹配器驗證 應該支援 toBeVisible 匹配器" time="0">
      <skipped/>
    </testcase>
    <testcase classname="測試環境驗證 @testing-library/jest-dom 匹配器驗證 應該支援自定義匹配器" name="測試環境驗證 @testing-library/jest-dom 匹配器驗證 應該支援自定義匹配器" time="0">
      <skipped/>
    </testcase>
    <testcase classname="測試環境驗證 DOM 測試環境驗證 應該有 window 物件可用" name="測試環境驗證 DOM 測試環境驗證 應該有 window 物件可用" time="0">
      <skipped/>
    </testcase>
    <testcase classname="測試環境驗證 DOM 測試環境驗證 應該有 localStorage mock 可用" name="測試環境驗證 DOM 測試環境驗證 應該有 localStorage mock 可用" time="0">
      <skipped/>
    </testcase>
    <testcase classname="測試環境驗證 DOM 測試環境驗證 應該有 fetch mock 可用" name="測試環境驗證 DOM 測試環境驗證 應該有 fetch mock 可用" time="0">
      <skipped/>
    </testcase>
    <testcase classname="測試環境驗證 DOM 測試環境驗證 應該有 IntersectionObserver mock 可用" name="測試環境驗證 DOM 測試環境驗證 應該有 IntersectionObserver mock 可用" time="0">
      <skipped/>
    </testcase>
    <testcase classname="測試環境驗證 DOM 測試環境驗證 應該有 ResizeObserver mock 可用" name="測試環境驗證 DOM 測試環境驗證 應該有 ResizeObserver mock 可用" time="0">
      <skipped/>
    </testcase>
    <testcase classname="測試環境驗證 模組路徑解析驗證 應該正確解析 @ 路徑別名" name="測試環境驗證 模組路徑解析驗證 應該正確解析 @ 路徑別名" time="0">
      <skipped/>
    </testcase>
    <testcase classname="測試環境驗證 測試覆蓋率配置驗證 應該正確設定覆蓋率收集" name="測試環境驗證 測試覆蓋率配置驗證 應該正確設定覆蓋率收集" time="0">
      <skipped/>
    </testcase>
    <testcase classname="測試環境驗證 錯誤處理驗證 應該正確處理測試錯誤" name="測試環境驗證 錯誤處理驗證 應該正確處理測試錯誤" time="0">
      <skipped/>
    </testcase>
    <testcase classname="測試環境驗證 錯誤處理驗證 應該正確處理異步錯誤" name="測試環境驗證 錯誤處理驗證 應該正確處理異步錯誤" time="0">
      <skipped/>
    </testcase>
    <testcase classname="測試環境驗證 測試工具函數驗證 應該能創建 mock API 回應" name="測試環境驗證 測試工具函數驗證 應該能創建 mock API 回應" time="0">
      <skipped/>
    </testcase>
    <testcase classname="測試環境驗證 測試工具函數驗證 應該能創建 mock 執行記錄" name="測試環境驗證 測試工具函數驗證 應該能創建 mock 執行記錄" time="0">
      <skipped/>
    </testcase>
    <testcase classname="測試環境驗證 測試工具函數驗證 應該能創建 mock 配置" name="測試環境驗證 測試工具函數驗證 應該能創建 mock 配置" time="0">
      <skipped/>
    </testcase>
    <testcase classname="測試環境驗證 測試工具函數驗證 應該能模擬 fetch 回應" name="測試環境驗證 測試工具函數驗證 應該能模擬 fetch 回應" time="0">
      <skipped/>
    </testcase>
    <testcase classname="測試環境驗證 測試工具函數驗證 應該能模擬 fetch 錯誤" name="測試環境驗證 測試工具函數驗證 應該能模擬 fetch 錯誤" time="0">
      <skipped/>
    </testcase>
  </testsuite>
  <testsuite name="Dashboard" errors="0" failures="0" skipped="16" timestamp="2025-08-26T11:46:21" time="0.556" tests="16">
    <testcase classname="Dashboard Loading State should show loading skeleton when isLoading is true" name="Dashboard Loading State should show loading skeleton when isLoading is true" time="0">
      <skipped/>
    </testcase>
    <testcase classname="Dashboard Stats Display should display all stats correctly" name="Dashboard Stats Display should display all stats correctly" time="0">
      <skipped/>
    </testcase>
    <testcase classname="Dashboard Stats Display should calculate success rate correctly" name="Dashboard Stats Display should calculate success rate correctly" time="0">
      <skipped/>
    </testcase>
    <testcase classname="Dashboard Stats Display should display correct stat labels" name="Dashboard Stats Display should display correct stat labels" time="0">
      <skipped/>
    </testcase>
    <testcase classname="Dashboard Recent Executions should display recent executions correctly" name="Dashboard Recent Executions should display recent executions correctly" time="0">
      <skipped/>
    </testcase>
    <testcase classname="Dashboard Recent Executions should format execution time correctly" name="Dashboard Recent Executions should format execution time correctly" time="0">
      <skipped/>
    </testcase>
    <testcase classname="Dashboard Recent Executions should show execution duration when available" name="Dashboard Recent Executions should show execution duration when available" time="0">
      <skipped/>
    </testcase>
    <testcase classname="Dashboard Recent Executions should show empty state when no executions" name="Dashboard Recent Executions should show empty state when no executions" time="0">
      <skipped/>
    </testcase>
    <testcase classname="Dashboard Recent Executions should handle unknown configuration names" name="Dashboard Recent Executions should handle unknown configuration names" time="0">
      <skipped/>
    </testcase>
    <testcase classname="Dashboard Header and Refresh should display dashboard title and last updated time" name="Dashboard Header and Refresh should display dashboard title and last updated time" time="0">
      <skipped/>
    </testcase>
    <testcase classname="Dashboard Header and Refresh should show refresh button when onRefresh is provided" name="Dashboard Header and Refresh should show refresh button when onRefresh is provided" time="0">
      <skipped/>
    </testcase>
    <testcase classname="Dashboard Header and Refresh should not show refresh button when onRefresh is not provided" name="Dashboard Header and Refresh should not show refresh button when onRefresh is not provided" time="0">
      <skipped/>
    </testcase>
    <testcase classname="Dashboard Quick Actions should display quick actions section" name="Dashboard Quick Actions should display quick actions section" time="0">
      <skipped/>
    </testcase>
    <testcase classname="Dashboard Quick Actions should display quick action descriptions" name="Dashboard Quick Actions should display quick action descriptions" time="0">
      <skipped/>
    </testcase>
    <testcase classname="Dashboard Status Colors should apply correct colors for different statuses" name="Dashboard Status Colors should apply correct colors for different statuses" time="0">
      <skipped/>
    </testcase>
    <testcase classname="Dashboard Execution Count Display should show correct execution count in header" name="Dashboard Execution Count Display should show correct execution count in header" time="0">
      <skipped/>
    </testcase>
  </testsuite>
  <testsuite name="Secret Manager" errors="0" failures="0" skipped="27" timestamp="2025-08-26T11:46:22" time="0.289" tests="27">
    <testcase classname="Secret Manager getSecret 應該成功取得密鑰" name="Secret Manager getSecret 應該成功取得密鑰" time="0">
      <skipped/>
    </testcase>
    <testcase classname="Secret Manager getSecret 應該在密鑰名稱為空時拋出錯誤" name="Secret Manager getSecret 應該在密鑰名稱為空時拋出錯誤" time="0">
      <skipped/>
    </testcase>
    <testcase classname="Secret Manager getSecret 應該在 GOOGLE_CLOUD_PROJECT 未設定時拋出錯誤" name="Secret Manager getSecret 應該在 GOOGLE_CLOUD_PROJECT 未設定時拋出錯誤" time="0">
      <skipped/>
    </testcase>
    <testcase classname="Secret Manager getSecret 應該在密鑰不存在時拋出錯誤" name="Secret Manager getSecret 應該在密鑰不存在時拋出錯誤" time="0">
      <skipped/>
    </testcase>
    <testcase classname="Secret Manager getSecret 應該在沒有權限時拋出錯誤" name="Secret Manager getSecret 應該在沒有權限時拋出錯誤" time="0">
      <skipped/>
    </testcase>
    <testcase classname="Secret Manager getSecret 應該在密鑰為空時拋出錯誤" name="Secret Manager getSecret 應該在密鑰為空時拋出錯誤" time="0">
      <skipped/>
    </testcase>
    <testcase classname="Secret Manager getSecret 應該實作重試邏輯" name="Secret Manager getSecret 應該實作重試邏輯" time="0">
      <skipped/>
    </testcase>
    <testcase classname="Secret Manager getSecret 應該在重試次數用盡後拋出錯誤" name="Secret Manager getSecret 應該在重試次數用盡後拋出錯誤" time="0">
      <skipped/>
    </testcase>
    <testcase classname="Secret Manager getTelegramBotToken 應該成功取得有效的 Telegram Bot Token" name="Secret Manager getTelegramBotToken 應該成功取得有效的 Telegram Bot Token" time="0">
      <skipped/>
    </testcase>
    <testcase classname="Secret Manager getTelegramBotToken 應該使用預設密鑰名稱" name="Secret Manager getTelegramBotToken 應該使用預設密鑰名稱" time="0">
      <skipped/>
    </testcase>
    <testcase classname="Secret Manager getTelegramBotToken 應該在 Token 格式無效時拋出錯誤" name="Secret Manager getTelegramBotToken 應該在 Token 格式無效時拋出錯誤" time="0">
      <skipped/>
    </testcase>
    <testcase classname="Secret Manager getTelegramBotToken 應該接受各種有效的 Token 格式" name="Secret Manager getTelegramBotToken 應該接受各種有效的 Token 格式" time="0">
      <skipped/>
    </testcase>
    <testcase classname="Secret Manager validateSecretAccess 應該在密鑰可存取時回傳 true" name="Secret Manager validateSecretAccess 應該在密鑰可存取時回傳 true" time="0">
      <skipped/>
    </testcase>
    <testcase classname="Secret Manager validateSecretAccess 應該在密鑰不可存取時回傳 false" name="Secret Manager validateSecretAccess 應該在密鑰不可存取時回傳 false" time="0">
      <skipped/>
    </testcase>
    <testcase classname="Secret Manager getSecretMetadata 應該成功取得密鑰中繼資料" name="Secret Manager getSecretMetadata 應該成功取得密鑰中繼資料" time="0">
      <skipped/>
    </testcase>
    <testcase classname="Secret Manager getSecretMetadata 應該處理缺少中繼資料的情況" name="Secret Manager getSecretMetadata 應該處理缺少中繼資料的情況" time="0">
      <skipped/>
    </testcase>
    <testcase classname="Secret Manager getSecretMetadata 應該在取得中繼資料失敗時拋出錯誤" name="Secret Manager getSecretMetadata 應該在取得中繼資料失敗時拋出錯誤" time="0">
      <skipped/>
    </testcase>
    <testcase classname="Secret Manager listSecrets 應該成功列出所有密鑰" name="Secret Manager listSecrets 應該成功列出所有密鑰" time="0">
      <skipped/>
    </testcase>
    <testcase classname="Secret Manager listSecrets 應該處理空的密鑰列表" name="Secret Manager listSecrets 應該處理空的密鑰列表" time="0">
      <skipped/>
    </testcase>
    <testcase classname="Secret Manager listSecrets 應該過濾無效的密鑰名稱" name="Secret Manager listSecrets 應該過濾無效的密鑰名稱" time="0">
      <skipped/>
    </testcase>
    <testcase classname="Secret Manager listSecrets 應該在列出密鑰失敗時拋出錯誤" name="Secret Manager listSecrets 應該在列出密鑰失敗時拋出錯誤" time="0">
      <skipped/>
    </testcase>
    <testcase classname="Secret Manager getSecretManagerClient 應該回傳單例客戶端實例" name="Secret Manager getSecretManagerClient 應該回傳單例客戶端實例" time="0">
      <skipped/>
    </testcase>
    <testcase classname="Secret Manager getSecretManagerClient 應該在重設後建立新的客戶端實例" name="Secret Manager getSecretManagerClient 應該在重設後建立新的客戶端實例" time="0">
      <skipped/>
    </testcase>
    <testcase classname="Secret Manager SecretManagerError 應該正確建立錯誤實例" name="Secret Manager SecretManagerError 應該正確建立錯誤實例" time="0">
      <skipped/>
    </testcase>
    <testcase classname="Secret Manager SecretManagerError 應該使用預設值" name="Secret Manager SecretManagerError 應該使用預設值" time="0">
      <skipped/>
    </testcase>
    <testcase classname="Secret Manager 整合測試 應該處理完整的 Token 檢索流程" name="Secret Manager 整合測試 應該處理完整的 Token 檢索流程" time="0">
      <skipped/>
    </testcase>
    <testcase classname="Secret Manager 整合測試 應該處理權限錯誤的完整流程" name="Secret Manager 整合測試 應該處理權限錯誤的完整流程" time="0">
      <skipped/>
    </testcase>
  </testsuite>
  <testsuite name="/api/secrets/validate" errors="0" failures="0" skipped="9" timestamp="2025-08-26T11:46:21" time="0.684" tests="9">
    <testcase classname="/api/secrets/validate 應該只允許 GET 請求" name="/api/secrets/validate 應該只允許 GET 請求" time="0">
      <skipped/>
    </testcase>
    <testcase classname="/api/secrets/validate 應該成功驗證可存取的密鑰" name="/api/secrets/validate 應該成功驗證可存取的密鑰" time="0">
      <skipped/>
    </testcase>
    <testcase classname="/api/secrets/validate 應該處理無法存取的密鑰" name="/api/secrets/validate 應該處理無法存取的密鑰" time="0">
      <skipped/>
    </testcase>
    <testcase classname="/api/secrets/validate 應該處理可存取但 Token 格式無效的情況" name="/api/secrets/validate 應該處理可存取但 Token 格式無效的情況" time="0">
      <skipped/>
    </testcase>
    <testcase classname="/api/secrets/validate 應該處理中繼資料取得失敗" name="/api/secrets/validate 應該處理中繼資料取得失敗" time="0">
      <skipped/>
    </testcase>
    <testcase classname="/api/secrets/validate 應該處理 Secret Manager 錯誤" name="/api/secrets/validate 應該處理 Secret Manager 錯誤" time="0">
      <skipped/>
    </testcase>
    <testcase classname="/api/secrets/validate 應該處理一般錯誤" name="/api/secrets/validate 應該處理一般錯誤" time="0">
      <skipped/>
    </testcase>
    <testcase classname="/api/secrets/validate 應該使用預設密鑰名稱" name="/api/secrets/validate 應該使用預設密鑰名稱" time="0">
      <skipped/>
    </testcase>
    <testcase classname="/api/secrets/validate 應該處理 Token 驗證時的非 SecretManagerError" name="/api/secrets/validate 應該處理 Token 驗證時的非 SecretManagerError" time="0">
      <skipped/>
    </testcase>
  </testsuite>
  <testsuite name="SecretManagerStatus" errors="0" failures="0" skipped="14" timestamp="2025-08-26T11:46:21" time="0.703" tests="14">
    <testcase classname="SecretManagerStatus 應該顯示載入狀態" name="SecretManagerStatus 應該顯示載入狀態" time="0">
      <skipped/>
    </testcase>
    <testcase classname="SecretManagerStatus 應該顯示成功狀態" name="SecretManagerStatus 應該顯示成功狀態" time="0">
      <skipped/>
    </testcase>
    <testcase classname="SecretManagerStatus 應該顯示無法存取的錯誤狀態" name="SecretManagerStatus 應該顯示無法存取的錯誤狀態" time="0">
      <skipped/>
    </testcase>
    <testcase classname="SecretManagerStatus 應該顯示 Token 格式無效的警告狀態" name="SecretManagerStatus 應該顯示 Token 格式無效的警告狀態" time="0">
      <skipped/>
    </testcase>
    <testcase classname="SecretManagerStatus 應該顯示詳細資訊" name="SecretManagerStatus 應該顯示詳細資訊" time="0">
      <skipped/>
    </testcase>
    <testcase classname="SecretManagerStatus 應該處理網路錯誤" name="SecretManagerStatus 應該處理網路錯誤" time="0">
      <skipped/>
    </testcase>
    <testcase classname="SecretManagerStatus 應該處理 API 錯誤回應" name="SecretManagerStatus 應該處理 API 錯誤回應" time="0">
      <skipped/>
    </testcase>
    <testcase classname="SecretManagerStatus 應該支援重新驗證功能" name="SecretManagerStatus 應該支援重新驗證功能" time="0">
      <skipped/>
    </testcase>
    <testcase classname="SecretManagerStatus 應該呼叫 onStatusChange 回調" name="SecretManagerStatus 應該呼叫 onStatusChange 回調" time="0">
      <skipped/>
    </testcase>
    <testcase classname="SecretManagerStatus 應該在錯誤時呼叫 onStatusChange 為 false" name="SecretManagerStatus 應該在錯誤時呼叫 onStatusChange 為 false" time="0">
      <skipped/>
    </testcase>
    <testcase classname="SecretManagerStatus 應該顯示設定建議" name="SecretManagerStatus 應該顯示設定建議" time="0">
      <skipped/>
    </testcase>
    <testcase classname="SecretManagerStatus 應該顯示 Token 格式錯誤的建議" name="SecretManagerStatus 應該顯示 Token 格式錯誤的建議" time="0">
      <skipped/>
    </testcase>
    <testcase classname="SecretManagerStatus 應該顯示錯誤詳情" name="SecretManagerStatus 應該顯示錯誤詳情" time="0">
      <skipped/>
    </testcase>
    <testcase classname="SecretManagerStatus 應該套用自訂 className" name="SecretManagerStatus 應該套用自訂 className" time="0">
      <skipped/>
    </testcase>
  </testsuite>
</testsuites>