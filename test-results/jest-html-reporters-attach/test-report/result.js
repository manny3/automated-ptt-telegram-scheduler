window.jest_html_reporters_callback__({"numFailedTestSuites":21,"numFailedTests":0,"numPassedTestSuites":0,"numPassedTests":0,"numPendingTestSuites":0,"numPendingTests":0,"numRuntimeErrorTestSuites":21,"numTodoTests":0,"numTotalTestSuites":21,"numTotalTests":0,"startTime":1755615257560,"success":false,"testResults":[{"numFailingTests":0,"numPassingTests":0,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":0,"runtime":0,"slow":false,"start":0},"testFilePath":"/Users/tony/tony-space/Tony/python/automated-ptt-telegram-scheduler/src/app/api/configurations/[id]/__tests__/route.test.ts","failureMessage":"  \u001b[1m● \u001b[22mTest suite failed to run\n\n    \u001b[1m\u001b[31mJest encountered an unexpected token\u001b[39m\u001b[22m\n\n    Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.\n\n    Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.\n\n    By default \"node_modules\" folder is ignored by transformers.\n\n    Here's what you can do:\n     • If you are trying to use ECMAScript Modules, see \u001b[4mhttps://jestjs.io/docs/ecmascript-modules\u001b[24m for how to enable it.\n     • If you are trying to use TypeScript, see \u001b[4mhttps://jestjs.io/docs/getting-started#using-typescript\u001b[24m\n     • To have some of your \"node_modules\" files transformed, you can specify a custom \u001b[1m\"transformIgnorePatterns\"\u001b[22m in your config.\n     • If you need a custom transformation specify a \u001b[1m\"transform\"\u001b[22m option in your config.\n     • If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the \u001b[1m\"moduleNameMapper\"\u001b[22m config option.\n\n    You'll find more details and examples of these config options in the docs:\n    \u001b[36mhttps://jestjs.io/docs/configuration\u001b[39m\n    For information about custom transformations, see:\n    \u001b[36mhttps://jestjs.io/docs/code-transformation\u001b[39m\n\n    \u001b[1m\u001b[31mDetails:\u001b[39m\u001b[22m\n\n    SyntaxError: /Users/tony/tony-space/Tony/python/automated-ptt-telegram-scheduler/src/app/api/configurations/[id]/__tests__/route.test.ts: Missing semicolon. (28:53)\n\n    \u001b[0m \u001b[90m 26 |\u001b[39m } \u001b[36mfrom\u001b[39m \u001b[32m'@/lib/validation'\u001b[39m\n     \u001b[90m 27 |\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 28 |\u001b[39m \u001b[36mconst\u001b[39m mockGetConfigurationById \u001b[33m=\u001b[39m getConfigurationById \u001b[36mas\u001b[39m jest\u001b[33m.\u001b[39m\u001b[33mMockedFunction\u001b[39m\u001b[33m<\u001b[39m\u001b[36mtypeof\u001b[39m getConfigurationById\u001b[33m>\u001b[39m\n     \u001b[90m    |\u001b[39m                                                      \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 29 |\u001b[39m \u001b[36mconst\u001b[39m mockUpdateConfiguration \u001b[33m=\u001b[39m updateConfiguration \u001b[36mas\u001b[39m jest\u001b[33m.\u001b[39m\u001b[33mMockedFunction\u001b[39m\u001b[33m<\u001b[39m\u001b[36mtypeof\u001b[39m updateConfiguration\u001b[33m>\u001b[39m\n     \u001b[90m 30 |\u001b[39m \u001b[36mconst\u001b[39m mockDeleteConfiguration \u001b[33m=\u001b[39m deleteConfiguration \u001b[36mas\u001b[39m jest\u001b[33m.\u001b[39m\u001b[33mMockedFunction\u001b[39m\u001b[33m<\u001b[39m\u001b[36mtypeof\u001b[39m deleteConfiguration\u001b[33m>\u001b[39m\n     \u001b[90m 31 |\u001b[39m \u001b[36mconst\u001b[39m mockValidateUpdateConfiguration \u001b[33m=\u001b[39m validateUpdateConfiguration \u001b[36mas\u001b[39m jest\u001b[33m.\u001b[39m\u001b[33mMockedFunction\u001b[39m\u001b[33m<\u001b[39m\u001b[36mtypeof\u001b[39m validateUpdateConfiguration\u001b[33m>\u001b[39m\u001b[0m\n\n      \u001b[2mat constructor (\u001b[22mnode_modules/@babel/parser/src/parse-error.ts\u001b[2m:95:45)\u001b[22m\n      \u001b[2mat Parser.toParseError [as raise] (\u001b[22mnode_modules/@babel/parser/src/tokenizer/index.ts\u001b[2m:1503:19)\u001b[22m\n      \u001b[2mat Parser.raise [as semicolon] (\u001b[22mnode_modules/@babel/parser/src/parser/util.ts\u001b[2m:149:10)\u001b[22m\n      \u001b[2mat Parser.semicolon [as parseVarStatement] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1247:10)\u001b[22m\n      \u001b[2mat Parser.parseVarStatement [as parseStatementContent] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:607:21)\u001b[22m\n      \u001b[2mat Parser.parseStatementContent [as parseStatementLike] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:477:17)\u001b[22m\n      \u001b[2mat Parser.parseStatementLike [as parseModuleItem] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:414:17)\u001b[22m\n      \u001b[2mat Parser.parseModuleItem [as parseBlockOrModuleBlockBody] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1438:16)\u001b[22m\n      \u001b[2mat Parser.parseBlockOrModuleBlockBody [as parseBlockBody] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1412:10)\u001b[22m\n      \u001b[2mat Parser.parseBlockBody [as parseProgram] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:229:10)\u001b[22m\n      \u001b[2mat Parser.parseProgram [as parseTopLevel] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:203:25)\u001b[22m\n      \u001b[2mat Parser.parseTopLevel [as parse] (\u001b[22mnode_modules/@babel/parser/src/parser/index.ts\u001b[2m:93:10)\u001b[22m\n      \u001b[2mat parse (\u001b[22mnode_modules/@babel/parser/src/index.ts\u001b[2m:92:38)\u001b[22m\n      \u001b[2mat parser (\u001b[22mnode_modules/@babel/core/src/parser/index.ts\u001b[2m:28:19)\u001b[22m\n          at parser.next (<anonymous>)\n      \u001b[2mat normalizeFile (\u001b[22mnode_modules/@babel/core/src/transformation/normalize-file.ts\u001b[2m:49:24)\u001b[22m\n          at normalizeFile.next (<anonymous>)\n      \u001b[2mat run (\u001b[22mnode_modules/@babel/core/src/transformation/index.ts\u001b[2m:40:36)\u001b[22m\n          at run.next (<anonymous>)\n      \u001b[2mat transform (\u001b[22mnode_modules/@babel/core/src/transform.ts\u001b[2m:29:20)\u001b[22m\n          at transform.next (<anonymous>)\n      \u001b[2mat evaluateSync (\u001b[22mnode_modules/gensync/index.js\u001b[2m:251:28)\u001b[22m\n      \u001b[2mat sync (\u001b[22mnode_modules/gensync/index.js\u001b[2m:89:14)\u001b[22m\n      \u001b[2mat fn (\u001b[22mnode_modules/@babel/core/src/errors/rewrite-stack-trace.ts\u001b[2m:99:14)\u001b[22m\n      \u001b[2mat transformSync (\u001b[22mnode_modules/@babel/core/src/transform.ts\u001b[2m:66:52)\u001b[22m\n      \u001b[2mat ScriptTransformer.transformSource (\u001b[22mnode_modules/@jest/transform/build/ScriptTransformer.js\u001b[2m:545:31)\u001b[22m\n      \u001b[2mat ScriptTransformer._transformAndBuildScript (\u001b[22mnode_modules/@jest/transform/build/ScriptTransformer.js\u001b[2m:674:40)\u001b[22m\n      \u001b[2mat ScriptTransformer.transform (\u001b[22mnode_modules/@jest/transform/build/ScriptTransformer.js\u001b[2m:726:19)\u001b[22m\n","testResults":[]},{"numFailingTests":0,"numPassingTests":0,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":0,"runtime":0,"slow":false,"start":0},"testFilePath":"/Users/tony/tony-space/Tony/python/automated-ptt-telegram-scheduler/src/__tests__/e2e/complete-workflow.test.ts","failureMessage":"  \u001b[1m● \u001b[22mTest suite failed to run\n\n    \u001b[1m\u001b[31mJest encountered an unexpected token\u001b[39m\u001b[22m\n\n    Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.\n\n    Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.\n\n    By default \"node_modules\" folder is ignored by transformers.\n\n    Here's what you can do:\n     • If you are trying to use ECMAScript Modules, see \u001b[4mhttps://jestjs.io/docs/ecmascript-modules\u001b[24m for how to enable it.\n     • If you are trying to use TypeScript, see \u001b[4mhttps://jestjs.io/docs/getting-started#using-typescript\u001b[24m\n     • To have some of your \"node_modules\" files transformed, you can specify a custom \u001b[1m\"transformIgnorePatterns\"\u001b[22m in your config.\n     • If you need a custom transformation specify a \u001b[1m\"transform\"\u001b[22m option in your config.\n     • If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the \u001b[1m\"moduleNameMapper\"\u001b[22m config option.\n\n    You'll find more details and examples of these config options in the docs:\n    \u001b[36mhttps://jestjs.io/docs/configuration\u001b[39m\n    For information about custom transformations, see:\n    \u001b[36mhttps://jestjs.io/docs/code-transformation\u001b[39m\n\n    \u001b[1m\u001b[31mDetails:\u001b[39m\u001b[22m\n\n    SyntaxError: /Users/tony/tony-space/Tony/python/automated-ptt-telegram-scheduler/src/__tests__/e2e/complete-workflow.test.ts: Missing semicolon. (20:19)\n\n    \u001b[0m \u001b[90m 18 |\u001b[39m\n     \u001b[90m 19 |\u001b[39m describe(\u001b[32m'完整用戶工作流程 E2E 測試'\u001b[39m\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m {\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 20 |\u001b[39m   \u001b[36mlet\u001b[39m mockFirestore\u001b[33m:\u001b[39m any\n     \u001b[90m    |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 21 |\u001b[39m   \u001b[36mlet\u001b[39m mockSecretManager\u001b[33m:\u001b[39m any\n     \u001b[90m 22 |\u001b[39m   \u001b[36mlet\u001b[39m mockCloudScraper\u001b[33m:\u001b[39m any\n     \u001b[90m 23 |\u001b[39m\u001b[0m\n\n      \u001b[2mat constructor (\u001b[22mnode_modules/@babel/parser/src/parse-error.ts\u001b[2m:95:45)\u001b[22m\n      \u001b[2mat Parser.toParseError [as raise] (\u001b[22mnode_modules/@babel/parser/src/tokenizer/index.ts\u001b[2m:1503:19)\u001b[22m\n      \u001b[2mat Parser.raise [as semicolon] (\u001b[22mnode_modules/@babel/parser/src/parser/util.ts\u001b[2m:149:10)\u001b[22m\n      \u001b[2mat Parser.semicolon [as parseVarStatement] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1247:10)\u001b[22m\n      \u001b[2mat Parser.parseVarStatement [as parseStatementContent] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:607:21)\u001b[22m\n      \u001b[2mat Parser.parseStatementContent [as parseStatementLike] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:477:17)\u001b[22m\n      \u001b[2mat Parser.parseStatementLike [as parseStatementListItem] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:426:17)\u001b[22m\n      \u001b[2mat Parser.parseStatementListItem [as parseBlockOrModuleBlockBody] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1439:16)\u001b[22m\n      \u001b[2mat Parser.parseBlockOrModuleBlockBody [as parseBlockBody] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1412:10)\u001b[22m\n      \u001b[2mat Parser.parseBlockBody [as parseBlock] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1380:10)\u001b[22m\n      \u001b[2mat Parser.parseBlock [as parseFunctionBody] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:2616:24)\u001b[22m\n      \u001b[2mat Parser.parseFunctionBody [as parseArrowExpression] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:2553:10)\u001b[22m\n      \u001b[2mat Parser.parseArrowExpression [as parseParenAndDistinguishExpression] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:1837:12)\u001b[22m\n      \u001b[2mat Parser.parseParenAndDistinguishExpression [as parseExprAtom] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:1162:21)\u001b[22m\n      \u001b[2mat Parser.parseExprAtom [as parseExprSubscripts] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:734:23)\u001b[22m\n      \u001b[2mat Parser.parseExprSubscripts [as parseUpdate] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:713:21)\u001b[22m\n      \u001b[2mat Parser.parseUpdate [as parseMaybeUnary] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:675:23)\u001b[22m\n      \u001b[2mat Parser.parseMaybeUnary [as parseMaybeUnaryOrPrivate] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:409:14)\u001b[22m\n      \u001b[2mat Parser.parseMaybeUnaryOrPrivate [as parseExprOps] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:421:23)\u001b[22m\n      \u001b[2mat Parser.parseExprOps [as parseMaybeConditional] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:376:23)\u001b[22m\n      \u001b[2mat Parser.parseMaybeConditional [as parseMaybeAssign] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:301:21)\u001b[22m\n      \u001b[2mat parseMaybeAssign (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:257:12)\u001b[22m\n      \u001b[2mat Parser.callback [as allowInAnd] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:3192:12)\u001b[22m\n      \u001b[2mat Parser.allowInAnd [as parseMaybeAssignAllowIn] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:256:17)\u001b[22m\n      \u001b[2mat Parser.parseMaybeAssignAllowIn [as parseMaybeAssignAllowInOrVoidPattern] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:3306:17)\u001b[22m\n      \u001b[2mat Parser.parseMaybeAssignAllowInOrVoidPattern [as parseExprListItem] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:2788:18)\u001b[22m\n      \u001b[2mat Parser.parseExprListItem [as parseCallExpressionArguments] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:1034:14)\u001b[22m\n      \u001b[2mat Parser.parseCallExpressionArguments [as parseCoverCallAndAsyncArrowHead] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:914:29)\u001b[22m\n      \u001b[2mat Parser.parseCoverCallAndAsyncArrowHead [as parseSubscript] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:796:19)\u001b[22m\n      \u001b[2mat Parser.parseSubscript [as parseSubscripts] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:755:19)\u001b[22m\n      \u001b[2mat Parser.parseSubscripts [as parseExprSubscripts] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:740:17)\u001b[22m\n      \u001b[2mat Parser.parseExprSubscripts [as parseUpdate] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:713:21)\u001b[22m\n      \u001b[2mat Parser.parseUpdate [as parseMaybeUnary] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:675:23)\u001b[22m\n      \u001b[2mat Parser.parseMaybeUnary [as parseMaybeUnaryOrPrivate] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:409:14)\u001b[22m\n      \u001b[2mat Parser.parseMaybeUnaryOrPrivate [as parseExprOps] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:421:23)\u001b[22m\n      \u001b[2mat Parser.parseExprOps [as parseMaybeConditional] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:376:23)\u001b[22m\n      \u001b[2mat Parser.parseMaybeConditional [as parseMaybeAssign] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:301:21)\u001b[22m\n      \u001b[2mat Parser.parseMaybeAssign [as parseExpressionBase] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:226:23)\u001b[22m\n      \u001b[2mat parseExpressionBase (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:217:39)\u001b[22m\n      \u001b[2mat Parser.callback [as allowInAnd] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:3187:16)\u001b[22m\n      \u001b[2mat Parser.allowInAnd [as parseExpression] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:217:17)\u001b[22m\n      \u001b[2mat Parser.parseExpression [as parseStatementContent] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:683:23)\u001b[22m\n      \u001b[2mat Parser.parseStatementContent [as parseStatementLike] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:477:17)\u001b[22m\n      \u001b[2mat Parser.parseStatementLike [as parseModuleItem] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:414:17)\u001b[22m\n      \u001b[2mat Parser.parseModuleItem [as parseBlockOrModuleBlockBody] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1438:16)\u001b[22m\n      \u001b[2mat Parser.parseBlockOrModuleBlockBody [as parseBlockBody] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1412:10)\u001b[22m\n      \u001b[2mat Parser.parseBlockBody [as parseProgram] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:229:10)\u001b[22m\n      \u001b[2mat Parser.parseProgram [as parseTopLevel] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:203:25)\u001b[22m\n      \u001b[2mat Parser.parseTopLevel [as parse] (\u001b[22mnode_modules/@babel/parser/src/parser/index.ts\u001b[2m:93:10)\u001b[22m\n      \u001b[2mat parse (\u001b[22mnode_modules/@babel/parser/src/index.ts\u001b[2m:92:38)\u001b[22m\n      \u001b[2mat parser (\u001b[22mnode_modules/@babel/core/src/parser/index.ts\u001b[2m:28:19)\u001b[22m\n          at parser.next (<anonymous>)\n      \u001b[2mat normalizeFile (\u001b[22mnode_modules/@babel/core/src/transformation/normalize-file.ts\u001b[2m:49:24)\u001b[22m\n          at normalizeFile.next (<anonymous>)\n      \u001b[2mat run (\u001b[22mnode_modules/@babel/core/src/transformation/index.ts\u001b[2m:40:36)\u001b[22m\n          at run.next (<anonymous>)\n      \u001b[2mat transform (\u001b[22mnode_modules/@babel/core/src/transform.ts\u001b[2m:29:20)\u001b[22m\n          at transform.next (<anonymous>)\n      \u001b[2mat evaluateSync (\u001b[22mnode_modules/gensync/index.js\u001b[2m:251:28)\u001b[22m\n      \u001b[2mat sync (\u001b[22mnode_modules/gensync/index.js\u001b[2m:89:14)\u001b[22m\n      \u001b[2mat fn (\u001b[22mnode_modules/@babel/core/src/errors/rewrite-stack-trace.ts\u001b[2m:99:14)\u001b[22m\n      \u001b[2mat transformSync (\u001b[22mnode_modules/@babel/core/src/transform.ts\u001b[2m:66:52)\u001b[22m\n      \u001b[2mat ScriptTransformer.transformSource (\u001b[22mnode_modules/@jest/transform/build/ScriptTransformer.js\u001b[2m:545:31)\u001b[22m\n      \u001b[2mat ScriptTransformer._transformAndBuildScript (\u001b[22mnode_modules/@jest/transform/build/ScriptTransformer.js\u001b[2m:674:40)\u001b[22m\n      \u001b[2mat ScriptTransformer.transform (\u001b[22mnode_modules/@jest/transform/build/ScriptTransformer.js\u001b[2m:726:19)\u001b[22m\n","testResults":[]},{"numFailingTests":0,"numPassingTests":0,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":0,"runtime":0,"slow":false,"start":0},"testFilePath":"/Users/tony/tony-space/Tony/python/automated-ptt-telegram-scheduler/src/lib/__tests__/secret-manager.test.ts","failureMessage":"  \u001b[1m● \u001b[22mTest suite failed to run\n\n    \u001b[1m\u001b[31mJest encountered an unexpected token\u001b[39m\u001b[22m\n\n    Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.\n\n    Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.\n\n    By default \"node_modules\" folder is ignored by transformers.\n\n    Here's what you can do:\n     • If you are trying to use ECMAScript Modules, see \u001b[4mhttps://jestjs.io/docs/ecmascript-modules\u001b[24m for how to enable it.\n     • If you are trying to use TypeScript, see \u001b[4mhttps://jestjs.io/docs/getting-started#using-typescript\u001b[24m\n     • To have some of your \"node_modules\" files transformed, you can specify a custom \u001b[1m\"transformIgnorePatterns\"\u001b[22m in your config.\n     • If you need a custom transformation specify a \u001b[1m\"transform\"\u001b[22m option in your config.\n     • If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the \u001b[1m\"moduleNameMapper\"\u001b[22m config option.\n\n    You'll find more details and examples of these config options in the docs:\n    \u001b[36mhttps://jestjs.io/docs/configuration\u001b[39m\n    For information about custom transformations, see:\n    \u001b[36mhttps://jestjs.io/docs/code-transformation\u001b[39m\n\n    \u001b[1m\u001b[31mDetails:\u001b[39m\u001b[22m\n\n    /Users/tony/tony-space/Tony/python/automated-ptt-telegram-scheduler/src/lib/__tests__/secret-manager.test.ts:25\n    import { jest } from '@jest/globals';\n    ^^^^^^\n\n    SyntaxError: Cannot use import statement outside a module\n\n      \u001b[2mat Runtime.createScriptFromCode (\u001b[22mnode_modules/jest-runtime/build/index.js\u001b[2m:1505:14)\u001b[22m\n","testResults":[]},{"numFailingTests":0,"numPassingTests":0,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":0,"runtime":0,"slow":false,"start":0},"testFilePath":"/Users/tony/tony-space/Tony/python/automated-ptt-telegram-scheduler/src/__tests__/integration/ptt-telegram-integration.test.ts","failureMessage":"  \u001b[1m● \u001b[22mTest suite failed to run\n\n    \u001b[1m\u001b[31mJest encountered an unexpected token\u001b[39m\u001b[22m\n\n    Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.\n\n    Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.\n\n    By default \"node_modules\" folder is ignored by transformers.\n\n    Here's what you can do:\n     • If you are trying to use ECMAScript Modules, see \u001b[4mhttps://jestjs.io/docs/ecmascript-modules\u001b[24m for how to enable it.\n     • If you are trying to use TypeScript, see \u001b[4mhttps://jestjs.io/docs/getting-started#using-typescript\u001b[24m\n     • To have some of your \"node_modules\" files transformed, you can specify a custom \u001b[1m\"transformIgnorePatterns\"\u001b[22m in your config.\n     • If you need a custom transformation specify a \u001b[1m\"transform\"\u001b[22m option in your config.\n     • If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the \u001b[1m\"moduleNameMapper\"\u001b[22m config option.\n\n    You'll find more details and examples of these config options in the docs:\n    \u001b[36mhttps://jestjs.io/docs/configuration\u001b[39m\n    For information about custom transformations, see:\n    \u001b[36mhttps://jestjs.io/docs/code-transformation\u001b[39m\n\n    \u001b[1m\u001b[31mDetails:\u001b[39m\u001b[22m\n\n    SyntaxError: /Users/tony/tony-space/Tony/python/automated-ptt-telegram-scheduler/src/__tests__/integration/ptt-telegram-integration.test.ts: Missing semicolon. (15:19)\n\n    \u001b[0m \u001b[90m 13 |\u001b[39m\n     \u001b[90m 14 |\u001b[39m describe(\u001b[32m'PTT-Telegram 整合測試'\u001b[39m\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m {\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 15 |\u001b[39m   \u001b[36mlet\u001b[39m mockFirestore\u001b[33m:\u001b[39m any\n     \u001b[90m    |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 16 |\u001b[39m   \u001b[36mlet\u001b[39m mockSecretManager\u001b[33m:\u001b[39m any\n     \u001b[90m 17 |\u001b[39m   \u001b[36mlet\u001b[39m mockCloudScraper\u001b[33m:\u001b[39m any\n     \u001b[90m 18 |\u001b[39m\u001b[0m\n\n      \u001b[2mat constructor (\u001b[22mnode_modules/@babel/parser/src/parse-error.ts\u001b[2m:95:45)\u001b[22m\n      \u001b[2mat Parser.toParseError [as raise] (\u001b[22mnode_modules/@babel/parser/src/tokenizer/index.ts\u001b[2m:1503:19)\u001b[22m\n      \u001b[2mat Parser.raise [as semicolon] (\u001b[22mnode_modules/@babel/parser/src/parser/util.ts\u001b[2m:149:10)\u001b[22m\n      \u001b[2mat Parser.semicolon [as parseVarStatement] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1247:10)\u001b[22m\n      \u001b[2mat Parser.parseVarStatement [as parseStatementContent] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:607:21)\u001b[22m\n      \u001b[2mat Parser.parseStatementContent [as parseStatementLike] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:477:17)\u001b[22m\n      \u001b[2mat Parser.parseStatementLike [as parseStatementListItem] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:426:17)\u001b[22m\n      \u001b[2mat Parser.parseStatementListItem [as parseBlockOrModuleBlockBody] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1439:16)\u001b[22m\n      \u001b[2mat Parser.parseBlockOrModuleBlockBody [as parseBlockBody] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1412:10)\u001b[22m\n      \u001b[2mat Parser.parseBlockBody [as parseBlock] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1380:10)\u001b[22m\n      \u001b[2mat Parser.parseBlock [as parseFunctionBody] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:2616:24)\u001b[22m\n      \u001b[2mat Parser.parseFunctionBody [as parseArrowExpression] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:2553:10)\u001b[22m\n      \u001b[2mat Parser.parseArrowExpression [as parseParenAndDistinguishExpression] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:1837:12)\u001b[22m\n      \u001b[2mat Parser.parseParenAndDistinguishExpression [as parseExprAtom] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:1162:21)\u001b[22m\n      \u001b[2mat Parser.parseExprAtom [as parseExprSubscripts] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:734:23)\u001b[22m\n      \u001b[2mat Parser.parseExprSubscripts [as parseUpdate] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:713:21)\u001b[22m\n      \u001b[2mat Parser.parseUpdate [as parseMaybeUnary] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:675:23)\u001b[22m\n      \u001b[2mat Parser.parseMaybeUnary [as parseMaybeUnaryOrPrivate] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:409:14)\u001b[22m\n      \u001b[2mat Parser.parseMaybeUnaryOrPrivate [as parseExprOps] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:421:23)\u001b[22m\n      \u001b[2mat Parser.parseExprOps [as parseMaybeConditional] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:376:23)\u001b[22m\n      \u001b[2mat Parser.parseMaybeConditional [as parseMaybeAssign] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:301:21)\u001b[22m\n      \u001b[2mat parseMaybeAssign (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:257:12)\u001b[22m\n      \u001b[2mat Parser.callback [as allowInAnd] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:3192:12)\u001b[22m\n      \u001b[2mat Parser.allowInAnd [as parseMaybeAssignAllowIn] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:256:17)\u001b[22m\n      \u001b[2mat Parser.parseMaybeAssignAllowIn [as parseMaybeAssignAllowInOrVoidPattern] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:3306:17)\u001b[22m\n      \u001b[2mat Parser.parseMaybeAssignAllowInOrVoidPattern [as parseExprListItem] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:2788:18)\u001b[22m\n      \u001b[2mat Parser.parseExprListItem [as parseCallExpressionArguments] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:1034:14)\u001b[22m\n      \u001b[2mat Parser.parseCallExpressionArguments [as parseCoverCallAndAsyncArrowHead] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:914:29)\u001b[22m\n      \u001b[2mat Parser.parseCoverCallAndAsyncArrowHead [as parseSubscript] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:796:19)\u001b[22m\n      \u001b[2mat Parser.parseSubscript [as parseSubscripts] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:755:19)\u001b[22m\n      \u001b[2mat Parser.parseSubscripts [as parseExprSubscripts] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:740:17)\u001b[22m\n      \u001b[2mat Parser.parseExprSubscripts [as parseUpdate] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:713:21)\u001b[22m\n      \u001b[2mat Parser.parseUpdate [as parseMaybeUnary] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:675:23)\u001b[22m\n      \u001b[2mat Parser.parseMaybeUnary [as parseMaybeUnaryOrPrivate] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:409:14)\u001b[22m\n      \u001b[2mat Parser.parseMaybeUnaryOrPrivate [as parseExprOps] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:421:23)\u001b[22m\n      \u001b[2mat Parser.parseExprOps [as parseMaybeConditional] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:376:23)\u001b[22m\n      \u001b[2mat Parser.parseMaybeConditional [as parseMaybeAssign] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:301:21)\u001b[22m\n      \u001b[2mat Parser.parseMaybeAssign [as parseExpressionBase] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:226:23)\u001b[22m\n      \u001b[2mat parseExpressionBase (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:217:39)\u001b[22m\n      \u001b[2mat Parser.callback [as allowInAnd] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:3187:16)\u001b[22m\n      \u001b[2mat Parser.allowInAnd [as parseExpression] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:217:17)\u001b[22m\n      \u001b[2mat Parser.parseExpression [as parseStatementContent] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:683:23)\u001b[22m\n      \u001b[2mat Parser.parseStatementContent [as parseStatementLike] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:477:17)\u001b[22m\n      \u001b[2mat Parser.parseStatementLike [as parseModuleItem] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:414:17)\u001b[22m\n      \u001b[2mat Parser.parseModuleItem [as parseBlockOrModuleBlockBody] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1438:16)\u001b[22m\n      \u001b[2mat Parser.parseBlockOrModuleBlockBody [as parseBlockBody] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1412:10)\u001b[22m\n      \u001b[2mat Parser.parseBlockBody [as parseProgram] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:229:10)\u001b[22m\n      \u001b[2mat Parser.parseProgram [as parseTopLevel] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:203:25)\u001b[22m\n      \u001b[2mat Parser.parseTopLevel [as parse] (\u001b[22mnode_modules/@babel/parser/src/parser/index.ts\u001b[2m:93:10)\u001b[22m\n      \u001b[2mat parse (\u001b[22mnode_modules/@babel/parser/src/index.ts\u001b[2m:92:38)\u001b[22m\n      \u001b[2mat parser (\u001b[22mnode_modules/@babel/core/src/parser/index.ts\u001b[2m:28:19)\u001b[22m\n          at parser.next (<anonymous>)\n      \u001b[2mat normalizeFile (\u001b[22mnode_modules/@babel/core/src/transformation/normalize-file.ts\u001b[2m:49:24)\u001b[22m\n          at normalizeFile.next (<anonymous>)\n      \u001b[2mat run (\u001b[22mnode_modules/@babel/core/src/transformation/index.ts\u001b[2m:40:36)\u001b[22m\n          at run.next (<anonymous>)\n      \u001b[2mat transform (\u001b[22mnode_modules/@babel/core/src/transform.ts\u001b[2m:29:20)\u001b[22m\n          at transform.next (<anonymous>)\n      \u001b[2mat evaluateSync (\u001b[22mnode_modules/gensync/index.js\u001b[2m:251:28)\u001b[22m\n      \u001b[2mat sync (\u001b[22mnode_modules/gensync/index.js\u001b[2m:89:14)\u001b[22m\n      \u001b[2mat fn (\u001b[22mnode_modules/@babel/core/src/errors/rewrite-stack-trace.ts\u001b[2m:99:14)\u001b[22m\n      \u001b[2mat transformSync (\u001b[22mnode_modules/@babel/core/src/transform.ts\u001b[2m:66:52)\u001b[22m\n      \u001b[2mat ScriptTransformer.transformSource (\u001b[22mnode_modules/@jest/transform/build/ScriptTransformer.js\u001b[2m:545:31)\u001b[22m\n      \u001b[2mat ScriptTransformer._transformAndBuildScript (\u001b[22mnode_modules/@jest/transform/build/ScriptTransformer.js\u001b[2m:674:40)\u001b[22m\n      \u001b[2mat ScriptTransformer.transform (\u001b[22mnode_modules/@jest/transform/build/ScriptTransformer.js\u001b[2m:726:19)\u001b[22m\n","testResults":[]},{"numFailingTests":0,"numPassingTests":0,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":0,"runtime":0,"slow":false,"start":0},"testFilePath":"/Users/tony/tony-space/Tony/python/automated-ptt-telegram-scheduler/src/lib/__tests__/ptt-scraper.test.ts","failureMessage":"  \u001b[1m● \u001b[22mTest suite failed to run\n\n    \u001b[1m\u001b[31mJest encountered an unexpected token\u001b[39m\u001b[22m\n\n    Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.\n\n    Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.\n\n    By default \"node_modules\" folder is ignored by transformers.\n\n    Here's what you can do:\n     • If you are trying to use ECMAScript Modules, see \u001b[4mhttps://jestjs.io/docs/ecmascript-modules\u001b[24m for how to enable it.\n     • If you are trying to use TypeScript, see \u001b[4mhttps://jestjs.io/docs/getting-started#using-typescript\u001b[24m\n     • To have some of your \"node_modules\" files transformed, you can specify a custom \u001b[1m\"transformIgnorePatterns\"\u001b[22m in your config.\n     • If you need a custom transformation specify a \u001b[1m\"transform\"\u001b[22m option in your config.\n     • If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the \u001b[1m\"moduleNameMapper\"\u001b[22m config option.\n\n    You'll find more details and examples of these config options in the docs:\n    \u001b[36mhttps://jestjs.io/docs/configuration\u001b[39m\n    For information about custom transformations, see:\n    \u001b[36mhttps://jestjs.io/docs/code-transformation\u001b[39m\n\n    \u001b[1m\u001b[31mDetails:\u001b[39m\u001b[22m\n\n    SyntaxError: /Users/tony/tony-space/Tony/python/automated-ptt-telegram-scheduler/src/lib/__tests__/ptt-scraper.test.ts: Missing semicolon. (7:25)\n\n    \u001b[0m \u001b[90m  5 |\u001b[39m \u001b[90m// Mock axios\u001b[39m\n     \u001b[90m  6 |\u001b[39m jest\u001b[33m.\u001b[39mmock(\u001b[32m'axios'\u001b[39m)\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m  7 |\u001b[39m \u001b[36mconst\u001b[39m mockedAxios \u001b[33m=\u001b[39m axios \u001b[36mas\u001b[39m jest\u001b[33m.\u001b[39m\u001b[33mMocked\u001b[39m\u001b[33m<\u001b[39m\u001b[36mtypeof\u001b[39m axios\u001b[33m>\u001b[39m\n     \u001b[90m    |\u001b[39m                          \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m  8 |\u001b[39m\n     \u001b[90m  9 |\u001b[39m \u001b[90m// Mock axios.create\u001b[39m\n     \u001b[90m 10 |\u001b[39m \u001b[36mconst\u001b[39m mockAxiosInstance \u001b[33m=\u001b[39m {\u001b[0m\n\n      \u001b[2mat constructor (\u001b[22mnode_modules/@babel/parser/src/parse-error.ts\u001b[2m:95:45)\u001b[22m\n      \u001b[2mat Parser.toParseError [as raise] (\u001b[22mnode_modules/@babel/parser/src/tokenizer/index.ts\u001b[2m:1503:19)\u001b[22m\n      \u001b[2mat Parser.raise [as semicolon] (\u001b[22mnode_modules/@babel/parser/src/parser/util.ts\u001b[2m:149:10)\u001b[22m\n      \u001b[2mat Parser.semicolon [as parseVarStatement] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1247:10)\u001b[22m\n      \u001b[2mat Parser.parseVarStatement [as parseStatementContent] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:607:21)\u001b[22m\n      \u001b[2mat Parser.parseStatementContent [as parseStatementLike] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:477:17)\u001b[22m\n      \u001b[2mat Parser.parseStatementLike [as parseModuleItem] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:414:17)\u001b[22m\n      \u001b[2mat Parser.parseModuleItem [as parseBlockOrModuleBlockBody] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1438:16)\u001b[22m\n      \u001b[2mat Parser.parseBlockOrModuleBlockBody [as parseBlockBody] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1412:10)\u001b[22m\n      \u001b[2mat Parser.parseBlockBody [as parseProgram] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:229:10)\u001b[22m\n      \u001b[2mat Parser.parseProgram [as parseTopLevel] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:203:25)\u001b[22m\n      \u001b[2mat Parser.parseTopLevel [as parse] (\u001b[22mnode_modules/@babel/parser/src/parser/index.ts\u001b[2m:93:10)\u001b[22m\n      \u001b[2mat parse (\u001b[22mnode_modules/@babel/parser/src/index.ts\u001b[2m:92:38)\u001b[22m\n      \u001b[2mat parser (\u001b[22mnode_modules/@babel/core/src/parser/index.ts\u001b[2m:28:19)\u001b[22m\n          at parser.next (<anonymous>)\n      \u001b[2mat normalizeFile (\u001b[22mnode_modules/@babel/core/src/transformation/normalize-file.ts\u001b[2m:49:24)\u001b[22m\n          at normalizeFile.next (<anonymous>)\n      \u001b[2mat run (\u001b[22mnode_modules/@babel/core/src/transformation/index.ts\u001b[2m:40:36)\u001b[22m\n          at run.next (<anonymous>)\n      \u001b[2mat transform (\u001b[22mnode_modules/@babel/core/src/transform.ts\u001b[2m:29:20)\u001b[22m\n          at transform.next (<anonymous>)\n      \u001b[2mat evaluateSync (\u001b[22mnode_modules/gensync/index.js\u001b[2m:251:28)\u001b[22m\n      \u001b[2mat sync (\u001b[22mnode_modules/gensync/index.js\u001b[2m:89:14)\u001b[22m\n      \u001b[2mat fn (\u001b[22mnode_modules/@babel/core/src/errors/rewrite-stack-trace.ts\u001b[2m:99:14)\u001b[22m\n      \u001b[2mat transformSync (\u001b[22mnode_modules/@babel/core/src/transform.ts\u001b[2m:66:52)\u001b[22m\n      \u001b[2mat ScriptTransformer.transformSource (\u001b[22mnode_modules/@jest/transform/build/ScriptTransformer.js\u001b[2m:545:31)\u001b[22m\n      \u001b[2mat ScriptTransformer._transformAndBuildScript (\u001b[22mnode_modules/@jest/transform/build/ScriptTransformer.js\u001b[2m:674:40)\u001b[22m\n      \u001b[2mat ScriptTransformer.transform (\u001b[22mnode_modules/@jest/transform/build/ScriptTransformer.js\u001b[2m:726:19)\u001b[22m\n","testResults":[]},{"numFailingTests":0,"numPassingTests":0,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":0,"runtime":0,"slow":false,"start":0},"testFilePath":"/Users/tony/tony-space/Tony/python/automated-ptt-telegram-scheduler/src/lib/__tests__/telegram-bot.test.ts","failureMessage":"  \u001b[1m● \u001b[22mTest suite failed to run\n\n    \u001b[1m\u001b[31mJest encountered an unexpected token\u001b[39m\u001b[22m\n\n    Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.\n\n    Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.\n\n    By default \"node_modules\" folder is ignored by transformers.\n\n    Here's what you can do:\n     • If you are trying to use ECMAScript Modules, see \u001b[4mhttps://jestjs.io/docs/ecmascript-modules\u001b[24m for how to enable it.\n     • If you are trying to use TypeScript, see \u001b[4mhttps://jestjs.io/docs/getting-started#using-typescript\u001b[24m\n     • To have some of your \"node_modules\" files transformed, you can specify a custom \u001b[1m\"transformIgnorePatterns\"\u001b[22m in your config.\n     • If you need a custom transformation specify a \u001b[1m\"transform\"\u001b[22m option in your config.\n     • If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the \u001b[1m\"moduleNameMapper\"\u001b[22m config option.\n\n    You'll find more details and examples of these config options in the docs:\n    \u001b[36mhttps://jestjs.io/docs/configuration\u001b[39m\n    For information about custom transformations, see:\n    \u001b[36mhttps://jestjs.io/docs/code-transformation\u001b[39m\n\n    \u001b[1m\u001b[31mDetails:\u001b[39m\u001b[22m\n\n    SyntaxError: /Users/tony/tony-space/Tony/python/automated-ptt-telegram-scheduler/src/lib/__tests__/telegram-bot.test.ts: Missing semicolon. (16:25)\n\n    \u001b[0m \u001b[90m 14 |\u001b[39m \u001b[90m// Mock axios\u001b[39m\n     \u001b[90m 15 |\u001b[39m jest\u001b[33m.\u001b[39mmock(\u001b[32m'axios'\u001b[39m)\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 16 |\u001b[39m \u001b[36mconst\u001b[39m mockedAxios \u001b[33m=\u001b[39m axios \u001b[36mas\u001b[39m jest\u001b[33m.\u001b[39m\u001b[33mMocked\u001b[39m\u001b[33m<\u001b[39m\u001b[36mtypeof\u001b[39m axios\u001b[33m>\u001b[39m\n     \u001b[90m    |\u001b[39m                          \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 17 |\u001b[39m\n     \u001b[90m 18 |\u001b[39m describe(\u001b[32m'Telegram Bot Integration'\u001b[39m\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m {\n     \u001b[90m 19 |\u001b[39m   \u001b[36mlet\u001b[39m telegramClient\u001b[33m:\u001b[39m \u001b[33mTelegramBotClient\u001b[39m\u001b[0m\n\n      \u001b[2mat constructor (\u001b[22mnode_modules/@babel/parser/src/parse-error.ts\u001b[2m:95:45)\u001b[22m\n      \u001b[2mat Parser.toParseError [as raise] (\u001b[22mnode_modules/@babel/parser/src/tokenizer/index.ts\u001b[2m:1503:19)\u001b[22m\n      \u001b[2mat Parser.raise [as semicolon] (\u001b[22mnode_modules/@babel/parser/src/parser/util.ts\u001b[2m:149:10)\u001b[22m\n      \u001b[2mat Parser.semicolon [as parseVarStatement] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1247:10)\u001b[22m\n      \u001b[2mat Parser.parseVarStatement [as parseStatementContent] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:607:21)\u001b[22m\n      \u001b[2mat Parser.parseStatementContent [as parseStatementLike] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:477:17)\u001b[22m\n      \u001b[2mat Parser.parseStatementLike [as parseModuleItem] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:414:17)\u001b[22m\n      \u001b[2mat Parser.parseModuleItem [as parseBlockOrModuleBlockBody] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1438:16)\u001b[22m\n      \u001b[2mat Parser.parseBlockOrModuleBlockBody [as parseBlockBody] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1412:10)\u001b[22m\n      \u001b[2mat Parser.parseBlockBody [as parseProgram] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:229:10)\u001b[22m\n      \u001b[2mat Parser.parseProgram [as parseTopLevel] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:203:25)\u001b[22m\n      \u001b[2mat Parser.parseTopLevel [as parse] (\u001b[22mnode_modules/@babel/parser/src/parser/index.ts\u001b[2m:93:10)\u001b[22m\n      \u001b[2mat parse (\u001b[22mnode_modules/@babel/parser/src/index.ts\u001b[2m:92:38)\u001b[22m\n      \u001b[2mat parser (\u001b[22mnode_modules/@babel/core/src/parser/index.ts\u001b[2m:28:19)\u001b[22m\n          at parser.next (<anonymous>)\n      \u001b[2mat normalizeFile (\u001b[22mnode_modules/@babel/core/src/transformation/normalize-file.ts\u001b[2m:49:24)\u001b[22m\n          at normalizeFile.next (<anonymous>)\n      \u001b[2mat run (\u001b[22mnode_modules/@babel/core/src/transformation/index.ts\u001b[2m:40:36)\u001b[22m\n          at run.next (<anonymous>)\n      \u001b[2mat transform (\u001b[22mnode_modules/@babel/core/src/transform.ts\u001b[2m:29:20)\u001b[22m\n          at transform.next (<anonymous>)\n      \u001b[2mat evaluateSync (\u001b[22mnode_modules/gensync/index.js\u001b[2m:251:28)\u001b[22m\n      \u001b[2mat sync (\u001b[22mnode_modules/gensync/index.js\u001b[2m:89:14)\u001b[22m\n      \u001b[2mat fn (\u001b[22mnode_modules/@babel/core/src/errors/rewrite-stack-trace.ts\u001b[2m:99:14)\u001b[22m\n      \u001b[2mat transformSync (\u001b[22mnode_modules/@babel/core/src/transform.ts\u001b[2m:66:52)\u001b[22m\n      \u001b[2mat ScriptTransformer.transformSource (\u001b[22mnode_modules/@jest/transform/build/ScriptTransformer.js\u001b[2m:545:31)\u001b[22m\n      \u001b[2mat ScriptTransformer._transformAndBuildScript (\u001b[22mnode_modules/@jest/transform/build/ScriptTransformer.js\u001b[2m:674:40)\u001b[22m\n      \u001b[2mat ScriptTransformer.transform (\u001b[22mnode_modules/@jest/transform/build/ScriptTransformer.js\u001b[2m:726:19)\u001b[22m\n","testResults":[]},{"numFailingTests":0,"numPassingTests":0,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":0,"runtime":0,"slow":false,"start":0},"testFilePath":"/Users/tony/tony-space/Tony/python/automated-ptt-telegram-scheduler/src/lib/__tests__/error-recovery.test.ts","failureMessage":"  \u001b[1m● \u001b[22mTest suite failed to run\n\n    \u001b[1m\u001b[31mJest encountered an unexpected token\u001b[39m\u001b[22m\n\n    Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.\n\n    Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.\n\n    By default \"node_modules\" folder is ignored by transformers.\n\n    Here's what you can do:\n     • If you are trying to use ECMAScript Modules, see \u001b[4mhttps://jestjs.io/docs/ecmascript-modules\u001b[24m for how to enable it.\n     • If you are trying to use TypeScript, see \u001b[4mhttps://jestjs.io/docs/getting-started#using-typescript\u001b[24m\n     • To have some of your \"node_modules\" files transformed, you can specify a custom \u001b[1m\"transformIgnorePatterns\"\u001b[22m in your config.\n     • If you need a custom transformation specify a \u001b[1m\"transform\"\u001b[22m option in your config.\n     • If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the \u001b[1m\"moduleNameMapper\"\u001b[22m config option.\n\n    You'll find more details and examples of these config options in the docs:\n    \u001b[36mhttps://jestjs.io/docs/configuration\u001b[39m\n    For information about custom transformations, see:\n    \u001b[36mhttps://jestjs.io/docs/code-transformation\u001b[39m\n\n    \u001b[1m\u001b[31mDetails:\u001b[39m\u001b[22m\n\n    SyntaxError: /Users/tony/tony-space/Tony/python/automated-ptt-telegram-scheduler/src/lib/__tests__/error-recovery.test.ts: Support for the experimental syntax 'decorators' isn't currently enabled (156:9):\n\n    \u001b[0m \u001b[90m 154 |\u001b[39m     it(\u001b[32m'應該在可重試錯誤時自動重試'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\n     \u001b[90m 155 |\u001b[39m       \u001b[36mclass\u001b[39m \u001b[33mTestService\u001b[39m {\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 156 |\u001b[39m         \u001b[33m@\u001b[39mwithAutoRetry({ maxAttempts\u001b[33m:\u001b[39m \u001b[35m3\u001b[39m\u001b[33m,\u001b[39m baseDelay\u001b[33m:\u001b[39m \u001b[35m10\u001b[39m }\u001b[33m,\u001b[39m [\u001b[32m'UNAVAILABLE'\u001b[39m])\n     \u001b[90m     |\u001b[39m         \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 157 |\u001b[39m         \u001b[36masync\u001b[39m testMethod() {\n     \u001b[90m 158 |\u001b[39m           \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mError\u001b[39m(\u001b[32m'UNAVAILABLE'\u001b[39m)\n     \u001b[90m 159 |\u001b[39m         }\u001b[0m\n\n    Add @babel/plugin-proposal-decorators (https://github.com/babel/babel/tree/main/packages/babel-plugin-proposal-decorators) to the 'plugins' section of your Babel config to enable transformation.\n    If you want to leave it as-is, add @babel/plugin-syntax-decorators (https://github.com/babel/babel/tree/main/packages/babel-plugin-syntax-decorators) to the 'plugins' section to enable parsing.\n\n    If you already added the plugin for this syntax to your config, it's possible that your config isn't being loaded.\n    You can re-run Babel with the BABEL_SHOW_CONFIG_FOR environment variable to show the loaded configuration:\n    \tnpx cross-env BABEL_SHOW_CONFIG_FOR=/Users/tony/tony-space/Tony/python/automated-ptt-telegram-scheduler/src/lib/__tests__/error-recovery.test.ts <your build command>\n    See https://babeljs.io/docs/configuration#print-effective-configs for more info.\n\n      \u001b[2mat constructor (\u001b[22mnode_modules/@babel/parser/src/parse-error.ts\u001b[2m:95:45)\u001b[22m\n      \u001b[2mat Parser.toParseError [as raise] (\u001b[22mnode_modules/@babel/parser/src/tokenizer/index.ts\u001b[2m:1503:19)\u001b[22m\n      \u001b[2mat Parser.raise [as expectOnePlugin] (\u001b[22mnode_modules/@babel/parser/src/tokenizer/index.ts\u001b[2m:1568:18)\u001b[22m\n      \u001b[2mat Parser.expectOnePlugin [as parseDecorator] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:787:10)\u001b[22m\n      \u001b[2mat parseDecorator (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1832:32)\u001b[22m\n      \u001b[2mat Parser.callback [as withSmartMixTopicForbiddingContext] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:3166:14)\u001b[22m\n      \u001b[2mat Parser.withSmartMixTopicForbiddingContext [as parseClassBody] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1818:10)\u001b[22m\n      \u001b[2mat Parser.parseClassBody [as parseClass] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1769:22)\u001b[22m\n      \u001b[2mat Parser.parseClass [as parseStatementContent] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:527:21)\u001b[22m\n      \u001b[2mat Parser.parseStatementContent [as parseStatementLike] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:477:17)\u001b[22m\n      \u001b[2mat Parser.parseStatementLike [as parseStatementListItem] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:426:17)\u001b[22m\n      \u001b[2mat Parser.parseStatementListItem [as parseBlockOrModuleBlockBody] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1439:16)\u001b[22m\n      \u001b[2mat Parser.parseBlockOrModuleBlockBody [as parseBlockBody] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1412:10)\u001b[22m\n      \u001b[2mat Parser.parseBlockBody [as parseBlock] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1380:10)\u001b[22m\n      \u001b[2mat Parser.parseBlock [as parseFunctionBody] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:2616:24)\u001b[22m\n      \u001b[2mat Parser.parseFunctionBody [as parseArrowExpression] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:2553:10)\u001b[22m\n      \u001b[2mat Parser.parseArrowExpression [as parseAsyncArrowFromCallExpression] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:1059:10)\u001b[22m\n      \u001b[2mat Parser.parseAsyncArrowFromCallExpression [as parseCoverCallAndAsyncArrowHead] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:934:27)\u001b[22m\n      \u001b[2mat Parser.parseCoverCallAndAsyncArrowHead [as parseSubscript] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:796:19)\u001b[22m\n      \u001b[2mat Parser.parseSubscript [as parseSubscripts] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:755:19)\u001b[22m\n      \u001b[2mat Parser.parseSubscripts [as parseExprSubscripts] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:740:17)\u001b[22m\n      \u001b[2mat Parser.parseExprSubscripts [as parseUpdate] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:713:21)\u001b[22m\n      \u001b[2mat Parser.parseUpdate [as parseMaybeUnary] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:675:23)\u001b[22m\n      \u001b[2mat Parser.parseMaybeUnary [as parseMaybeUnaryOrPrivate] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:409:14)\u001b[22m\n      \u001b[2mat Parser.parseMaybeUnaryOrPrivate [as parseExprOps] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:421:23)\u001b[22m\n      \u001b[2mat Parser.parseExprOps [as parseMaybeConditional] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:376:23)\u001b[22m\n      \u001b[2mat Parser.parseMaybeConditional [as parseMaybeAssign] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:301:21)\u001b[22m\n      \u001b[2mat parseMaybeAssign (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:257:12)\u001b[22m\n      \u001b[2mat Parser.callback [as allowInAnd] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:3192:12)\u001b[22m\n      \u001b[2mat Parser.allowInAnd [as parseMaybeAssignAllowIn] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:256:17)\u001b[22m\n      \u001b[2mat Parser.parseMaybeAssignAllowIn [as parseMaybeAssignAllowInOrVoidPattern] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:3306:17)\u001b[22m\n      \u001b[2mat Parser.parseMaybeAssignAllowInOrVoidPattern [as parseExprListItem] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:2788:18)\u001b[22m\n      \u001b[2mat Parser.parseExprListItem [as parseCallExpressionArguments] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:1034:14)\u001b[22m\n      \u001b[2mat Parser.parseCallExpressionArguments [as parseCoverCallAndAsyncArrowHead] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:914:29)\u001b[22m\n      \u001b[2mat Parser.parseCoverCallAndAsyncArrowHead [as parseSubscript] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:796:19)\u001b[22m\n      \u001b[2mat Parser.parseSubscript [as parseSubscripts] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:755:19)\u001b[22m\n      \u001b[2mat Parser.parseSubscripts [as parseExprSubscripts] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:740:17)\u001b[22m\n      \u001b[2mat Parser.parseExprSubscripts [as parseUpdate] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:713:21)\u001b[22m\n      \u001b[2mat Parser.parseUpdate [as parseMaybeUnary] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:675:23)\u001b[22m\n      \u001b[2mat Parser.parseMaybeUnary [as parseMaybeUnaryOrPrivate] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:409:14)\u001b[22m\n      \u001b[2mat Parser.parseMaybeUnaryOrPrivate [as parseExprOps] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:421:23)\u001b[22m\n      \u001b[2mat Parser.parseExprOps [as parseMaybeConditional] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:376:23)\u001b[22m\n      \u001b[2mat Parser.parseMaybeConditional [as parseMaybeAssign] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:301:21)\u001b[22m\n      \u001b[2mat Parser.parseMaybeAssign [as parseExpressionBase] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:226:23)\u001b[22m\n      \u001b[2mat parseExpressionBase (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:217:39)\u001b[22m\n      \u001b[2mat Parser.callback [as allowInAnd] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:3187:16)\u001b[22m\n      \u001b[2mat Parser.allowInAnd [as parseExpression] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:217:17)\u001b[22m\n      \u001b[2mat Parser.parseExpression [as parseStatementContent] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:683:23)\u001b[22m\n      \u001b[2mat Parser.parseStatementContent [as parseStatementLike] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:477:17)\u001b[22m\n      \u001b[2mat Parser.parseStatementLike [as parseStatementListItem] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:426:17)\u001b[22m\n      \u001b[2mat Parser.parseStatementListItem [as parseBlockOrModuleBlockBody] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1439:16)\u001b[22m\n      \u001b[2mat Parser.parseBlockOrModuleBlockBody [as parseBlockBody] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1412:10)\u001b[22m\n      \u001b[2mat Parser.parseBlockBody [as parseBlock] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1380:10)\u001b[22m\n      \u001b[2mat Parser.parseBlock [as parseFunctionBody] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:2616:24)\u001b[22m\n      \u001b[2mat Parser.parseFunctionBody [as parseArrowExpression] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:2553:10)\u001b[22m\n      \u001b[2mat Parser.parseArrowExpression [as parseParenAndDistinguishExpression] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:1837:12)\u001b[22m\n      \u001b[2mat Parser.parseParenAndDistinguishExpression [as parseExprAtom] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:1162:21)\u001b[22m\n      \u001b[2mat Parser.parseExprAtom [as parseExprSubscripts] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:734:23)\u001b[22m\n      \u001b[2mat Parser.parseExprSubscripts [as parseUpdate] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:713:21)\u001b[22m\n      \u001b[2mat Parser.parseUpdate [as parseMaybeUnary] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:675:23)\u001b[22m\n      \u001b[2mat Parser.parseMaybeUnary [as parseMaybeUnaryOrPrivate] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:409:14)\u001b[22m\n      \u001b[2mat Parser.parseMaybeUnaryOrPrivate [as parseExprOps] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:421:23)\u001b[22m\n      \u001b[2mat Parser.parseExprOps [as parseMaybeConditional] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:376:23)\u001b[22m\n      \u001b[2mat Parser.parseMaybeConditional [as parseMaybeAssign] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:301:21)\u001b[22m\n      \u001b[2mat parseMaybeAssign (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:257:12)\u001b[22m\n      \u001b[2mat Parser.callback [as allowInAnd] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:3192:12)\u001b[22m\n      \u001b[2mat Parser.allowInAnd [as parseMaybeAssignAllowIn] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:256:17)\u001b[22m\n      \u001b[2mat Parser.parseMaybeAssignAllowIn [as parseMaybeAssignAllowInOrVoidPattern] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:3306:17)\u001b[22m\n      \u001b[2mat Parser.parseMaybeAssignAllowInOrVoidPattern [as parseExprListItem] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:2788:18)\u001b[22m\n      \u001b[2mat Parser.parseExprListItem [as parseCallExpressionArguments] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:1034:14)\u001b[22m\n      \u001b[2mat Parser.parseCallExpressionArguments [as parseCoverCallAndAsyncArrowHead] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:914:29)\u001b[22m\n      \u001b[2mat Parser.parseCoverCallAndAsyncArrowHead [as parseSubscript] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:796:19)\u001b[22m\n      \u001b[2mat Parser.parseSubscript [as parseSubscripts] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:755:19)\u001b[22m\n      \u001b[2mat Parser.parseSubscripts [as parseExprSubscripts] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:740:17)\u001b[22m\n      \u001b[2mat Parser.parseExprSubscripts [as parseUpdate] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:713:21)\u001b[22m\n      \u001b[2mat Parser.parseUpdate [as parseMaybeUnary] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:675:23)\u001b[22m\n      \u001b[2mat Parser.parseMaybeUnary [as parseMaybeUnaryOrPrivate] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:409:14)\u001b[22m\n      \u001b[2mat Parser.parseMaybeUnaryOrPrivate [as parseExprOps] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:421:23)\u001b[22m\n      \u001b[2mat Parser.parseExprOps [as parseMaybeConditional] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:376:23)\u001b[22m\n      \u001b[2mat Parser.parseMaybeConditional [as parseMaybeAssign] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:301:21)\u001b[22m\n      \u001b[2mat Parser.parseMaybeAssign [as parseExpressionBase] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:226:23)\u001b[22m\n      \u001b[2mat parseExpressionBase (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:217:39)\u001b[22m\n      \u001b[2mat Parser.callback [as allowInAnd] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:3187:16)\u001b[22m\n      \u001b[2mat Parser.allowInAnd [as parseExpression] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:217:17)\u001b[22m\n      \u001b[2mat Parser.parseExpression [as parseStatementContent] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:683:23)\u001b[22m\n      \u001b[2mat Parser.parseStatementContent [as parseStatementLike] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:477:17)\u001b[22m\n      \u001b[2mat Parser.parseStatementLike [as parseStatementListItem] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:426:17)\u001b[22m\n      \u001b[2mat Parser.parseStatementListItem [as parseBlockOrModuleBlockBody] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1439:16)\u001b[22m\n      \u001b[2mat Parser.parseBlockOrModuleBlockBody [as parseBlockBody] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1412:10)\u001b[22m\n      \u001b[2mat Parser.parseBlockBody [as parseBlock] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1380:10)\u001b[22m\n      \u001b[2mat Parser.parseBlock [as parseFunctionBody] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:2616:24)\u001b[22m\n      \u001b[2mat Parser.parseFunctionBody [as parseArrowExpression] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:2553:10)\u001b[22m\n      \u001b[2mat Parser.parseArrowExpression [as parseParenAndDistinguishExpression] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:1837:12)\u001b[22m\n      \u001b[2mat Parser.parseParenAndDistinguishExpression [as parseExprAtom] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:1162:21)\u001b[22m\n      \u001b[2mat Parser.parseExprAtom [as parseExprSubscripts] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:734:23)\u001b[22m\n      \u001b[2mat Parser.parseExprSubscripts [as parseUpdate] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:713:21)\u001b[22m\n      \u001b[2mat Parser.parseUpdate [as parseMaybeUnary] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:675:23)\u001b[22m\n      \u001b[2mat Parser.parseMaybeUnary [as parseMaybeUnaryOrPrivate] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:409:14)\u001b[22m\n      \u001b[2mat Parser.parseMaybeUnaryOrPrivate [as parseExprOps] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:421:23)\u001b[22m\n      \u001b[2mat Parser.parseExprOps [as parseMaybeConditional] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:376:23)\u001b[22m\n","testResults":[]},{"numFailingTests":0,"numPassingTests":0,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":0,"runtime":0,"slow":false,"start":0},"testFilePath":"/Users/tony/tony-space/Tony/python/automated-ptt-telegram-scheduler/src/components/__tests__/SecretManagerStatus.test.tsx","failureMessage":"  \u001b[1m● \u001b[22mTest suite failed to run\n\n    \u001b[1m\u001b[31mJest encountered an unexpected token\u001b[39m\u001b[22m\n\n    Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.\n\n    Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.\n\n    By default \"node_modules\" folder is ignored by transformers.\n\n    Here's what you can do:\n     • If you are trying to use ECMAScript Modules, see \u001b[4mhttps://jestjs.io/docs/ecmascript-modules\u001b[24m for how to enable it.\n     • If you are trying to use TypeScript, see \u001b[4mhttps://jestjs.io/docs/getting-started#using-typescript\u001b[24m\n     • To have some of your \"node_modules\" files transformed, you can specify a custom \u001b[1m\"transformIgnorePatterns\"\u001b[22m in your config.\n     • If you need a custom transformation specify a \u001b[1m\"transform\"\u001b[22m option in your config.\n     • If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the \u001b[1m\"moduleNameMapper\"\u001b[22m config option.\n\n    You'll find more details and examples of these config options in the docs:\n    \u001b[36mhttps://jestjs.io/docs/configuration\u001b[39m\n    For information about custom transformations, see:\n    \u001b[36mhttps://jestjs.io/docs/code-transformation\u001b[39m\n\n    \u001b[1m\u001b[31mDetails:\u001b[39m\u001b[22m\n\n    SyntaxError: /Users/tony/tony-space/Tony/python/automated-ptt-telegram-scheduler/src/components/__tests__/SecretManagerStatus.test.tsx: Missing semicolon. (11:24)\n\n    \u001b[0m \u001b[90m  9 |\u001b[39m \u001b[90m// Mock fetch\u001b[39m\n     \u001b[90m 10 |\u001b[39m \u001b[36mconst\u001b[39m mockFetch \u001b[33m=\u001b[39m jest\u001b[33m.\u001b[39mfn()\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 11 |\u001b[39m global\u001b[33m.\u001b[39mfetch \u001b[33m=\u001b[39m mockFetch \u001b[36mas\u001b[39m any\n     \u001b[90m    |\u001b[39m                         \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 12 |\u001b[39m\n     \u001b[90m 13 |\u001b[39m describe(\u001b[32m'SecretManagerStatus'\u001b[39m\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m {\n     \u001b[90m 14 |\u001b[39m   beforeEach(() \u001b[33m=>\u001b[39m {\u001b[0m\n\n      \u001b[2mat constructor (\u001b[22mnode_modules/@babel/parser/src/parse-error.ts\u001b[2m:95:45)\u001b[22m\n      \u001b[2mat Parser.toParseError [as raise] (\u001b[22mnode_modules/@babel/parser/src/tokenizer/index.ts\u001b[2m:1503:19)\u001b[22m\n      \u001b[2mat Parser.raise [as semicolon] (\u001b[22mnode_modules/@babel/parser/src/parser/util.ts\u001b[2m:149:10)\u001b[22m\n      \u001b[2mat Parser.semicolon [as parseExpressionStatement] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1358:10)\u001b[22m\n      \u001b[2mat Parser.parseExpressionStatement [as parseStatementContent] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:697:19)\u001b[22m\n      \u001b[2mat Parser.parseStatementContent [as parseStatementLike] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:477:17)\u001b[22m\n      \u001b[2mat Parser.parseStatementLike [as parseModuleItem] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:414:17)\u001b[22m\n      \u001b[2mat Parser.parseModuleItem [as parseBlockOrModuleBlockBody] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1438:16)\u001b[22m\n      \u001b[2mat Parser.parseBlockOrModuleBlockBody [as parseBlockBody] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1412:10)\u001b[22m\n      \u001b[2mat Parser.parseBlockBody [as parseProgram] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:229:10)\u001b[22m\n      \u001b[2mat Parser.parseProgram [as parseTopLevel] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:203:25)\u001b[22m\n      \u001b[2mat Parser.parseTopLevel [as parse] (\u001b[22mnode_modules/@babel/parser/src/parser/index.ts\u001b[2m:93:10)\u001b[22m\n      \u001b[2mat parse (\u001b[22mnode_modules/@babel/parser/src/index.ts\u001b[2m:92:38)\u001b[22m\n      \u001b[2mat parser (\u001b[22mnode_modules/@babel/core/src/parser/index.ts\u001b[2m:28:19)\u001b[22m\n          at parser.next (<anonymous>)\n      \u001b[2mat normalizeFile (\u001b[22mnode_modules/@babel/core/src/transformation/normalize-file.ts\u001b[2m:49:24)\u001b[22m\n          at normalizeFile.next (<anonymous>)\n      \u001b[2mat run (\u001b[22mnode_modules/@babel/core/src/transformation/index.ts\u001b[2m:40:36)\u001b[22m\n          at run.next (<anonymous>)\n      \u001b[2mat transform (\u001b[22mnode_modules/@babel/core/src/transform.ts\u001b[2m:29:20)\u001b[22m\n          at transform.next (<anonymous>)\n      \u001b[2mat evaluateSync (\u001b[22mnode_modules/gensync/index.js\u001b[2m:251:28)\u001b[22m\n      \u001b[2mat sync (\u001b[22mnode_modules/gensync/index.js\u001b[2m:89:14)\u001b[22m\n      \u001b[2mat fn (\u001b[22mnode_modules/@babel/core/src/errors/rewrite-stack-trace.ts\u001b[2m:99:14)\u001b[22m\n      \u001b[2mat transformSync (\u001b[22mnode_modules/@babel/core/src/transform.ts\u001b[2m:66:52)\u001b[22m\n      \u001b[2mat ScriptTransformer.transformSource (\u001b[22mnode_modules/@jest/transform/build/ScriptTransformer.js\u001b[2m:545:31)\u001b[22m\n      \u001b[2mat ScriptTransformer._transformAndBuildScript (\u001b[22mnode_modules/@jest/transform/build/ScriptTransformer.js\u001b[2m:674:40)\u001b[22m\n      \u001b[2mat ScriptTransformer.transform (\u001b[22mnode_modules/@jest/transform/build/ScriptTransformer.js\u001b[2m:726:19)\u001b[22m\n","testResults":[]},{"numFailingTests":0,"numPassingTests":0,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":0,"runtime":0,"slow":false,"start":0},"testFilePath":"/Users/tony/tony-space/Tony/python/automated-ptt-telegram-scheduler/src/components/__tests__/TaskHistory.test.tsx","failureMessage":"  \u001b[1m● \u001b[22mTest suite failed to run\n\n    SyntaxError: /Users/tony/tony-space/Tony/python/automated-ptt-telegram-scheduler/src/components/__tests__/TaskHistory.test.tsx: Unexpected token, expected \",\" (85:12)\n\n    \u001b[0m \u001b[90m 83 |\u001b[39m   beforeEach(() \u001b[33m=>\u001b[39m {\n     \u001b[90m 84 |\u001b[39m     jest\u001b[33m.\u001b[39mclearAllMocks()\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 85 |\u001b[39m     \u001b[33m;\u001b[39m(fetch \u001b[36mas\u001b[39m jest\u001b[33m.\u001b[39m\u001b[33mMock\u001b[39m)\u001b[33m.\u001b[39mmockResolvedValue({\n     \u001b[90m    |\u001b[39m             \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 86 |\u001b[39m       json\u001b[33m:\u001b[39m () \u001b[33m=>\u001b[39m \u001b[33mPromise\u001b[39m\u001b[33m.\u001b[39mresolve(mockExecutionData)\u001b[33m,\u001b[39m\n     \u001b[90m 87 |\u001b[39m     })\n     \u001b[90m 88 |\u001b[39m   })\u001b[0m\n\n      \u001b[2mat constructor (\u001b[22mnode_modules/@babel/parser/src/parse-error.ts\u001b[2m:95:45)\u001b[22m\n      \u001b[2mat Parser.toParseError [as raise] (\u001b[22mnode_modules/@babel/parser/src/tokenizer/index.ts\u001b[2m:1503:19)\u001b[22m\n      \u001b[2mat Parser.raise [as unexpected] (\u001b[22mnode_modules/@babel/parser/src/tokenizer/index.ts\u001b[2m:1543:16)\u001b[22m\n      \u001b[2mat Parser.unexpected [as expect] (\u001b[22mnode_modules/@babel/parser/src/parser/util.ts\u001b[2m:157:12)\u001b[22m\n      \u001b[2mat Parser.expect [as parseParenAndDistinguishExpression] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:1789:14)\u001b[22m\n      \u001b[2mat Parser.parseParenAndDistinguishExpression [as parseExprAtom] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:1162:21)\u001b[22m\n      \u001b[2mat Parser.parseExprAtom [as parseExprSubscripts] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:734:23)\u001b[22m\n      \u001b[2mat Parser.parseExprSubscripts [as parseUpdate] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:713:21)\u001b[22m\n      \u001b[2mat Parser.parseUpdate [as parseMaybeUnary] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:675:23)\u001b[22m\n      \u001b[2mat Parser.parseMaybeUnary [as parseMaybeUnaryOrPrivate] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:409:14)\u001b[22m\n      \u001b[2mat Parser.parseMaybeUnaryOrPrivate [as parseExprOps] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:421:23)\u001b[22m\n      \u001b[2mat Parser.parseExprOps [as parseMaybeConditional] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:376:23)\u001b[22m\n      \u001b[2mat Parser.parseMaybeConditional [as parseMaybeAssign] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:301:21)\u001b[22m\n      \u001b[2mat Parser.parseMaybeAssign [as parseExpressionBase] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:226:23)\u001b[22m\n      \u001b[2mat parseExpressionBase (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:217:39)\u001b[22m\n      \u001b[2mat Parser.callback [as allowInAnd] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:3187:16)\u001b[22m\n      \u001b[2mat Parser.allowInAnd [as parseExpression] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:217:17)\u001b[22m\n      \u001b[2mat Parser.parseExpression [as parseStatementContent] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:683:23)\u001b[22m\n      \u001b[2mat Parser.parseStatementContent [as parseStatementLike] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:477:17)\u001b[22m\n      \u001b[2mat Parser.parseStatementLike [as parseStatementListItem] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:426:17)\u001b[22m\n      \u001b[2mat Parser.parseStatementListItem [as parseBlockOrModuleBlockBody] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1439:16)\u001b[22m\n      \u001b[2mat Parser.parseBlockOrModuleBlockBody [as parseBlockBody] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1412:10)\u001b[22m\n      \u001b[2mat Parser.parseBlockBody [as parseBlock] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1380:10)\u001b[22m\n      \u001b[2mat Parser.parseBlock [as parseFunctionBody] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:2616:24)\u001b[22m\n      \u001b[2mat Parser.parseFunctionBody [as parseArrowExpression] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:2553:10)\u001b[22m\n      \u001b[2mat Parser.parseArrowExpression [as parseParenAndDistinguishExpression] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:1837:12)\u001b[22m\n      \u001b[2mat Parser.parseParenAndDistinguishExpression [as parseExprAtom] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:1162:21)\u001b[22m\n      \u001b[2mat Parser.parseExprAtom [as parseExprSubscripts] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:734:23)\u001b[22m\n      \u001b[2mat Parser.parseExprSubscripts [as parseUpdate] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:713:21)\u001b[22m\n      \u001b[2mat Parser.parseUpdate [as parseMaybeUnary] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:675:23)\u001b[22m\n      \u001b[2mat Parser.parseMaybeUnary [as parseMaybeUnaryOrPrivate] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:409:14)\u001b[22m\n      \u001b[2mat Parser.parseMaybeUnaryOrPrivate [as parseExprOps] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:421:23)\u001b[22m\n      \u001b[2mat Parser.parseExprOps [as parseMaybeConditional] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:376:23)\u001b[22m\n      \u001b[2mat Parser.parseMaybeConditional [as parseMaybeAssign] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:301:21)\u001b[22m\n      \u001b[2mat parseMaybeAssign (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:257:12)\u001b[22m\n      \u001b[2mat Parser.callback [as allowInAnd] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:3192:12)\u001b[22m\n      \u001b[2mat Parser.allowInAnd [as parseMaybeAssignAllowIn] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:256:17)\u001b[22m\n      \u001b[2mat Parser.parseMaybeAssignAllowIn [as parseMaybeAssignAllowInOrVoidPattern] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:3306:17)\u001b[22m\n      \u001b[2mat Parser.parseMaybeAssignAllowInOrVoidPattern [as parseExprListItem] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:2788:18)\u001b[22m\n      \u001b[2mat Parser.parseExprListItem [as parseCallExpressionArguments] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:1034:14)\u001b[22m\n      \u001b[2mat Parser.parseCallExpressionArguments [as parseCoverCallAndAsyncArrowHead] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:914:29)\u001b[22m\n      \u001b[2mat Parser.parseCoverCallAndAsyncArrowHead [as parseSubscript] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:796:19)\u001b[22m\n      \u001b[2mat Parser.parseSubscript [as parseSubscripts] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:755:19)\u001b[22m\n      \u001b[2mat Parser.parseSubscripts [as parseExprSubscripts] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:740:17)\u001b[22m\n      \u001b[2mat Parser.parseExprSubscripts [as parseUpdate] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:713:21)\u001b[22m\n      \u001b[2mat Parser.parseUpdate [as parseMaybeUnary] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:675:23)\u001b[22m\n      \u001b[2mat Parser.parseMaybeUnary [as parseMaybeUnaryOrPrivate] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:409:14)\u001b[22m\n      \u001b[2mat Parser.parseMaybeUnaryOrPrivate [as parseExprOps] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:421:23)\u001b[22m\n      \u001b[2mat Parser.parseExprOps [as parseMaybeConditional] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:376:23)\u001b[22m\n      \u001b[2mat Parser.parseMaybeConditional [as parseMaybeAssign] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:301:21)\u001b[22m\n      \u001b[2mat Parser.parseMaybeAssign [as parseExpressionBase] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:226:23)\u001b[22m\n      \u001b[2mat parseExpressionBase (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:217:39)\u001b[22m\n      \u001b[2mat Parser.callback [as allowInAnd] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:3187:16)\u001b[22m\n      \u001b[2mat Parser.allowInAnd [as parseExpression] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:217:17)\u001b[22m\n      \u001b[2mat Parser.parseExpression [as parseStatementContent] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:683:23)\u001b[22m\n      \u001b[2mat Parser.parseStatementContent [as parseStatementLike] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:477:17)\u001b[22m\n      \u001b[2mat Parser.parseStatementLike [as parseStatementListItem] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:426:17)\u001b[22m\n      \u001b[2mat Parser.parseStatementListItem [as parseBlockOrModuleBlockBody] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1439:16)\u001b[22m\n      \u001b[2mat Parser.parseBlockOrModuleBlockBody [as parseBlockBody] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1412:10)\u001b[22m\n      \u001b[2mat Parser.parseBlockBody [as parseBlock] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1380:10)\u001b[22m\n      \u001b[2mat Parser.parseBlock [as parseFunctionBody] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:2616:24)\u001b[22m\n      \u001b[2mat Parser.parseFunctionBody [as parseArrowExpression] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:2553:10)\u001b[22m\n      \u001b[2mat Parser.parseArrowExpression [as parseParenAndDistinguishExpression] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:1837:12)\u001b[22m\n      \u001b[2mat Parser.parseParenAndDistinguishExpression [as parseExprAtom] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:1162:21)\u001b[22m\n      \u001b[2mat Parser.parseExprAtom [as parseExprSubscripts] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:734:23)\u001b[22m\n      \u001b[2mat Parser.parseExprSubscripts [as parseUpdate] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:713:21)\u001b[22m\n      \u001b[2mat Parser.parseUpdate [as parseMaybeUnary] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:675:23)\u001b[22m\n      \u001b[2mat Parser.parseMaybeUnary [as parseMaybeUnaryOrPrivate] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:409:14)\u001b[22m\n      \u001b[2mat Parser.parseMaybeUnaryOrPrivate [as parseExprOps] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:421:23)\u001b[22m\n      \u001b[2mat Parser.parseExprOps [as parseMaybeConditional] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:376:23)\u001b[22m\n      \u001b[2mat Parser.parseMaybeConditional [as parseMaybeAssign] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:301:21)\u001b[22m\n      \u001b[2mat parseMaybeAssign (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:257:12)\u001b[22m\n      \u001b[2mat Parser.callback [as allowInAnd] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:3192:12)\u001b[22m\n      \u001b[2mat Parser.allowInAnd [as parseMaybeAssignAllowIn] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:256:17)\u001b[22m\n      \u001b[2mat Parser.parseMaybeAssignAllowIn [as parseMaybeAssignAllowInOrVoidPattern] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:3306:17)\u001b[22m\n      \u001b[2mat Parser.parseMaybeAssignAllowInOrVoidPattern [as parseExprListItem] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:2788:18)\u001b[22m\n      \u001b[2mat Parser.parseExprListItem [as parseCallExpressionArguments] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:1034:14)\u001b[22m\n      \u001b[2mat Parser.parseCallExpressionArguments [as parseCoverCallAndAsyncArrowHead] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:914:29)\u001b[22m\n      \u001b[2mat Parser.parseCoverCallAndAsyncArrowHead [as parseSubscript] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:796:19)\u001b[22m\n      \u001b[2mat Parser.parseSubscript [as parseSubscripts] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:755:19)\u001b[22m\n      \u001b[2mat Parser.parseSubscripts [as parseExprSubscripts] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:740:17)\u001b[22m\n      \u001b[2mat Parser.parseExprSubscripts [as parseUpdate] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:713:21)\u001b[22m\n      \u001b[2mat Parser.parseUpdate [as parseMaybeUnary] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:675:23)\u001b[22m\n      \u001b[2mat Parser.parseMaybeUnary [as parseMaybeUnaryOrPrivate] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:409:14)\u001b[22m\n      \u001b[2mat Parser.parseMaybeUnaryOrPrivate [as parseExprOps] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:421:23)\u001b[22m\n      \u001b[2mat Parser.parseExprOps [as parseMaybeConditional] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:376:23)\u001b[22m\n      \u001b[2mat Parser.parseMaybeConditional [as parseMaybeAssign] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:301:21)\u001b[22m\n      \u001b[2mat Parser.parseMaybeAssign [as parseExpressionBase] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:226:23)\u001b[22m\n      \u001b[2mat parseExpressionBase (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:217:39)\u001b[22m\n      \u001b[2mat Parser.callback [as allowInAnd] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:3187:16)\u001b[22m\n      \u001b[2mat Parser.allowInAnd [as parseExpression] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:217:17)\u001b[22m\n      \u001b[2mat Parser.parseExpression [as parseStatementContent] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:683:23)\u001b[22m\n      \u001b[2mat Parser.parseStatementContent [as parseStatementLike] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:477:17)\u001b[22m\n      \u001b[2mat Parser.parseStatementLike [as parseModuleItem] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:414:17)\u001b[22m\n      \u001b[2mat Parser.parseModuleItem [as parseBlockOrModuleBlockBody] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1438:16)\u001b[22m\n      \u001b[2mat Parser.parseBlockOrModuleBlockBody [as parseBlockBody] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1412:10)\u001b[22m\n      \u001b[2mat Parser.parseBlockBody [as parseProgram] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:229:10)\u001b[22m\n      \u001b[2mat Parser.parseProgram [as parseTopLevel] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:203:25)\u001b[22m\n      \u001b[2mat Parser.parseTopLevel [as parse] (\u001b[22mnode_modules/@babel/parser/src/parser/index.ts\u001b[2m:93:10)\u001b[22m\n      \u001b[2mat parse (\u001b[22mnode_modules/@babel/parser/src/index.ts\u001b[2m:92:38)\u001b[22m\n","testResults":[]},{"numFailingTests":0,"numPassingTests":0,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":0,"runtime":0,"slow":false,"start":0},"testFilePath":"/Users/tony/tony-space/Tony/python/automated-ptt-telegram-scheduler/src/__tests__/performance/concurrent-execution.test.ts","failureMessage":"  \u001b[1m● \u001b[22mTest suite failed to run\n\n    \u001b[1m\u001b[31mJest encountered an unexpected token\u001b[39m\u001b[22m\n\n    Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.\n\n    Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.\n\n    By default \"node_modules\" folder is ignored by transformers.\n\n    Here's what you can do:\n     • If you are trying to use ECMAScript Modules, see \u001b[4mhttps://jestjs.io/docs/ecmascript-modules\u001b[24m for how to enable it.\n     • If you are trying to use TypeScript, see \u001b[4mhttps://jestjs.io/docs/getting-started#using-typescript\u001b[24m\n     • To have some of your \"node_modules\" files transformed, you can specify a custom \u001b[1m\"transformIgnorePatterns\"\u001b[22m in your config.\n     • If you need a custom transformation specify a \u001b[1m\"transform\"\u001b[22m option in your config.\n     • If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the \u001b[1m\"moduleNameMapper\"\u001b[22m config option.\n\n    You'll find more details and examples of these config options in the docs:\n    \u001b[36mhttps://jestjs.io/docs/configuration\u001b[39m\n    For information about custom transformations, see:\n    \u001b[36mhttps://jestjs.io/docs/code-transformation\u001b[39m\n\n    \u001b[1m\u001b[31mDetails:\u001b[39m\u001b[22m\n\n    SyntaxError: /Users/tony/tony-space/Tony/python/automated-ptt-telegram-scheduler/src/__tests__/performance/concurrent-execution.test.ts: Missing semicolon. (16:19)\n\n    \u001b[0m \u001b[90m 14 |\u001b[39m\n     \u001b[90m 15 |\u001b[39m describe(\u001b[32m'效能測試'\u001b[39m\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m {\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 16 |\u001b[39m   \u001b[36mlet\u001b[39m mockFirestore\u001b[33m:\u001b[39m any\n     \u001b[90m    |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 17 |\u001b[39m   \u001b[36mlet\u001b[39m mockSecretManager\u001b[33m:\u001b[39m any\n     \u001b[90m 18 |\u001b[39m   \u001b[36mlet\u001b[39m mockCloudScraper\u001b[33m:\u001b[39m any\n     \u001b[90m 19 |\u001b[39m\u001b[0m\n\n      \u001b[2mat constructor (\u001b[22mnode_modules/@babel/parser/src/parse-error.ts\u001b[2m:95:45)\u001b[22m\n      \u001b[2mat Parser.toParseError [as raise] (\u001b[22mnode_modules/@babel/parser/src/tokenizer/index.ts\u001b[2m:1503:19)\u001b[22m\n      \u001b[2mat Parser.raise [as semicolon] (\u001b[22mnode_modules/@babel/parser/src/parser/util.ts\u001b[2m:149:10)\u001b[22m\n      \u001b[2mat Parser.semicolon [as parseVarStatement] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1247:10)\u001b[22m\n      \u001b[2mat Parser.parseVarStatement [as parseStatementContent] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:607:21)\u001b[22m\n      \u001b[2mat Parser.parseStatementContent [as parseStatementLike] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:477:17)\u001b[22m\n      \u001b[2mat Parser.parseStatementLike [as parseStatementListItem] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:426:17)\u001b[22m\n      \u001b[2mat Parser.parseStatementListItem [as parseBlockOrModuleBlockBody] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1439:16)\u001b[22m\n      \u001b[2mat Parser.parseBlockOrModuleBlockBody [as parseBlockBody] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1412:10)\u001b[22m\n      \u001b[2mat Parser.parseBlockBody [as parseBlock] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1380:10)\u001b[22m\n      \u001b[2mat Parser.parseBlock [as parseFunctionBody] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:2616:24)\u001b[22m\n      \u001b[2mat Parser.parseFunctionBody [as parseArrowExpression] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:2553:10)\u001b[22m\n      \u001b[2mat Parser.parseArrowExpression [as parseParenAndDistinguishExpression] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:1837:12)\u001b[22m\n      \u001b[2mat Parser.parseParenAndDistinguishExpression [as parseExprAtom] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:1162:21)\u001b[22m\n      \u001b[2mat Parser.parseExprAtom [as parseExprSubscripts] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:734:23)\u001b[22m\n      \u001b[2mat Parser.parseExprSubscripts [as parseUpdate] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:713:21)\u001b[22m\n      \u001b[2mat Parser.parseUpdate [as parseMaybeUnary] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:675:23)\u001b[22m\n      \u001b[2mat Parser.parseMaybeUnary [as parseMaybeUnaryOrPrivate] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:409:14)\u001b[22m\n      \u001b[2mat Parser.parseMaybeUnaryOrPrivate [as parseExprOps] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:421:23)\u001b[22m\n      \u001b[2mat Parser.parseExprOps [as parseMaybeConditional] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:376:23)\u001b[22m\n      \u001b[2mat Parser.parseMaybeConditional [as parseMaybeAssign] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:301:21)\u001b[22m\n      \u001b[2mat parseMaybeAssign (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:257:12)\u001b[22m\n      \u001b[2mat Parser.callback [as allowInAnd] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:3192:12)\u001b[22m\n      \u001b[2mat Parser.allowInAnd [as parseMaybeAssignAllowIn] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:256:17)\u001b[22m\n      \u001b[2mat Parser.parseMaybeAssignAllowIn [as parseMaybeAssignAllowInOrVoidPattern] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:3306:17)\u001b[22m\n      \u001b[2mat Parser.parseMaybeAssignAllowInOrVoidPattern [as parseExprListItem] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:2788:18)\u001b[22m\n      \u001b[2mat Parser.parseExprListItem [as parseCallExpressionArguments] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:1034:14)\u001b[22m\n      \u001b[2mat Parser.parseCallExpressionArguments [as parseCoverCallAndAsyncArrowHead] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:914:29)\u001b[22m\n      \u001b[2mat Parser.parseCoverCallAndAsyncArrowHead [as parseSubscript] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:796:19)\u001b[22m\n      \u001b[2mat Parser.parseSubscript [as parseSubscripts] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:755:19)\u001b[22m\n      \u001b[2mat Parser.parseSubscripts [as parseExprSubscripts] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:740:17)\u001b[22m\n      \u001b[2mat Parser.parseExprSubscripts [as parseUpdate] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:713:21)\u001b[22m\n      \u001b[2mat Parser.parseUpdate [as parseMaybeUnary] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:675:23)\u001b[22m\n      \u001b[2mat Parser.parseMaybeUnary [as parseMaybeUnaryOrPrivate] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:409:14)\u001b[22m\n      \u001b[2mat Parser.parseMaybeUnaryOrPrivate [as parseExprOps] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:421:23)\u001b[22m\n      \u001b[2mat Parser.parseExprOps [as parseMaybeConditional] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:376:23)\u001b[22m\n      \u001b[2mat Parser.parseMaybeConditional [as parseMaybeAssign] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:301:21)\u001b[22m\n      \u001b[2mat Parser.parseMaybeAssign [as parseExpressionBase] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:226:23)\u001b[22m\n      \u001b[2mat parseExpressionBase (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:217:39)\u001b[22m\n      \u001b[2mat Parser.callback [as allowInAnd] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:3187:16)\u001b[22m\n      \u001b[2mat Parser.allowInAnd [as parseExpression] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:217:17)\u001b[22m\n      \u001b[2mat Parser.parseExpression [as parseStatementContent] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:683:23)\u001b[22m\n      \u001b[2mat Parser.parseStatementContent [as parseStatementLike] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:477:17)\u001b[22m\n      \u001b[2mat Parser.parseStatementLike [as parseModuleItem] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:414:17)\u001b[22m\n      \u001b[2mat Parser.parseModuleItem [as parseBlockOrModuleBlockBody] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1438:16)\u001b[22m\n      \u001b[2mat Parser.parseBlockOrModuleBlockBody [as parseBlockBody] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1412:10)\u001b[22m\n      \u001b[2mat Parser.parseBlockBody [as parseProgram] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:229:10)\u001b[22m\n      \u001b[2mat Parser.parseProgram [as parseTopLevel] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:203:25)\u001b[22m\n      \u001b[2mat Parser.parseTopLevel [as parse] (\u001b[22mnode_modules/@babel/parser/src/parser/index.ts\u001b[2m:93:10)\u001b[22m\n      \u001b[2mat parse (\u001b[22mnode_modules/@babel/parser/src/index.ts\u001b[2m:92:38)\u001b[22m\n      \u001b[2mat parser (\u001b[22mnode_modules/@babel/core/src/parser/index.ts\u001b[2m:28:19)\u001b[22m\n          at parser.next (<anonymous>)\n      \u001b[2mat normalizeFile (\u001b[22mnode_modules/@babel/core/src/transformation/normalize-file.ts\u001b[2m:49:24)\u001b[22m\n          at normalizeFile.next (<anonymous>)\n      \u001b[2mat run (\u001b[22mnode_modules/@babel/core/src/transformation/index.ts\u001b[2m:40:36)\u001b[22m\n          at run.next (<anonymous>)\n      \u001b[2mat transform (\u001b[22mnode_modules/@babel/core/src/transform.ts\u001b[2m:29:20)\u001b[22m\n          at transform.next (<anonymous>)\n      \u001b[2mat evaluateSync (\u001b[22mnode_modules/gensync/index.js\u001b[2m:251:28)\u001b[22m\n      \u001b[2mat sync (\u001b[22mnode_modules/gensync/index.js\u001b[2m:89:14)\u001b[22m\n      \u001b[2mat fn (\u001b[22mnode_modules/@babel/core/src/errors/rewrite-stack-trace.ts\u001b[2m:99:14)\u001b[22m\n      \u001b[2mat transformSync (\u001b[22mnode_modules/@babel/core/src/transform.ts\u001b[2m:66:52)\u001b[22m\n      \u001b[2mat ScriptTransformer.transformSource (\u001b[22mnode_modules/@jest/transform/build/ScriptTransformer.js\u001b[2m:545:31)\u001b[22m\n      \u001b[2mat ScriptTransformer._transformAndBuildScript (\u001b[22mnode_modules/@jest/transform/build/ScriptTransformer.js\u001b[2m:674:40)\u001b[22m\n      \u001b[2mat ScriptTransformer.transform (\u001b[22mnode_modules/@jest/transform/build/ScriptTransformer.js\u001b[2m:726:19)\u001b[22m\n","testResults":[]},{"numFailingTests":0,"numPassingTests":0,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":0,"runtime":0,"slow":false,"start":0},"testFilePath":"/Users/tony/tony-space/Tony/python/automated-ptt-telegram-scheduler/src/lib/__tests__/validation.test.ts","failureMessage":"  \u001b[1m● \u001b[22mTest suite failed to run\n\n    SyntaxError: /Users/tony/tony-space/Tony/python/automated-ptt-telegram-scheduler/src/lib/__tests__/validation.test.ts: Unexpected token, expected \",\" (91:62)\n\n    \u001b[0m \u001b[90m 89 |\u001b[39m\n     \u001b[90m 90 |\u001b[39m       it(\u001b[32m'should reject non-array keywords'\u001b[39m\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m {\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 91 |\u001b[39m         \u001b[36mconst\u001b[39m data \u001b[33m=\u001b[39m { \u001b[33m...\u001b[39mvalidData\u001b[33m,\u001b[39m keywords\u001b[33m:\u001b[39m \u001b[32m'not an array'\u001b[39m \u001b[36mas\u001b[39m any }\n     \u001b[90m    |\u001b[39m                                                               \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 92 |\u001b[39m         \u001b[36mconst\u001b[39m result \u001b[33m=\u001b[39m validateCreateConfiguration(data)\n     \u001b[90m 93 |\u001b[39m         \n     \u001b[90m 94 |\u001b[39m         expect(result\u001b[33m.\u001b[39misValid)\u001b[33m.\u001b[39mtoBe(\u001b[36mfalse\u001b[39m)\u001b[0m\n\n      \u001b[2mat constructor (\u001b[22mnode_modules/@babel/parser/src/parse-error.ts\u001b[2m:95:45)\u001b[22m\n      \u001b[2mat Parser.toParseError [as raise] (\u001b[22mnode_modules/@babel/parser/src/tokenizer/index.ts\u001b[2m:1503:19)\u001b[22m\n      \u001b[2mat Parser.raise [as unexpected] (\u001b[22mnode_modules/@babel/parser/src/tokenizer/index.ts\u001b[2m:1543:16)\u001b[22m\n      \u001b[2mat Parser.unexpected [as expect] (\u001b[22mnode_modules/@babel/parser/src/parser/util.ts\u001b[2m:157:12)\u001b[22m\n      \u001b[2mat Parser.expect [as parseObjectLike] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:2074:14)\u001b[22m\n      \u001b[2mat Parser.parseObjectLike [as parseExprAtom] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:1174:21)\u001b[22m\n      \u001b[2mat Parser.parseExprAtom [as parseExprSubscripts] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:734:23)\u001b[22m\n      \u001b[2mat Parser.parseExprSubscripts [as parseUpdate] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:713:21)\u001b[22m\n      \u001b[2mat Parser.parseUpdate [as parseMaybeUnary] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:675:23)\u001b[22m\n      \u001b[2mat Parser.parseMaybeUnary [as parseMaybeUnaryOrPrivate] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:409:14)\u001b[22m\n      \u001b[2mat Parser.parseMaybeUnaryOrPrivate [as parseExprOps] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:421:23)\u001b[22m\n      \u001b[2mat Parser.parseExprOps [as parseMaybeConditional] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:376:23)\u001b[22m\n      \u001b[2mat Parser.parseMaybeConditional [as parseMaybeAssign] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:301:21)\u001b[22m\n      \u001b[2mat parseMaybeAssign (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:257:12)\u001b[22m\n      \u001b[2mat Parser.callback [as allowInAnd] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:3187:16)\u001b[22m\n      \u001b[2mat Parser.allowInAnd [as parseMaybeAssignAllowIn] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:256:17)\u001b[22m\n      \u001b[2mat Parser.parseMaybeAssignAllowIn [as parseVar] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1582:18)\u001b[22m\n      \u001b[2mat Parser.parseVar [as parseVarStatement] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1246:10)\u001b[22m\n      \u001b[2mat Parser.parseVarStatement [as parseStatementContent] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:607:21)\u001b[22m\n      \u001b[2mat Parser.parseStatementContent [as parseStatementLike] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:477:17)\u001b[22m\n      \u001b[2mat Parser.parseStatementLike [as parseStatementListItem] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:426:17)\u001b[22m\n      \u001b[2mat Parser.parseStatementListItem [as parseBlockOrModuleBlockBody] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1439:16)\u001b[22m\n      \u001b[2mat Parser.parseBlockOrModuleBlockBody [as parseBlockBody] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1412:10)\u001b[22m\n      \u001b[2mat Parser.parseBlockBody [as parseBlock] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1380:10)\u001b[22m\n      \u001b[2mat Parser.parseBlock [as parseFunctionBody] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:2616:24)\u001b[22m\n      \u001b[2mat Parser.parseFunctionBody [as parseArrowExpression] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:2553:10)\u001b[22m\n      \u001b[2mat Parser.parseArrowExpression [as parseParenAndDistinguishExpression] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:1837:12)\u001b[22m\n      \u001b[2mat Parser.parseParenAndDistinguishExpression [as parseExprAtom] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:1162:21)\u001b[22m\n      \u001b[2mat Parser.parseExprAtom [as parseExprSubscripts] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:734:23)\u001b[22m\n      \u001b[2mat Parser.parseExprSubscripts [as parseUpdate] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:713:21)\u001b[22m\n      \u001b[2mat Parser.parseUpdate [as parseMaybeUnary] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:675:23)\u001b[22m\n      \u001b[2mat Parser.parseMaybeUnary [as parseMaybeUnaryOrPrivate] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:409:14)\u001b[22m\n      \u001b[2mat Parser.parseMaybeUnaryOrPrivate [as parseExprOps] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:421:23)\u001b[22m\n      \u001b[2mat Parser.parseExprOps [as parseMaybeConditional] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:376:23)\u001b[22m\n      \u001b[2mat Parser.parseMaybeConditional [as parseMaybeAssign] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:301:21)\u001b[22m\n      \u001b[2mat parseMaybeAssign (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:257:12)\u001b[22m\n      \u001b[2mat Parser.callback [as allowInAnd] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:3192:12)\u001b[22m\n      \u001b[2mat Parser.allowInAnd [as parseMaybeAssignAllowIn] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:256:17)\u001b[22m\n      \u001b[2mat Parser.parseMaybeAssignAllowIn [as parseMaybeAssignAllowInOrVoidPattern] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:3306:17)\u001b[22m\n      \u001b[2mat Parser.parseMaybeAssignAllowInOrVoidPattern [as parseExprListItem] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:2788:18)\u001b[22m\n      \u001b[2mat Parser.parseExprListItem [as parseCallExpressionArguments] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:1034:14)\u001b[22m\n      \u001b[2mat Parser.parseCallExpressionArguments [as parseCoverCallAndAsyncArrowHead] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:914:29)\u001b[22m\n      \u001b[2mat Parser.parseCoverCallAndAsyncArrowHead [as parseSubscript] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:796:19)\u001b[22m\n      \u001b[2mat Parser.parseSubscript [as parseSubscripts] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:755:19)\u001b[22m\n      \u001b[2mat Parser.parseSubscripts [as parseExprSubscripts] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:740:17)\u001b[22m\n      \u001b[2mat Parser.parseExprSubscripts [as parseUpdate] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:713:21)\u001b[22m\n      \u001b[2mat Parser.parseUpdate [as parseMaybeUnary] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:675:23)\u001b[22m\n      \u001b[2mat Parser.parseMaybeUnary [as parseMaybeUnaryOrPrivate] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:409:14)\u001b[22m\n      \u001b[2mat Parser.parseMaybeUnaryOrPrivate [as parseExprOps] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:421:23)\u001b[22m\n      \u001b[2mat Parser.parseExprOps [as parseMaybeConditional] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:376:23)\u001b[22m\n      \u001b[2mat Parser.parseMaybeConditional [as parseMaybeAssign] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:301:21)\u001b[22m\n      \u001b[2mat Parser.parseMaybeAssign [as parseExpressionBase] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:226:23)\u001b[22m\n      \u001b[2mat parseExpressionBase (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:217:39)\u001b[22m\n      \u001b[2mat Parser.callback [as allowInAnd] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:3187:16)\u001b[22m\n      \u001b[2mat Parser.allowInAnd [as parseExpression] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:217:17)\u001b[22m\n      \u001b[2mat Parser.parseExpression [as parseStatementContent] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:683:23)\u001b[22m\n      \u001b[2mat Parser.parseStatementContent [as parseStatementLike] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:477:17)\u001b[22m\n      \u001b[2mat Parser.parseStatementLike [as parseStatementListItem] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:426:17)\u001b[22m\n      \u001b[2mat Parser.parseStatementListItem [as parseBlockOrModuleBlockBody] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1439:16)\u001b[22m\n      \u001b[2mat Parser.parseBlockOrModuleBlockBody [as parseBlockBody] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1412:10)\u001b[22m\n      \u001b[2mat Parser.parseBlockBody [as parseBlock] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1380:10)\u001b[22m\n      \u001b[2mat Parser.parseBlock [as parseFunctionBody] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:2616:24)\u001b[22m\n      \u001b[2mat Parser.parseFunctionBody [as parseArrowExpression] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:2553:10)\u001b[22m\n      \u001b[2mat Parser.parseArrowExpression [as parseParenAndDistinguishExpression] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:1837:12)\u001b[22m\n      \u001b[2mat Parser.parseParenAndDistinguishExpression [as parseExprAtom] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:1162:21)\u001b[22m\n      \u001b[2mat Parser.parseExprAtom [as parseExprSubscripts] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:734:23)\u001b[22m\n      \u001b[2mat Parser.parseExprSubscripts [as parseUpdate] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:713:21)\u001b[22m\n      \u001b[2mat Parser.parseUpdate [as parseMaybeUnary] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:675:23)\u001b[22m\n      \u001b[2mat Parser.parseMaybeUnary [as parseMaybeUnaryOrPrivate] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:409:14)\u001b[22m\n      \u001b[2mat Parser.parseMaybeUnaryOrPrivate [as parseExprOps] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:421:23)\u001b[22m\n      \u001b[2mat Parser.parseExprOps [as parseMaybeConditional] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:376:23)\u001b[22m\n      \u001b[2mat Parser.parseMaybeConditional [as parseMaybeAssign] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:301:21)\u001b[22m\n      \u001b[2mat parseMaybeAssign (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:257:12)\u001b[22m\n      \u001b[2mat Parser.callback [as allowInAnd] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:3192:12)\u001b[22m\n      \u001b[2mat Parser.allowInAnd [as parseMaybeAssignAllowIn] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:256:17)\u001b[22m\n      \u001b[2mat Parser.parseMaybeAssignAllowIn [as parseMaybeAssignAllowInOrVoidPattern] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:3306:17)\u001b[22m\n      \u001b[2mat Parser.parseMaybeAssignAllowInOrVoidPattern [as parseExprListItem] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:2788:18)\u001b[22m\n      \u001b[2mat Parser.parseExprListItem [as parseCallExpressionArguments] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:1034:14)\u001b[22m\n      \u001b[2mat Parser.parseCallExpressionArguments [as parseCoverCallAndAsyncArrowHead] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:914:29)\u001b[22m\n      \u001b[2mat Parser.parseCoverCallAndAsyncArrowHead [as parseSubscript] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:796:19)\u001b[22m\n      \u001b[2mat Parser.parseSubscript [as parseSubscripts] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:755:19)\u001b[22m\n      \u001b[2mat Parser.parseSubscripts [as parseExprSubscripts] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:740:17)\u001b[22m\n      \u001b[2mat Parser.parseExprSubscripts [as parseUpdate] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:713:21)\u001b[22m\n      \u001b[2mat Parser.parseUpdate [as parseMaybeUnary] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:675:23)\u001b[22m\n      \u001b[2mat Parser.parseMaybeUnary [as parseMaybeUnaryOrPrivate] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:409:14)\u001b[22m\n      \u001b[2mat Parser.parseMaybeUnaryOrPrivate [as parseExprOps] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:421:23)\u001b[22m\n      \u001b[2mat Parser.parseExprOps [as parseMaybeConditional] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:376:23)\u001b[22m\n      \u001b[2mat Parser.parseMaybeConditional [as parseMaybeAssign] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:301:21)\u001b[22m\n      \u001b[2mat Parser.parseMaybeAssign [as parseExpressionBase] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:226:23)\u001b[22m\n      \u001b[2mat parseExpressionBase (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:217:39)\u001b[22m\n      \u001b[2mat Parser.callback [as allowInAnd] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:3187:16)\u001b[22m\n      \u001b[2mat Parser.allowInAnd [as parseExpression] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:217:17)\u001b[22m\n      \u001b[2mat Parser.parseExpression [as parseStatementContent] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:683:23)\u001b[22m\n      \u001b[2mat Parser.parseStatementContent [as parseStatementLike] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:477:17)\u001b[22m\n      \u001b[2mat Parser.parseStatementLike [as parseStatementListItem] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:426:17)\u001b[22m\n      \u001b[2mat Parser.parseStatementListItem [as parseBlockOrModuleBlockBody] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1439:16)\u001b[22m\n      \u001b[2mat Parser.parseBlockOrModuleBlockBody [as parseBlockBody] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1412:10)\u001b[22m\n      \u001b[2mat Parser.parseBlockBody [as parseBlock] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1380:10)\u001b[22m\n      \u001b[2mat Parser.parseBlock [as parseFunctionBody] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:2616:24)\u001b[22m\n      \u001b[2mat Parser.parseFunctionBody [as parseArrowExpression] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:2553:10)\u001b[22m\n","testResults":[]},{"numFailingTests":0,"numPassingTests":0,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":0,"runtime":0,"slow":false,"start":0},"testFilePath":"/Users/tony/tony-space/Tony/python/automated-ptt-telegram-scheduler/src/middleware/__tests__/error-handling.test.ts","failureMessage":"  \u001b[1m● \u001b[22mTest suite failed to run\n\n    \u001b[1m\u001b[31mJest encountered an unexpected token\u001b[39m\u001b[22m\n\n    Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.\n\n    Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.\n\n    By default \"node_modules\" folder is ignored by transformers.\n\n    Here's what you can do:\n     • If you are trying to use ECMAScript Modules, see \u001b[4mhttps://jestjs.io/docs/ecmascript-modules\u001b[24m for how to enable it.\n     • If you are trying to use TypeScript, see \u001b[4mhttps://jestjs.io/docs/getting-started#using-typescript\u001b[24m\n     • To have some of your \"node_modules\" files transformed, you can specify a custom \u001b[1m\"transformIgnorePatterns\"\u001b[22m in your config.\n     • If you need a custom transformation specify a \u001b[1m\"transform\"\u001b[22m option in your config.\n     • If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the \u001b[1m\"moduleNameMapper\"\u001b[22m config option.\n\n    You'll find more details and examples of these config options in the docs:\n    \u001b[36mhttps://jestjs.io/docs/configuration\u001b[39m\n    For information about custom transformations, see:\n    \u001b[36mhttps://jestjs.io/docs/code-transformation\u001b[39m\n\n    \u001b[1m\u001b[31mDetails:\u001b[39m\u001b[22m\n\n    SyntaxError: /Users/tony/tony-space/Tony/python/automated-ptt-telegram-scheduler/src/middleware/__tests__/error-handling.test.ts: Missing semicolon. (148:15)\n\n    \u001b[0m \u001b[90m 146 |\u001b[39m\n     \u001b[90m 147 |\u001b[39m   describe(\u001b[32m'ErrorHandlingMiddleware'\u001b[39m\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m {\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 148 |\u001b[39m     \u001b[36mlet\u001b[39m mockReq\u001b[33m:\u001b[39m \u001b[33mPartial\u001b[39m\u001b[33m<\u001b[39m\u001b[33mNextApiRequest\u001b[39m\u001b[33m>\u001b[39m\n     \u001b[90m     |\u001b[39m                \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 149 |\u001b[39m     \u001b[36mlet\u001b[39m mockRes\u001b[33m:\u001b[39m \u001b[33mPartial\u001b[39m\u001b[33m<\u001b[39m\u001b[33mNextApiResponse\u001b[39m\u001b[33m>\u001b[39m\n     \u001b[90m 150 |\u001b[39m\n     \u001b[90m 151 |\u001b[39m     beforeEach(() \u001b[33m=>\u001b[39m {\u001b[0m\n\n      \u001b[2mat constructor (\u001b[22mnode_modules/@babel/parser/src/parse-error.ts\u001b[2m:95:45)\u001b[22m\n      \u001b[2mat Parser.toParseError [as raise] (\u001b[22mnode_modules/@babel/parser/src/tokenizer/index.ts\u001b[2m:1503:19)\u001b[22m\n      \u001b[2mat Parser.raise [as semicolon] (\u001b[22mnode_modules/@babel/parser/src/parser/util.ts\u001b[2m:149:10)\u001b[22m\n      \u001b[2mat Parser.semicolon [as parseVarStatement] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1247:10)\u001b[22m\n      \u001b[2mat Parser.parseVarStatement [as parseStatementContent] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:607:21)\u001b[22m\n      \u001b[2mat Parser.parseStatementContent [as parseStatementLike] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:477:17)\u001b[22m\n      \u001b[2mat Parser.parseStatementLike [as parseStatementListItem] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:426:17)\u001b[22m\n      \u001b[2mat Parser.parseStatementListItem [as parseBlockOrModuleBlockBody] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1439:16)\u001b[22m\n      \u001b[2mat Parser.parseBlockOrModuleBlockBody [as parseBlockBody] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1412:10)\u001b[22m\n      \u001b[2mat Parser.parseBlockBody [as parseBlock] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1380:10)\u001b[22m\n      \u001b[2mat Parser.parseBlock [as parseFunctionBody] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:2616:24)\u001b[22m\n      \u001b[2mat Parser.parseFunctionBody [as parseArrowExpression] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:2553:10)\u001b[22m\n      \u001b[2mat Parser.parseArrowExpression [as parseParenAndDistinguishExpression] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:1837:12)\u001b[22m\n      \u001b[2mat Parser.parseParenAndDistinguishExpression [as parseExprAtom] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:1162:21)\u001b[22m\n      \u001b[2mat Parser.parseExprAtom [as parseExprSubscripts] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:734:23)\u001b[22m\n      \u001b[2mat Parser.parseExprSubscripts [as parseUpdate] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:713:21)\u001b[22m\n      \u001b[2mat Parser.parseUpdate [as parseMaybeUnary] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:675:23)\u001b[22m\n      \u001b[2mat Parser.parseMaybeUnary [as parseMaybeUnaryOrPrivate] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:409:14)\u001b[22m\n      \u001b[2mat Parser.parseMaybeUnaryOrPrivate [as parseExprOps] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:421:23)\u001b[22m\n      \u001b[2mat Parser.parseExprOps [as parseMaybeConditional] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:376:23)\u001b[22m\n      \u001b[2mat Parser.parseMaybeConditional [as parseMaybeAssign] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:301:21)\u001b[22m\n      \u001b[2mat parseMaybeAssign (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:257:12)\u001b[22m\n      \u001b[2mat Parser.callback [as allowInAnd] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:3192:12)\u001b[22m\n      \u001b[2mat Parser.allowInAnd [as parseMaybeAssignAllowIn] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:256:17)\u001b[22m\n      \u001b[2mat Parser.parseMaybeAssignAllowIn [as parseMaybeAssignAllowInOrVoidPattern] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:3306:17)\u001b[22m\n      \u001b[2mat Parser.parseMaybeAssignAllowInOrVoidPattern [as parseExprListItem] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:2788:18)\u001b[22m\n      \u001b[2mat Parser.parseExprListItem [as parseCallExpressionArguments] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:1034:14)\u001b[22m\n      \u001b[2mat Parser.parseCallExpressionArguments [as parseCoverCallAndAsyncArrowHead] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:914:29)\u001b[22m\n      \u001b[2mat Parser.parseCoverCallAndAsyncArrowHead [as parseSubscript] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:796:19)\u001b[22m\n      \u001b[2mat Parser.parseSubscript [as parseSubscripts] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:755:19)\u001b[22m\n      \u001b[2mat Parser.parseSubscripts [as parseExprSubscripts] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:740:17)\u001b[22m\n      \u001b[2mat Parser.parseExprSubscripts [as parseUpdate] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:713:21)\u001b[22m\n      \u001b[2mat Parser.parseUpdate [as parseMaybeUnary] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:675:23)\u001b[22m\n      \u001b[2mat Parser.parseMaybeUnary [as parseMaybeUnaryOrPrivate] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:409:14)\u001b[22m\n      \u001b[2mat Parser.parseMaybeUnaryOrPrivate [as parseExprOps] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:421:23)\u001b[22m\n      \u001b[2mat Parser.parseExprOps [as parseMaybeConditional] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:376:23)\u001b[22m\n      \u001b[2mat Parser.parseMaybeConditional [as parseMaybeAssign] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:301:21)\u001b[22m\n      \u001b[2mat Parser.parseMaybeAssign [as parseExpressionBase] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:226:23)\u001b[22m\n      \u001b[2mat parseExpressionBase (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:217:39)\u001b[22m\n      \u001b[2mat Parser.callback [as allowInAnd] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:3187:16)\u001b[22m\n      \u001b[2mat Parser.allowInAnd [as parseExpression] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:217:17)\u001b[22m\n      \u001b[2mat Parser.parseExpression [as parseStatementContent] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:683:23)\u001b[22m\n      \u001b[2mat Parser.parseStatementContent [as parseStatementLike] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:477:17)\u001b[22m\n      \u001b[2mat Parser.parseStatementLike [as parseStatementListItem] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:426:17)\u001b[22m\n      \u001b[2mat Parser.parseStatementListItem [as parseBlockOrModuleBlockBody] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1439:16)\u001b[22m\n      \u001b[2mat Parser.parseBlockOrModuleBlockBody [as parseBlockBody] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1412:10)\u001b[22m\n      \u001b[2mat Parser.parseBlockBody [as parseBlock] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1380:10)\u001b[22m\n      \u001b[2mat Parser.parseBlock [as parseFunctionBody] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:2616:24)\u001b[22m\n      \u001b[2mat Parser.parseFunctionBody [as parseArrowExpression] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:2553:10)\u001b[22m\n      \u001b[2mat Parser.parseArrowExpression [as parseParenAndDistinguishExpression] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:1837:12)\u001b[22m\n      \u001b[2mat Parser.parseParenAndDistinguishExpression [as parseExprAtom] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:1162:21)\u001b[22m\n      \u001b[2mat Parser.parseExprAtom [as parseExprSubscripts] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:734:23)\u001b[22m\n      \u001b[2mat Parser.parseExprSubscripts [as parseUpdate] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:713:21)\u001b[22m\n      \u001b[2mat Parser.parseUpdate [as parseMaybeUnary] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:675:23)\u001b[22m\n      \u001b[2mat Parser.parseMaybeUnary [as parseMaybeUnaryOrPrivate] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:409:14)\u001b[22m\n      \u001b[2mat Parser.parseMaybeUnaryOrPrivate [as parseExprOps] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:421:23)\u001b[22m\n      \u001b[2mat Parser.parseExprOps [as parseMaybeConditional] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:376:23)\u001b[22m\n      \u001b[2mat Parser.parseMaybeConditional [as parseMaybeAssign] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:301:21)\u001b[22m\n      \u001b[2mat parseMaybeAssign (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:257:12)\u001b[22m\n      \u001b[2mat Parser.callback [as allowInAnd] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:3192:12)\u001b[22m\n      \u001b[2mat Parser.allowInAnd [as parseMaybeAssignAllowIn] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:256:17)\u001b[22m\n      \u001b[2mat Parser.parseMaybeAssignAllowIn [as parseMaybeAssignAllowInOrVoidPattern] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:3306:17)\u001b[22m\n      \u001b[2mat Parser.parseMaybeAssignAllowInOrVoidPattern [as parseExprListItem] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:2788:18)\u001b[22m\n      \u001b[2mat Parser.parseExprListItem [as parseCallExpressionArguments] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:1034:14)\u001b[22m\n      \u001b[2mat Parser.parseCallExpressionArguments [as parseCoverCallAndAsyncArrowHead] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:914:29)\u001b[22m\n      \u001b[2mat Parser.parseCoverCallAndAsyncArrowHead [as parseSubscript] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:796:19)\u001b[22m\n      \u001b[2mat Parser.parseSubscript [as parseSubscripts] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:755:19)\u001b[22m\n      \u001b[2mat Parser.parseSubscripts [as parseExprSubscripts] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:740:17)\u001b[22m\n      \u001b[2mat Parser.parseExprSubscripts [as parseUpdate] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:713:21)\u001b[22m\n      \u001b[2mat Parser.parseUpdate [as parseMaybeUnary] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:675:23)\u001b[22m\n      \u001b[2mat Parser.parseMaybeUnary [as parseMaybeUnaryOrPrivate] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:409:14)\u001b[22m\n      \u001b[2mat Parser.parseMaybeUnaryOrPrivate [as parseExprOps] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:421:23)\u001b[22m\n      \u001b[2mat Parser.parseExprOps [as parseMaybeConditional] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:376:23)\u001b[22m\n      \u001b[2mat Parser.parseMaybeConditional [as parseMaybeAssign] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:301:21)\u001b[22m\n      \u001b[2mat Parser.parseMaybeAssign [as parseExpressionBase] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:226:23)\u001b[22m\n      \u001b[2mat parseExpressionBase (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:217:39)\u001b[22m\n      \u001b[2mat Parser.callback [as allowInAnd] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:3187:16)\u001b[22m\n      \u001b[2mat Parser.allowInAnd [as parseExpression] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:217:17)\u001b[22m\n      \u001b[2mat Parser.parseExpression [as parseStatementContent] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:683:23)\u001b[22m\n      \u001b[2mat Parser.parseStatementContent [as parseStatementLike] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:477:17)\u001b[22m\n      \u001b[2mat Parser.parseStatementLike [as parseModuleItem] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:414:17)\u001b[22m\n      \u001b[2mat Parser.parseModuleItem [as parseBlockOrModuleBlockBody] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1438:16)\u001b[22m\n      \u001b[2mat Parser.parseBlockOrModuleBlockBody [as parseBlockBody] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1412:10)\u001b[22m\n      \u001b[2mat Parser.parseBlockBody [as parseProgram] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:229:10)\u001b[22m\n      \u001b[2mat Parser.parseProgram [as parseTopLevel] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:203:25)\u001b[22m\n      \u001b[2mat Parser.parseTopLevel [as parse] (\u001b[22mnode_modules/@babel/parser/src/parser/index.ts\u001b[2m:93:10)\u001b[22m\n      \u001b[2mat parse (\u001b[22mnode_modules/@babel/parser/src/index.ts\u001b[2m:92:38)\u001b[22m\n      \u001b[2mat parser (\u001b[22mnode_modules/@babel/core/src/parser/index.ts\u001b[2m:28:19)\u001b[22m\n          at parser.next (<anonymous>)\n      \u001b[2mat normalizeFile (\u001b[22mnode_modules/@babel/core/src/transformation/normalize-file.ts\u001b[2m:49:24)\u001b[22m\n          at normalizeFile.next (<anonymous>)\n      \u001b[2mat run (\u001b[22mnode_modules/@babel/core/src/transformation/index.ts\u001b[2m:40:36)\u001b[22m\n          at run.next (<anonymous>)\n      \u001b[2mat transform (\u001b[22mnode_modules/@babel/core/src/transform.ts\u001b[2m:29:20)\u001b[22m\n          at transform.next (<anonymous>)\n      \u001b[2mat evaluateSync (\u001b[22mnode_modules/gensync/index.js\u001b[2m:251:28)\u001b[22m\n      \u001b[2mat sync (\u001b[22mnode_modules/gensync/index.js\u001b[2m:89:14)\u001b[22m\n      \u001b[2mat fn (\u001b[22mnode_modules/@babel/core/src/errors/rewrite-stack-trace.ts\u001b[2m:99:14)\u001b[22m\n      \u001b[2mat transformSync (\u001b[22mnode_modules/@babel/core/src/transform.ts\u001b[2m:66:52)\u001b[22m\n","testResults":[]},{"numFailingTests":0,"numPassingTests":0,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":0,"runtime":0,"slow":false,"start":0},"testFilePath":"/Users/tony/tony-space/Tony/python/automated-ptt-telegram-scheduler/src/lib/__tests__/error-handling.test.ts","failureMessage":"  \u001b[1m● \u001b[22mTest suite failed to run\n\n    \u001b[1m\u001b[31mJest encountered an unexpected token\u001b[39m\u001b[22m\n\n    Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.\n\n    Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.\n\n    By default \"node_modules\" folder is ignored by transformers.\n\n    Here's what you can do:\n     • If you are trying to use ECMAScript Modules, see \u001b[4mhttps://jestjs.io/docs/ecmascript-modules\u001b[24m for how to enable it.\n     • If you are trying to use TypeScript, see \u001b[4mhttps://jestjs.io/docs/getting-started#using-typescript\u001b[24m\n     • To have some of your \"node_modules\" files transformed, you can specify a custom \u001b[1m\"transformIgnorePatterns\"\u001b[22m in your config.\n     • If you need a custom transformation specify a \u001b[1m\"transform\"\u001b[22m option in your config.\n     • If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the \u001b[1m\"moduleNameMapper\"\u001b[22m config option.\n\n    You'll find more details and examples of these config options in the docs:\n    \u001b[36mhttps://jestjs.io/docs/configuration\u001b[39m\n    For information about custom transformations, see:\n    \u001b[36mhttps://jestjs.io/docs/code-transformation\u001b[39m\n\n    \u001b[1m\u001b[31mDetails:\u001b[39m\u001b[22m\n\n    SyntaxError: /Users/tony/tony-space/Tony/python/automated-ptt-telegram-scheduler/src/lib/__tests__/error-handling.test.ts: Missing semicolon. (206:39)\n\n    \u001b[0m \u001b[90m 204 |\u001b[39m       \u001b[36mconst\u001b[39m wrappedHandler \u001b[33m=\u001b[39m withMethodValidation([\u001b[32m'GET'\u001b[39m\u001b[33m,\u001b[39m \u001b[32m'POST'\u001b[39m])(mockHandler)\n     \u001b[90m 205 |\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 206 |\u001b[39m       \u001b[36mconst\u001b[39m mockReq \u001b[33m=\u001b[39m { method\u001b[33m:\u001b[39m \u001b[32m'GET'\u001b[39m } \u001b[36mas\u001b[39m any\n     \u001b[90m     |\u001b[39m                                        \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 207 |\u001b[39m       \u001b[36mconst\u001b[39m mockRes \u001b[33m=\u001b[39m { \n     \u001b[90m 208 |\u001b[39m         status\u001b[33m:\u001b[39m jest\u001b[33m.\u001b[39mfn()\u001b[33m.\u001b[39mmockReturnThis()\u001b[33m,\u001b[39m\n     \u001b[90m 209 |\u001b[39m         json\u001b[33m:\u001b[39m jest\u001b[33m.\u001b[39mfn()\u001b[33m,\u001b[39m\u001b[0m\n\n      \u001b[2mat constructor (\u001b[22mnode_modules/@babel/parser/src/parse-error.ts\u001b[2m:95:45)\u001b[22m\n      \u001b[2mat Parser.toParseError [as raise] (\u001b[22mnode_modules/@babel/parser/src/tokenizer/index.ts\u001b[2m:1503:19)\u001b[22m\n      \u001b[2mat Parser.raise [as semicolon] (\u001b[22mnode_modules/@babel/parser/src/parser/util.ts\u001b[2m:149:10)\u001b[22m\n      \u001b[2mat Parser.semicolon [as parseVarStatement] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1247:10)\u001b[22m\n      \u001b[2mat Parser.parseVarStatement [as parseStatementContent] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:607:21)\u001b[22m\n      \u001b[2mat Parser.parseStatementContent [as parseStatementLike] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:477:17)\u001b[22m\n      \u001b[2mat Parser.parseStatementLike [as parseStatementListItem] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:426:17)\u001b[22m\n      \u001b[2mat Parser.parseStatementListItem [as parseBlockOrModuleBlockBody] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1439:16)\u001b[22m\n      \u001b[2mat Parser.parseBlockOrModuleBlockBody [as parseBlockBody] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1412:10)\u001b[22m\n      \u001b[2mat Parser.parseBlockBody [as parseBlock] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1380:10)\u001b[22m\n      \u001b[2mat Parser.parseBlock [as parseFunctionBody] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:2616:24)\u001b[22m\n      \u001b[2mat Parser.parseFunctionBody [as parseArrowExpression] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:2553:10)\u001b[22m\n      \u001b[2mat Parser.parseArrowExpression [as parseAsyncArrowFromCallExpression] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:1059:10)\u001b[22m\n      \u001b[2mat Parser.parseAsyncArrowFromCallExpression [as parseCoverCallAndAsyncArrowHead] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:934:27)\u001b[22m\n      \u001b[2mat Parser.parseCoverCallAndAsyncArrowHead [as parseSubscript] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:796:19)\u001b[22m\n      \u001b[2mat Parser.parseSubscript [as parseSubscripts] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:755:19)\u001b[22m\n      \u001b[2mat Parser.parseSubscripts [as parseExprSubscripts] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:740:17)\u001b[22m\n      \u001b[2mat Parser.parseExprSubscripts [as parseUpdate] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:713:21)\u001b[22m\n      \u001b[2mat Parser.parseUpdate [as parseMaybeUnary] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:675:23)\u001b[22m\n      \u001b[2mat Parser.parseMaybeUnary [as parseMaybeUnaryOrPrivate] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:409:14)\u001b[22m\n      \u001b[2mat Parser.parseMaybeUnaryOrPrivate [as parseExprOps] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:421:23)\u001b[22m\n      \u001b[2mat Parser.parseExprOps [as parseMaybeConditional] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:376:23)\u001b[22m\n      \u001b[2mat Parser.parseMaybeConditional [as parseMaybeAssign] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:301:21)\u001b[22m\n      \u001b[2mat parseMaybeAssign (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:257:12)\u001b[22m\n      \u001b[2mat Parser.callback [as allowInAnd] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:3192:12)\u001b[22m\n      \u001b[2mat Parser.allowInAnd [as parseMaybeAssignAllowIn] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:256:17)\u001b[22m\n      \u001b[2mat Parser.parseMaybeAssignAllowIn [as parseMaybeAssignAllowInOrVoidPattern] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:3306:17)\u001b[22m\n      \u001b[2mat Parser.parseMaybeAssignAllowInOrVoidPattern [as parseExprListItem] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:2788:18)\u001b[22m\n      \u001b[2mat Parser.parseExprListItem [as parseCallExpressionArguments] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:1034:14)\u001b[22m\n      \u001b[2mat Parser.parseCallExpressionArguments [as parseCoverCallAndAsyncArrowHead] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:914:29)\u001b[22m\n      \u001b[2mat Parser.parseCoverCallAndAsyncArrowHead [as parseSubscript] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:796:19)\u001b[22m\n      \u001b[2mat Parser.parseSubscript [as parseSubscripts] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:755:19)\u001b[22m\n      \u001b[2mat Parser.parseSubscripts [as parseExprSubscripts] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:740:17)\u001b[22m\n      \u001b[2mat Parser.parseExprSubscripts [as parseUpdate] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:713:21)\u001b[22m\n      \u001b[2mat Parser.parseUpdate [as parseMaybeUnary] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:675:23)\u001b[22m\n      \u001b[2mat Parser.parseMaybeUnary [as parseMaybeUnaryOrPrivate] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:409:14)\u001b[22m\n      \u001b[2mat Parser.parseMaybeUnaryOrPrivate [as parseExprOps] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:421:23)\u001b[22m\n      \u001b[2mat Parser.parseExprOps [as parseMaybeConditional] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:376:23)\u001b[22m\n      \u001b[2mat Parser.parseMaybeConditional [as parseMaybeAssign] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:301:21)\u001b[22m\n      \u001b[2mat Parser.parseMaybeAssign [as parseExpressionBase] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:226:23)\u001b[22m\n      \u001b[2mat parseExpressionBase (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:217:39)\u001b[22m\n      \u001b[2mat Parser.callback [as allowInAnd] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:3187:16)\u001b[22m\n      \u001b[2mat Parser.allowInAnd [as parseExpression] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:217:17)\u001b[22m\n      \u001b[2mat Parser.parseExpression [as parseStatementContent] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:683:23)\u001b[22m\n      \u001b[2mat Parser.parseStatementContent [as parseStatementLike] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:477:17)\u001b[22m\n      \u001b[2mat Parser.parseStatementLike [as parseStatementListItem] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:426:17)\u001b[22m\n      \u001b[2mat Parser.parseStatementListItem [as parseBlockOrModuleBlockBody] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1439:16)\u001b[22m\n      \u001b[2mat Parser.parseBlockOrModuleBlockBody [as parseBlockBody] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1412:10)\u001b[22m\n      \u001b[2mat Parser.parseBlockBody [as parseBlock] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1380:10)\u001b[22m\n      \u001b[2mat Parser.parseBlock [as parseFunctionBody] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:2616:24)\u001b[22m\n      \u001b[2mat Parser.parseFunctionBody [as parseArrowExpression] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:2553:10)\u001b[22m\n      \u001b[2mat Parser.parseArrowExpression [as parseParenAndDistinguishExpression] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:1837:12)\u001b[22m\n      \u001b[2mat Parser.parseParenAndDistinguishExpression [as parseExprAtom] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:1162:21)\u001b[22m\n      \u001b[2mat Parser.parseExprAtom [as parseExprSubscripts] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:734:23)\u001b[22m\n      \u001b[2mat Parser.parseExprSubscripts [as parseUpdate] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:713:21)\u001b[22m\n      \u001b[2mat Parser.parseUpdate [as parseMaybeUnary] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:675:23)\u001b[22m\n      \u001b[2mat Parser.parseMaybeUnary [as parseMaybeUnaryOrPrivate] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:409:14)\u001b[22m\n      \u001b[2mat Parser.parseMaybeUnaryOrPrivate [as parseExprOps] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:421:23)\u001b[22m\n      \u001b[2mat Parser.parseExprOps [as parseMaybeConditional] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:376:23)\u001b[22m\n      \u001b[2mat Parser.parseMaybeConditional [as parseMaybeAssign] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:301:21)\u001b[22m\n      \u001b[2mat parseMaybeAssign (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:257:12)\u001b[22m\n      \u001b[2mat Parser.callback [as allowInAnd] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:3192:12)\u001b[22m\n      \u001b[2mat Parser.allowInAnd [as parseMaybeAssignAllowIn] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:256:17)\u001b[22m\n      \u001b[2mat Parser.parseMaybeAssignAllowIn [as parseMaybeAssignAllowInOrVoidPattern] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:3306:17)\u001b[22m\n      \u001b[2mat Parser.parseMaybeAssignAllowInOrVoidPattern [as parseExprListItem] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:2788:18)\u001b[22m\n      \u001b[2mat Parser.parseExprListItem [as parseCallExpressionArguments] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:1034:14)\u001b[22m\n      \u001b[2mat Parser.parseCallExpressionArguments [as parseCoverCallAndAsyncArrowHead] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:914:29)\u001b[22m\n      \u001b[2mat Parser.parseCoverCallAndAsyncArrowHead [as parseSubscript] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:796:19)\u001b[22m\n      \u001b[2mat Parser.parseSubscript [as parseSubscripts] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:755:19)\u001b[22m\n      \u001b[2mat Parser.parseSubscripts [as parseExprSubscripts] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:740:17)\u001b[22m\n      \u001b[2mat Parser.parseExprSubscripts [as parseUpdate] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:713:21)\u001b[22m\n      \u001b[2mat Parser.parseUpdate [as parseMaybeUnary] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:675:23)\u001b[22m\n      \u001b[2mat Parser.parseMaybeUnary [as parseMaybeUnaryOrPrivate] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:409:14)\u001b[22m\n      \u001b[2mat Parser.parseMaybeUnaryOrPrivate [as parseExprOps] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:421:23)\u001b[22m\n      \u001b[2mat Parser.parseExprOps [as parseMaybeConditional] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:376:23)\u001b[22m\n      \u001b[2mat Parser.parseMaybeConditional [as parseMaybeAssign] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:301:21)\u001b[22m\n      \u001b[2mat Parser.parseMaybeAssign [as parseExpressionBase] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:226:23)\u001b[22m\n      \u001b[2mat parseExpressionBase (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:217:39)\u001b[22m\n      \u001b[2mat Parser.callback [as allowInAnd] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:3187:16)\u001b[22m\n      \u001b[2mat Parser.allowInAnd [as parseExpression] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:217:17)\u001b[22m\n      \u001b[2mat Parser.parseExpression [as parseStatementContent] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:683:23)\u001b[22m\n      \u001b[2mat Parser.parseStatementContent [as parseStatementLike] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:477:17)\u001b[22m\n      \u001b[2mat Parser.parseStatementLike [as parseStatementListItem] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:426:17)\u001b[22m\n      \u001b[2mat Parser.parseStatementListItem [as parseBlockOrModuleBlockBody] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1439:16)\u001b[22m\n      \u001b[2mat Parser.parseBlockOrModuleBlockBody [as parseBlockBody] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1412:10)\u001b[22m\n      \u001b[2mat Parser.parseBlockBody [as parseBlock] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1380:10)\u001b[22m\n      \u001b[2mat Parser.parseBlock [as parseFunctionBody] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:2616:24)\u001b[22m\n      \u001b[2mat Parser.parseFunctionBody [as parseArrowExpression] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:2553:10)\u001b[22m\n      \u001b[2mat Parser.parseArrowExpression [as parseParenAndDistinguishExpression] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:1837:12)\u001b[22m\n      \u001b[2mat Parser.parseParenAndDistinguishExpression [as parseExprAtom] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:1162:21)\u001b[22m\n      \u001b[2mat Parser.parseExprAtom [as parseExprSubscripts] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:734:23)\u001b[22m\n      \u001b[2mat Parser.parseExprSubscripts [as parseUpdate] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:713:21)\u001b[22m\n      \u001b[2mat Parser.parseUpdate [as parseMaybeUnary] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:675:23)\u001b[22m\n      \u001b[2mat Parser.parseMaybeUnary [as parseMaybeUnaryOrPrivate] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:409:14)\u001b[22m\n      \u001b[2mat Parser.parseMaybeUnaryOrPrivate [as parseExprOps] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:421:23)\u001b[22m\n      \u001b[2mat Parser.parseExprOps [as parseMaybeConditional] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:376:23)\u001b[22m\n      \u001b[2mat Parser.parseMaybeConditional [as parseMaybeAssign] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:301:21)\u001b[22m\n      \u001b[2mat parseMaybeAssign (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:257:12)\u001b[22m\n      \u001b[2mat Parser.callback [as allowInAnd] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:3192:12)\u001b[22m\n      \u001b[2mat Parser.allowInAnd [as parseMaybeAssignAllowIn] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:256:17)\u001b[22m\n","testResults":[]},{"numFailingTests":0,"numPassingTests":0,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":0,"runtime":0,"slow":false,"start":0},"testFilePath":"/Users/tony/tony-space/Tony/python/automated-ptt-telegram-scheduler/src/lib/__tests__/firestore.test.ts","failureMessage":"  \u001b[1m● \u001b[22mTest suite failed to run\n\n    \u001b[1m\u001b[31mJest encountered an unexpected token\u001b[39m\u001b[22m\n\n    Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.\n\n    Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.\n\n    By default \"node_modules\" folder is ignored by transformers.\n\n    Here's what you can do:\n     • If you are trying to use ECMAScript Modules, see \u001b[4mhttps://jestjs.io/docs/ecmascript-modules\u001b[24m for how to enable it.\n     • If you are trying to use TypeScript, see \u001b[4mhttps://jestjs.io/docs/getting-started#using-typescript\u001b[24m\n     • To have some of your \"node_modules\" files transformed, you can specify a custom \u001b[1m\"transformIgnorePatterns\"\u001b[22m in your config.\n     • If you need a custom transformation specify a \u001b[1m\"transform\"\u001b[22m option in your config.\n     • If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the \u001b[1m\"moduleNameMapper\"\u001b[22m config option.\n\n    You'll find more details and examples of these config options in the docs:\n    \u001b[36mhttps://jestjs.io/docs/configuration\u001b[39m\n    For information about custom transformations, see:\n    \u001b[36mhttps://jestjs.io/docs/code-transformation\u001b[39m\n\n    \u001b[1m\u001b[31mDetails:\u001b[39m\u001b[22m\n\n    SyntaxError: /Users/tony/tony-space/Tony/python/automated-ptt-telegram-scheduler/src/lib/__tests__/firestore.test.ts: Missing initializer in const declaration. (72:22)\n\n    \u001b[0m \u001b[90m 70 |\u001b[39m   })\n     \u001b[90m 71 |\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 72 |\u001b[39m   \u001b[36mconst\u001b[39m mockConfigData\u001b[33m:\u001b[39m \u001b[33mCreateConfigurationRequest\u001b[39m \u001b[33m=\u001b[39m {\n     \u001b[90m    |\u001b[39m                       \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 73 |\u001b[39m     name\u001b[33m:\u001b[39m \u001b[32m'Test Config'\u001b[39m\u001b[33m,\u001b[39m\n     \u001b[90m 74 |\u001b[39m     pttBoard\u001b[33m:\u001b[39m \u001b[32m'Tech_Job'\u001b[39m\u001b[33m,\u001b[39m\n     \u001b[90m 75 |\u001b[39m     keywords\u001b[33m:\u001b[39m [\u001b[32m'python'\u001b[39m\u001b[33m,\u001b[39m \u001b[32m'backend'\u001b[39m]\u001b[33m,\u001b[39m\u001b[0m\n\n      \u001b[2mat constructor (\u001b[22mnode_modules/@babel/parser/src/parse-error.ts\u001b[2m:95:45)\u001b[22m\n      \u001b[2mat Parser.toParseError [as raise] (\u001b[22mnode_modules/@babel/parser/src/tokenizer/index.ts\u001b[2m:1503:19)\u001b[22m\n      \u001b[2mat Parser.raise [as parseVar] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1600:16)\u001b[22m\n      \u001b[2mat Parser.parseVar [as parseVarStatement] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1246:10)\u001b[22m\n      \u001b[2mat Parser.parseVarStatement [as parseStatementContent] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:607:21)\u001b[22m\n      \u001b[2mat Parser.parseStatementContent [as parseStatementLike] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:477:17)\u001b[22m\n      \u001b[2mat Parser.parseStatementLike [as parseStatementListItem] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:426:17)\u001b[22m\n      \u001b[2mat Parser.parseStatementListItem [as parseBlockOrModuleBlockBody] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1439:16)\u001b[22m\n      \u001b[2mat Parser.parseBlockOrModuleBlockBody [as parseBlockBody] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1412:10)\u001b[22m\n      \u001b[2mat Parser.parseBlockBody [as parseBlock] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1380:10)\u001b[22m\n      \u001b[2mat Parser.parseBlock [as parseFunctionBody] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:2616:24)\u001b[22m\n      \u001b[2mat Parser.parseFunctionBody [as parseArrowExpression] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:2553:10)\u001b[22m\n      \u001b[2mat Parser.parseArrowExpression [as parseParenAndDistinguishExpression] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:1837:12)\u001b[22m\n      \u001b[2mat Parser.parseParenAndDistinguishExpression [as parseExprAtom] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:1162:21)\u001b[22m\n      \u001b[2mat Parser.parseExprAtom [as parseExprSubscripts] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:734:23)\u001b[22m\n      \u001b[2mat Parser.parseExprSubscripts [as parseUpdate] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:713:21)\u001b[22m\n      \u001b[2mat Parser.parseUpdate [as parseMaybeUnary] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:675:23)\u001b[22m\n      \u001b[2mat Parser.parseMaybeUnary [as parseMaybeUnaryOrPrivate] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:409:14)\u001b[22m\n      \u001b[2mat Parser.parseMaybeUnaryOrPrivate [as parseExprOps] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:421:23)\u001b[22m\n      \u001b[2mat Parser.parseExprOps [as parseMaybeConditional] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:376:23)\u001b[22m\n      \u001b[2mat Parser.parseMaybeConditional [as parseMaybeAssign] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:301:21)\u001b[22m\n      \u001b[2mat parseMaybeAssign (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:257:12)\u001b[22m\n      \u001b[2mat Parser.callback [as allowInAnd] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:3192:12)\u001b[22m\n      \u001b[2mat Parser.allowInAnd [as parseMaybeAssignAllowIn] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:256:17)\u001b[22m\n      \u001b[2mat Parser.parseMaybeAssignAllowIn [as parseMaybeAssignAllowInOrVoidPattern] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:3306:17)\u001b[22m\n      \u001b[2mat Parser.parseMaybeAssignAllowInOrVoidPattern [as parseExprListItem] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:2788:18)\u001b[22m\n      \u001b[2mat Parser.parseExprListItem [as parseCallExpressionArguments] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:1034:14)\u001b[22m\n      \u001b[2mat Parser.parseCallExpressionArguments [as parseCoverCallAndAsyncArrowHead] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:914:29)\u001b[22m\n      \u001b[2mat Parser.parseCoverCallAndAsyncArrowHead [as parseSubscript] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:796:19)\u001b[22m\n      \u001b[2mat Parser.parseSubscript [as parseSubscripts] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:755:19)\u001b[22m\n      \u001b[2mat Parser.parseSubscripts [as parseExprSubscripts] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:740:17)\u001b[22m\n      \u001b[2mat Parser.parseExprSubscripts [as parseUpdate] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:713:21)\u001b[22m\n      \u001b[2mat Parser.parseUpdate [as parseMaybeUnary] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:675:23)\u001b[22m\n      \u001b[2mat Parser.parseMaybeUnary [as parseMaybeUnaryOrPrivate] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:409:14)\u001b[22m\n      \u001b[2mat Parser.parseMaybeUnaryOrPrivate [as parseExprOps] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:421:23)\u001b[22m\n      \u001b[2mat Parser.parseExprOps [as parseMaybeConditional] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:376:23)\u001b[22m\n      \u001b[2mat Parser.parseMaybeConditional [as parseMaybeAssign] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:301:21)\u001b[22m\n      \u001b[2mat Parser.parseMaybeAssign [as parseExpressionBase] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:226:23)\u001b[22m\n      \u001b[2mat parseExpressionBase (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:217:39)\u001b[22m\n      \u001b[2mat Parser.callback [as allowInAnd] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:3187:16)\u001b[22m\n      \u001b[2mat Parser.allowInAnd [as parseExpression] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:217:17)\u001b[22m\n      \u001b[2mat Parser.parseExpression [as parseStatementContent] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:683:23)\u001b[22m\n      \u001b[2mat Parser.parseStatementContent [as parseStatementLike] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:477:17)\u001b[22m\n      \u001b[2mat Parser.parseStatementLike [as parseModuleItem] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:414:17)\u001b[22m\n      \u001b[2mat Parser.parseModuleItem [as parseBlockOrModuleBlockBody] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1438:16)\u001b[22m\n      \u001b[2mat Parser.parseBlockOrModuleBlockBody [as parseBlockBody] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1412:10)\u001b[22m\n      \u001b[2mat Parser.parseBlockBody [as parseProgram] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:229:10)\u001b[22m\n      \u001b[2mat Parser.parseProgram [as parseTopLevel] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:203:25)\u001b[22m\n      \u001b[2mat Parser.parseTopLevel [as parse] (\u001b[22mnode_modules/@babel/parser/src/parser/index.ts\u001b[2m:93:10)\u001b[22m\n      \u001b[2mat parse (\u001b[22mnode_modules/@babel/parser/src/index.ts\u001b[2m:92:38)\u001b[22m\n      \u001b[2mat parser (\u001b[22mnode_modules/@babel/core/src/parser/index.ts\u001b[2m:28:19)\u001b[22m\n          at parser.next (<anonymous>)\n      \u001b[2mat normalizeFile (\u001b[22mnode_modules/@babel/core/src/transformation/normalize-file.ts\u001b[2m:49:24)\u001b[22m\n          at normalizeFile.next (<anonymous>)\n      \u001b[2mat run (\u001b[22mnode_modules/@babel/core/src/transformation/index.ts\u001b[2m:40:36)\u001b[22m\n          at run.next (<anonymous>)\n      \u001b[2mat transform (\u001b[22mnode_modules/@babel/core/src/transform.ts\u001b[2m:29:20)\u001b[22m\n          at transform.next (<anonymous>)\n      \u001b[2mat evaluateSync (\u001b[22mnode_modules/gensync/index.js\u001b[2m:251:28)\u001b[22m\n      \u001b[2mat sync (\u001b[22mnode_modules/gensync/index.js\u001b[2m:89:14)\u001b[22m\n      \u001b[2mat fn (\u001b[22mnode_modules/@babel/core/src/errors/rewrite-stack-trace.ts\u001b[2m:99:14)\u001b[22m\n      \u001b[2mat transformSync (\u001b[22mnode_modules/@babel/core/src/transform.ts\u001b[2m:66:52)\u001b[22m\n      \u001b[2mat ScriptTransformer.transformSource (\u001b[22mnode_modules/@jest/transform/build/ScriptTransformer.js\u001b[2m:545:31)\u001b[22m\n      \u001b[2mat ScriptTransformer._transformAndBuildScript (\u001b[22mnode_modules/@jest/transform/build/ScriptTransformer.js\u001b[2m:674:40)\u001b[22m\n      \u001b[2mat ScriptTransformer.transform (\u001b[22mnode_modules/@jest/transform/build/ScriptTransformer.js\u001b[2m:726:19)\u001b[22m\n","testResults":[]},{"numFailingTests":0,"numPassingTests":0,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":0,"runtime":0,"slow":false,"start":0},"testFilePath":"/Users/tony/tony-space/Tony/python/automated-ptt-telegram-scheduler/src/components/__tests__/ErrorBoundary.test.tsx","failureMessage":"  \u001b[1m● \u001b[22mTest suite failed to run\n\n    SyntaxError: /Users/tony/tony-space/Tony/python/automated-ptt-telegram-scheduler/src/components/__tests__/ErrorBoundary.test.tsx: Unexpected token, expected \",\" (19:35)\n\n    \u001b[0m \u001b[90m 17 |\u001b[39m\n     \u001b[90m 18 |\u001b[39m \u001b[90m// 測試組件：會拋出錯誤的組件\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 19 |\u001b[39m \u001b[36mconst\u001b[39m \u001b[33mThrowError\u001b[39m \u001b[33m=\u001b[39m ({ shouldThrow }\u001b[33m:\u001b[39m { shouldThrow\u001b[33m:\u001b[39m boolean }) \u001b[33m=>\u001b[39m {\n     \u001b[90m    |\u001b[39m                                    \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 20 |\u001b[39m   \u001b[36mif\u001b[39m (shouldThrow) {\n     \u001b[90m 21 |\u001b[39m     \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mError\u001b[39m(\u001b[32m'Test error'\u001b[39m)\n     \u001b[90m 22 |\u001b[39m   }\u001b[0m\n\n      \u001b[2mat constructor (\u001b[22mnode_modules/@babel/parser/src/parse-error.ts\u001b[2m:95:45)\u001b[22m\n      \u001b[2mat Parser.toParseError [as raise] (\u001b[22mnode_modules/@babel/parser/src/tokenizer/index.ts\u001b[2m:1503:19)\u001b[22m\n      \u001b[2mat Parser.raise [as unexpected] (\u001b[22mnode_modules/@babel/parser/src/tokenizer/index.ts\u001b[2m:1543:16)\u001b[22m\n      \u001b[2mat Parser.unexpected [as expect] (\u001b[22mnode_modules/@babel/parser/src/parser/util.ts\u001b[2m:157:12)\u001b[22m\n      \u001b[2mat Parser.expect [as parseParenAndDistinguishExpression] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:1789:14)\u001b[22m\n      \u001b[2mat Parser.parseParenAndDistinguishExpression [as parseExprAtom] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:1162:21)\u001b[22m\n      \u001b[2mat Parser.parseExprAtom [as parseExprSubscripts] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:734:23)\u001b[22m\n      \u001b[2mat Parser.parseExprSubscripts [as parseUpdate] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:713:21)\u001b[22m\n      \u001b[2mat Parser.parseUpdate [as parseMaybeUnary] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:675:23)\u001b[22m\n      \u001b[2mat Parser.parseMaybeUnary [as parseMaybeUnaryOrPrivate] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:409:14)\u001b[22m\n      \u001b[2mat Parser.parseMaybeUnaryOrPrivate [as parseExprOps] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:421:23)\u001b[22m\n      \u001b[2mat Parser.parseExprOps [as parseMaybeConditional] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:376:23)\u001b[22m\n      \u001b[2mat Parser.parseMaybeConditional [as parseMaybeAssign] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:301:21)\u001b[22m\n      \u001b[2mat parseMaybeAssign (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:257:12)\u001b[22m\n      \u001b[2mat Parser.callback [as allowInAnd] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:3187:16)\u001b[22m\n      \u001b[2mat Parser.allowInAnd [as parseMaybeAssignAllowIn] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:256:17)\u001b[22m\n      \u001b[2mat Parser.parseMaybeAssignAllowIn [as parseVar] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1582:18)\u001b[22m\n      \u001b[2mat Parser.parseVar [as parseVarStatement] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1246:10)\u001b[22m\n      \u001b[2mat Parser.parseVarStatement [as parseStatementContent] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:607:21)\u001b[22m\n      \u001b[2mat Parser.parseStatementContent [as parseStatementLike] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:477:17)\u001b[22m\n      \u001b[2mat Parser.parseStatementLike [as parseModuleItem] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:414:17)\u001b[22m\n      \u001b[2mat Parser.parseModuleItem [as parseBlockOrModuleBlockBody] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1438:16)\u001b[22m\n      \u001b[2mat Parser.parseBlockOrModuleBlockBody [as parseBlockBody] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1412:10)\u001b[22m\n      \u001b[2mat Parser.parseBlockBody [as parseProgram] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:229:10)\u001b[22m\n      \u001b[2mat Parser.parseProgram [as parseTopLevel] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:203:25)\u001b[22m\n      \u001b[2mat Parser.parseTopLevel [as parse] (\u001b[22mnode_modules/@babel/parser/src/parser/index.ts\u001b[2m:93:10)\u001b[22m\n      \u001b[2mat parse (\u001b[22mnode_modules/@babel/parser/src/index.ts\u001b[2m:92:38)\u001b[22m\n      \u001b[2mat parser (\u001b[22mnode_modules/@babel/core/src/parser/index.ts\u001b[2m:28:19)\u001b[22m\n          at parser.next (<anonymous>)\n      \u001b[2mat normalizeFile (\u001b[22mnode_modules/@babel/core/src/transformation/normalize-file.ts\u001b[2m:49:24)\u001b[22m\n          at normalizeFile.next (<anonymous>)\n      \u001b[2mat run (\u001b[22mnode_modules/@babel/core/src/transformation/index.ts\u001b[2m:40:36)\u001b[22m\n          at run.next (<anonymous>)\n      \u001b[2mat transform (\u001b[22mnode_modules/@babel/core/src/transform.ts\u001b[2m:29:20)\u001b[22m\n          at transform.next (<anonymous>)\n      \u001b[2mat evaluateSync (\u001b[22mnode_modules/gensync/index.js\u001b[2m:251:28)\u001b[22m\n      \u001b[2mat sync (\u001b[22mnode_modules/gensync/index.js\u001b[2m:89:14)\u001b[22m\n      \u001b[2mat fn (\u001b[22mnode_modules/@babel/core/src/errors/rewrite-stack-trace.ts\u001b[2m:99:14)\u001b[22m\n      \u001b[2mat transformSync (\u001b[22mnode_modules/@babel/core/src/transform.ts\u001b[2m:66:52)\u001b[22m\n      \u001b[2mat ScriptTransformer.transformSource (\u001b[22mnode_modules/@jest/transform/build/ScriptTransformer.js\u001b[2m:545:31)\u001b[22m\n      \u001b[2mat ScriptTransformer._transformAndBuildScript (\u001b[22mnode_modules/@jest/transform/build/ScriptTransformer.js\u001b[2m:674:40)\u001b[22m\n      \u001b[2mat ScriptTransformer.transform (\u001b[22mnode_modules/@jest/transform/build/ScriptTransformer.js\u001b[2m:726:19)\u001b[22m\n","testResults":[]},{"numFailingTests":0,"numPassingTests":0,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":0,"runtime":0,"slow":false,"start":0},"testFilePath":"/Users/tony/tony-space/Tony/python/automated-ptt-telegram-scheduler/src/app/api/configurations/__tests__/route.test.ts","failureMessage":"  \u001b[1m● \u001b[22mTest suite failed to run\n\n    \u001b[1m\u001b[31mJest encountered an unexpected token\u001b[39m\u001b[22m\n\n    Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.\n\n    Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.\n\n    By default \"node_modules\" folder is ignored by transformers.\n\n    Here's what you can do:\n     • If you are trying to use ECMAScript Modules, see \u001b[4mhttps://jestjs.io/docs/ecmascript-modules\u001b[24m for how to enable it.\n     • If you are trying to use TypeScript, see \u001b[4mhttps://jestjs.io/docs/getting-started#using-typescript\u001b[24m\n     • To have some of your \"node_modules\" files transformed, you can specify a custom \u001b[1m\"transformIgnorePatterns\"\u001b[22m in your config.\n     • If you need a custom transformation specify a \u001b[1m\"transform\"\u001b[22m option in your config.\n     • If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the \u001b[1m\"moduleNameMapper\"\u001b[22m config option.\n\n    You'll find more details and examples of these config options in the docs:\n    \u001b[36mhttps://jestjs.io/docs/configuration\u001b[39m\n    For information about custom transformations, see:\n    \u001b[36mhttps://jestjs.io/docs/code-transformation\u001b[39m\n\n    \u001b[1m\u001b[31mDetails:\u001b[39m\u001b[22m\n\n    SyntaxError: /Users/tony/tony-space/Tony/python/automated-ptt-telegram-scheduler/src/app/api/configurations/__tests__/route.test.ts: Missing semicolon. (19:53)\n\n    \u001b[0m \u001b[90m 17 |\u001b[39m \u001b[36mimport\u001b[39m { validateCreateConfiguration } \u001b[36mfrom\u001b[39m \u001b[32m'@/lib/validation'\u001b[39m\n     \u001b[90m 18 |\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 19 |\u001b[39m \u001b[36mconst\u001b[39m mockGetAllConfigurations \u001b[33m=\u001b[39m getAllConfigurations \u001b[36mas\u001b[39m jest\u001b[33m.\u001b[39m\u001b[33mMockedFunction\u001b[39m\u001b[33m<\u001b[39m\u001b[36mtypeof\u001b[39m getAllConfigurations\u001b[33m>\u001b[39m\n     \u001b[90m    |\u001b[39m                                                      \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 20 |\u001b[39m \u001b[36mconst\u001b[39m mockCreateConfiguration \u001b[33m=\u001b[39m createConfiguration \u001b[36mas\u001b[39m jest\u001b[33m.\u001b[39m\u001b[33mMockedFunction\u001b[39m\u001b[33m<\u001b[39m\u001b[36mtypeof\u001b[39m createConfiguration\u001b[33m>\u001b[39m\n     \u001b[90m 21 |\u001b[39m \u001b[36mconst\u001b[39m mockValidateCreateConfiguration \u001b[33m=\u001b[39m validateCreateConfiguration \u001b[36mas\u001b[39m jest\u001b[33m.\u001b[39m\u001b[33mMockedFunction\u001b[39m\u001b[33m<\u001b[39m\u001b[36mtypeof\u001b[39m validateCreateConfiguration\u001b[33m>\u001b[39m\n     \u001b[90m 22 |\u001b[39m\u001b[0m\n\n      \u001b[2mat constructor (\u001b[22mnode_modules/@babel/parser/src/parse-error.ts\u001b[2m:95:45)\u001b[22m\n      \u001b[2mat Parser.toParseError [as raise] (\u001b[22mnode_modules/@babel/parser/src/tokenizer/index.ts\u001b[2m:1503:19)\u001b[22m\n      \u001b[2mat Parser.raise [as semicolon] (\u001b[22mnode_modules/@babel/parser/src/parser/util.ts\u001b[2m:149:10)\u001b[22m\n      \u001b[2mat Parser.semicolon [as parseVarStatement] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1247:10)\u001b[22m\n      \u001b[2mat Parser.parseVarStatement [as parseStatementContent] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:607:21)\u001b[22m\n      \u001b[2mat Parser.parseStatementContent [as parseStatementLike] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:477:17)\u001b[22m\n      \u001b[2mat Parser.parseStatementLike [as parseModuleItem] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:414:17)\u001b[22m\n      \u001b[2mat Parser.parseModuleItem [as parseBlockOrModuleBlockBody] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1438:16)\u001b[22m\n      \u001b[2mat Parser.parseBlockOrModuleBlockBody [as parseBlockBody] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1412:10)\u001b[22m\n      \u001b[2mat Parser.parseBlockBody [as parseProgram] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:229:10)\u001b[22m\n      \u001b[2mat Parser.parseProgram [as parseTopLevel] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:203:25)\u001b[22m\n      \u001b[2mat Parser.parseTopLevel [as parse] (\u001b[22mnode_modules/@babel/parser/src/parser/index.ts\u001b[2m:93:10)\u001b[22m\n      \u001b[2mat parse (\u001b[22mnode_modules/@babel/parser/src/index.ts\u001b[2m:92:38)\u001b[22m\n      \u001b[2mat parser (\u001b[22mnode_modules/@babel/core/src/parser/index.ts\u001b[2m:28:19)\u001b[22m\n          at parser.next (<anonymous>)\n      \u001b[2mat normalizeFile (\u001b[22mnode_modules/@babel/core/src/transformation/normalize-file.ts\u001b[2m:49:24)\u001b[22m\n          at normalizeFile.next (<anonymous>)\n      \u001b[2mat run (\u001b[22mnode_modules/@babel/core/src/transformation/index.ts\u001b[2m:40:36)\u001b[22m\n          at run.next (<anonymous>)\n      \u001b[2mat transform (\u001b[22mnode_modules/@babel/core/src/transform.ts\u001b[2m:29:20)\u001b[22m\n          at transform.next (<anonymous>)\n      \u001b[2mat evaluateSync (\u001b[22mnode_modules/gensync/index.js\u001b[2m:251:28)\u001b[22m\n      \u001b[2mat sync (\u001b[22mnode_modules/gensync/index.js\u001b[2m:89:14)\u001b[22m\n      \u001b[2mat fn (\u001b[22mnode_modules/@babel/core/src/errors/rewrite-stack-trace.ts\u001b[2m:99:14)\u001b[22m\n      \u001b[2mat transformSync (\u001b[22mnode_modules/@babel/core/src/transform.ts\u001b[2m:66:52)\u001b[22m\n      \u001b[2mat ScriptTransformer.transformSource (\u001b[22mnode_modules/@jest/transform/build/ScriptTransformer.js\u001b[2m:545:31)\u001b[22m\n      \u001b[2mat ScriptTransformer._transformAndBuildScript (\u001b[22mnode_modules/@jest/transform/build/ScriptTransformer.js\u001b[2m:674:40)\u001b[22m\n      \u001b[2mat ScriptTransformer.transform (\u001b[22mnode_modules/@jest/transform/build/ScriptTransformer.js\u001b[2m:726:19)\u001b[22m\n","testResults":[]},{"numFailingTests":0,"numPassingTests":0,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":0,"runtime":0,"slow":false,"start":0},"testFilePath":"/Users/tony/tony-space/Tony/python/automated-ptt-telegram-scheduler/src/components/__tests__/ConfigurationList.test.tsx","failureMessage":"  \u001b[1m● \u001b[22mTest suite failed to run\n\n    \u001b[1m\u001b[31mJest encountered an unexpected token\u001b[39m\u001b[22m\n\n    Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.\n\n    Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.\n\n    By default \"node_modules\" folder is ignored by transformers.\n\n    Here's what you can do:\n     • If you are trying to use ECMAScript Modules, see \u001b[4mhttps://jestjs.io/docs/ecmascript-modules\u001b[24m for how to enable it.\n     • If you are trying to use TypeScript, see \u001b[4mhttps://jestjs.io/docs/getting-started#using-typescript\u001b[24m\n     • To have some of your \"node_modules\" files transformed, you can specify a custom \u001b[1m\"transformIgnorePatterns\"\u001b[22m in your config.\n     • If you need a custom transformation specify a \u001b[1m\"transform\"\u001b[22m option in your config.\n     • If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the \u001b[1m\"moduleNameMapper\"\u001b[22m config option.\n\n    You'll find more details and examples of these config options in the docs:\n    \u001b[36mhttps://jestjs.io/docs/configuration\u001b[39m\n    For information about custom transformations, see:\n    \u001b[36mhttps://jestjs.io/docs/code-transformation\u001b[39m\n\n    \u001b[1m\u001b[31mDetails:\u001b[39m\u001b[22m\n\n    SyntaxError: /Users/tony/tony-space/Tony/python/automated-ptt-telegram-scheduler/src/components/__tests__/ConfigurationList.test.tsx: Missing initializer in const declaration. (17:26)\n\n    \u001b[0m \u001b[90m 15 |\u001b[39m   \u001b[36mconst\u001b[39m mockOnToggleActive \u001b[33m=\u001b[39m jest\u001b[33m.\u001b[39mfn()\n     \u001b[90m 16 |\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 17 |\u001b[39m   \u001b[36mconst\u001b[39m mockConfigurations\u001b[33m:\u001b[39m \u001b[33mScrapingConfiguration\u001b[39m[] \u001b[33m=\u001b[39m [\n     \u001b[90m    |\u001b[39m                           \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 18 |\u001b[39m     {\n     \u001b[90m 19 |\u001b[39m       id\u001b[33m:\u001b[39m \u001b[32m'1'\u001b[39m\u001b[33m,\u001b[39m\n     \u001b[90m 20 |\u001b[39m       name\u001b[33m:\u001b[39m \u001b[32m'Tech Jobs'\u001b[39m\u001b[33m,\u001b[39m\u001b[0m\n\n      \u001b[2mat constructor (\u001b[22mnode_modules/@babel/parser/src/parse-error.ts\u001b[2m:95:45)\u001b[22m\n      \u001b[2mat Parser.toParseError [as raise] (\u001b[22mnode_modules/@babel/parser/src/tokenizer/index.ts\u001b[2m:1503:19)\u001b[22m\n      \u001b[2mat Parser.raise [as parseVar] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1600:16)\u001b[22m\n      \u001b[2mat Parser.parseVar [as parseVarStatement] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1246:10)\u001b[22m\n      \u001b[2mat Parser.parseVarStatement [as parseStatementContent] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:607:21)\u001b[22m\n      \u001b[2mat Parser.parseStatementContent [as parseStatementLike] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:477:17)\u001b[22m\n      \u001b[2mat Parser.parseStatementLike [as parseStatementListItem] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:426:17)\u001b[22m\n      \u001b[2mat Parser.parseStatementListItem [as parseBlockOrModuleBlockBody] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1439:16)\u001b[22m\n      \u001b[2mat Parser.parseBlockOrModuleBlockBody [as parseBlockBody] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1412:10)\u001b[22m\n      \u001b[2mat Parser.parseBlockBody [as parseBlock] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1380:10)\u001b[22m\n      \u001b[2mat Parser.parseBlock [as parseFunctionBody] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:2616:24)\u001b[22m\n      \u001b[2mat Parser.parseFunctionBody [as parseArrowExpression] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:2553:10)\u001b[22m\n      \u001b[2mat Parser.parseArrowExpression [as parseParenAndDistinguishExpression] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:1837:12)\u001b[22m\n      \u001b[2mat Parser.parseParenAndDistinguishExpression [as parseExprAtom] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:1162:21)\u001b[22m\n      \u001b[2mat Parser.parseExprAtom [as parseExprSubscripts] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:734:23)\u001b[22m\n      \u001b[2mat Parser.parseExprSubscripts [as parseUpdate] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:713:21)\u001b[22m\n      \u001b[2mat Parser.parseUpdate [as parseMaybeUnary] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:675:23)\u001b[22m\n      \u001b[2mat Parser.parseMaybeUnary [as parseMaybeUnaryOrPrivate] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:409:14)\u001b[22m\n      \u001b[2mat Parser.parseMaybeUnaryOrPrivate [as parseExprOps] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:421:23)\u001b[22m\n      \u001b[2mat Parser.parseExprOps [as parseMaybeConditional] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:376:23)\u001b[22m\n      \u001b[2mat Parser.parseMaybeConditional [as parseMaybeAssign] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:301:21)\u001b[22m\n      \u001b[2mat parseMaybeAssign (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:257:12)\u001b[22m\n      \u001b[2mat Parser.callback [as allowInAnd] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:3192:12)\u001b[22m\n      \u001b[2mat Parser.allowInAnd [as parseMaybeAssignAllowIn] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:256:17)\u001b[22m\n      \u001b[2mat Parser.parseMaybeAssignAllowIn [as parseMaybeAssignAllowInOrVoidPattern] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:3306:17)\u001b[22m\n      \u001b[2mat Parser.parseMaybeAssignAllowInOrVoidPattern [as parseExprListItem] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:2788:18)\u001b[22m\n      \u001b[2mat Parser.parseExprListItem [as parseCallExpressionArguments] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:1034:14)\u001b[22m\n      \u001b[2mat Parser.parseCallExpressionArguments [as parseCoverCallAndAsyncArrowHead] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:914:29)\u001b[22m\n      \u001b[2mat Parser.parseCoverCallAndAsyncArrowHead [as parseSubscript] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:796:19)\u001b[22m\n      \u001b[2mat Parser.parseSubscript [as parseSubscripts] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:755:19)\u001b[22m\n      \u001b[2mat Parser.parseSubscripts [as parseExprSubscripts] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:740:17)\u001b[22m\n      \u001b[2mat Parser.parseExprSubscripts [as parseUpdate] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:713:21)\u001b[22m\n      \u001b[2mat Parser.parseUpdate [as parseMaybeUnary] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:675:23)\u001b[22m\n      \u001b[2mat Parser.parseMaybeUnary [as parseMaybeUnaryOrPrivate] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:409:14)\u001b[22m\n      \u001b[2mat Parser.parseMaybeUnaryOrPrivate [as parseExprOps] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:421:23)\u001b[22m\n      \u001b[2mat Parser.parseExprOps [as parseMaybeConditional] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:376:23)\u001b[22m\n      \u001b[2mat Parser.parseMaybeConditional [as parseMaybeAssign] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:301:21)\u001b[22m\n      \u001b[2mat Parser.parseMaybeAssign [as parseExpressionBase] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:226:23)\u001b[22m\n      \u001b[2mat parseExpressionBase (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:217:39)\u001b[22m\n      \u001b[2mat Parser.callback [as allowInAnd] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:3187:16)\u001b[22m\n      \u001b[2mat Parser.allowInAnd [as parseExpression] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:217:17)\u001b[22m\n      \u001b[2mat Parser.parseExpression [as parseStatementContent] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:683:23)\u001b[22m\n      \u001b[2mat Parser.parseStatementContent [as parseStatementLike] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:477:17)\u001b[22m\n      \u001b[2mat Parser.parseStatementLike [as parseModuleItem] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:414:17)\u001b[22m\n      \u001b[2mat Parser.parseModuleItem [as parseBlockOrModuleBlockBody] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1438:16)\u001b[22m\n      \u001b[2mat Parser.parseBlockOrModuleBlockBody [as parseBlockBody] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1412:10)\u001b[22m\n      \u001b[2mat Parser.parseBlockBody [as parseProgram] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:229:10)\u001b[22m\n      \u001b[2mat Parser.parseProgram [as parseTopLevel] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:203:25)\u001b[22m\n      \u001b[2mat Parser.parseTopLevel [as parse] (\u001b[22mnode_modules/@babel/parser/src/parser/index.ts\u001b[2m:93:10)\u001b[22m\n      \u001b[2mat parse (\u001b[22mnode_modules/@babel/parser/src/index.ts\u001b[2m:92:38)\u001b[22m\n      \u001b[2mat parser (\u001b[22mnode_modules/@babel/core/src/parser/index.ts\u001b[2m:28:19)\u001b[22m\n          at parser.next (<anonymous>)\n      \u001b[2mat normalizeFile (\u001b[22mnode_modules/@babel/core/src/transformation/normalize-file.ts\u001b[2m:49:24)\u001b[22m\n          at normalizeFile.next (<anonymous>)\n      \u001b[2mat run (\u001b[22mnode_modules/@babel/core/src/transformation/index.ts\u001b[2m:40:36)\u001b[22m\n          at run.next (<anonymous>)\n      \u001b[2mat transform (\u001b[22mnode_modules/@babel/core/src/transform.ts\u001b[2m:29:20)\u001b[22m\n          at transform.next (<anonymous>)\n      \u001b[2mat evaluateSync (\u001b[22mnode_modules/gensync/index.js\u001b[2m:251:28)\u001b[22m\n      \u001b[2mat sync (\u001b[22mnode_modules/gensync/index.js\u001b[2m:89:14)\u001b[22m\n      \u001b[2mat fn (\u001b[22mnode_modules/@babel/core/src/errors/rewrite-stack-trace.ts\u001b[2m:99:14)\u001b[22m\n      \u001b[2mat transformSync (\u001b[22mnode_modules/@babel/core/src/transform.ts\u001b[2m:66:52)\u001b[22m\n      \u001b[2mat ScriptTransformer.transformSource (\u001b[22mnode_modules/@jest/transform/build/ScriptTransformer.js\u001b[2m:545:31)\u001b[22m\n      \u001b[2mat ScriptTransformer._transformAndBuildScript (\u001b[22mnode_modules/@jest/transform/build/ScriptTransformer.js\u001b[2m:674:40)\u001b[22m\n      \u001b[2mat ScriptTransformer.transform (\u001b[22mnode_modules/@jest/transform/build/ScriptTransformer.js\u001b[2m:726:19)\u001b[22m\n","testResults":[]},{"numFailingTests":0,"numPassingTests":0,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":0,"runtime":0,"slow":false,"start":0},"testFilePath":"/Users/tony/tony-space/Tony/python/automated-ptt-telegram-scheduler/src/components/__tests__/Dashboard.test.tsx","failureMessage":"  \u001b[1m● \u001b[22mTest suite failed to run\n\n    \u001b[1m\u001b[31mJest encountered an unexpected token\u001b[39m\u001b[22m\n\n    Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.\n\n    Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.\n\n    By default \"node_modules\" folder is ignored by transformers.\n\n    Here's what you can do:\n     • If you are trying to use ECMAScript Modules, see \u001b[4mhttps://jestjs.io/docs/ecmascript-modules\u001b[24m for how to enable it.\n     • If you are trying to use TypeScript, see \u001b[4mhttps://jestjs.io/docs/getting-started#using-typescript\u001b[24m\n     • To have some of your \"node_modules\" files transformed, you can specify a custom \u001b[1m\"transformIgnorePatterns\"\u001b[22m in your config.\n     • If you need a custom transformation specify a \u001b[1m\"transform\"\u001b[22m option in your config.\n     • If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the \u001b[1m\"moduleNameMapper\"\u001b[22m config option.\n\n    You'll find more details and examples of these config options in the docs:\n    \u001b[36mhttps://jestjs.io/docs/configuration\u001b[39m\n    For information about custom transformations, see:\n    \u001b[36mhttps://jestjs.io/docs/code-transformation\u001b[39m\n\n    \u001b[1m\u001b[31mDetails:\u001b[39m\u001b[22m\n\n    SyntaxError: /Users/tony/tony-space/Tony/python/automated-ptt-telegram-scheduler/src/components/__tests__/Dashboard.test.tsx: Missing initializer in const declaration. (18:26)\n\n    \u001b[0m \u001b[90m 16 |\u001b[39m   }\n     \u001b[90m 17 |\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 18 |\u001b[39m   \u001b[36mconst\u001b[39m mockConfigurations\u001b[33m:\u001b[39m \u001b[33mScrapingConfiguration\u001b[39m[] \u001b[33m=\u001b[39m [\n     \u001b[90m    |\u001b[39m                           \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 19 |\u001b[39m     {\n     \u001b[90m 20 |\u001b[39m       id\u001b[33m:\u001b[39m \u001b[32m'1'\u001b[39m\u001b[33m,\u001b[39m\n     \u001b[90m 21 |\u001b[39m       name\u001b[33m:\u001b[39m \u001b[32m'Tech Jobs'\u001b[39m\u001b[33m,\u001b[39m\u001b[0m\n\n      \u001b[2mat constructor (\u001b[22mnode_modules/@babel/parser/src/parse-error.ts\u001b[2m:95:45)\u001b[22m\n      \u001b[2mat Parser.toParseError [as raise] (\u001b[22mnode_modules/@babel/parser/src/tokenizer/index.ts\u001b[2m:1503:19)\u001b[22m\n      \u001b[2mat Parser.raise [as parseVar] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1600:16)\u001b[22m\n      \u001b[2mat Parser.parseVar [as parseVarStatement] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1246:10)\u001b[22m\n      \u001b[2mat Parser.parseVarStatement [as parseStatementContent] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:607:21)\u001b[22m\n      \u001b[2mat Parser.parseStatementContent [as parseStatementLike] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:477:17)\u001b[22m\n      \u001b[2mat Parser.parseStatementLike [as parseStatementListItem] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:426:17)\u001b[22m\n      \u001b[2mat Parser.parseStatementListItem [as parseBlockOrModuleBlockBody] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1439:16)\u001b[22m\n      \u001b[2mat Parser.parseBlockOrModuleBlockBody [as parseBlockBody] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1412:10)\u001b[22m\n      \u001b[2mat Parser.parseBlockBody [as parseBlock] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1380:10)\u001b[22m\n      \u001b[2mat Parser.parseBlock [as parseFunctionBody] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:2616:24)\u001b[22m\n      \u001b[2mat Parser.parseFunctionBody [as parseArrowExpression] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:2553:10)\u001b[22m\n      \u001b[2mat Parser.parseArrowExpression [as parseParenAndDistinguishExpression] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:1837:12)\u001b[22m\n      \u001b[2mat Parser.parseParenAndDistinguishExpression [as parseExprAtom] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:1162:21)\u001b[22m\n      \u001b[2mat Parser.parseExprAtom [as parseExprSubscripts] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:734:23)\u001b[22m\n      \u001b[2mat Parser.parseExprSubscripts [as parseUpdate] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:713:21)\u001b[22m\n      \u001b[2mat Parser.parseUpdate [as parseMaybeUnary] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:675:23)\u001b[22m\n      \u001b[2mat Parser.parseMaybeUnary [as parseMaybeUnaryOrPrivate] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:409:14)\u001b[22m\n      \u001b[2mat Parser.parseMaybeUnaryOrPrivate [as parseExprOps] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:421:23)\u001b[22m\n      \u001b[2mat Parser.parseExprOps [as parseMaybeConditional] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:376:23)\u001b[22m\n      \u001b[2mat Parser.parseMaybeConditional [as parseMaybeAssign] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:301:21)\u001b[22m\n      \u001b[2mat parseMaybeAssign (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:257:12)\u001b[22m\n      \u001b[2mat Parser.callback [as allowInAnd] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:3192:12)\u001b[22m\n      \u001b[2mat Parser.allowInAnd [as parseMaybeAssignAllowIn] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:256:17)\u001b[22m\n      \u001b[2mat Parser.parseMaybeAssignAllowIn [as parseMaybeAssignAllowInOrVoidPattern] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:3306:17)\u001b[22m\n      \u001b[2mat Parser.parseMaybeAssignAllowInOrVoidPattern [as parseExprListItem] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:2788:18)\u001b[22m\n      \u001b[2mat Parser.parseExprListItem [as parseCallExpressionArguments] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:1034:14)\u001b[22m\n      \u001b[2mat Parser.parseCallExpressionArguments [as parseCoverCallAndAsyncArrowHead] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:914:29)\u001b[22m\n      \u001b[2mat Parser.parseCoverCallAndAsyncArrowHead [as parseSubscript] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:796:19)\u001b[22m\n      \u001b[2mat Parser.parseSubscript [as parseSubscripts] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:755:19)\u001b[22m\n      \u001b[2mat Parser.parseSubscripts [as parseExprSubscripts] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:740:17)\u001b[22m\n      \u001b[2mat Parser.parseExprSubscripts [as parseUpdate] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:713:21)\u001b[22m\n      \u001b[2mat Parser.parseUpdate [as parseMaybeUnary] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:675:23)\u001b[22m\n      \u001b[2mat Parser.parseMaybeUnary [as parseMaybeUnaryOrPrivate] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:409:14)\u001b[22m\n      \u001b[2mat Parser.parseMaybeUnaryOrPrivate [as parseExprOps] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:421:23)\u001b[22m\n      \u001b[2mat Parser.parseExprOps [as parseMaybeConditional] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:376:23)\u001b[22m\n      \u001b[2mat Parser.parseMaybeConditional [as parseMaybeAssign] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:301:21)\u001b[22m\n      \u001b[2mat Parser.parseMaybeAssign [as parseExpressionBase] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:226:23)\u001b[22m\n      \u001b[2mat parseExpressionBase (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:217:39)\u001b[22m\n      \u001b[2mat Parser.callback [as allowInAnd] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:3187:16)\u001b[22m\n      \u001b[2mat Parser.allowInAnd [as parseExpression] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:217:17)\u001b[22m\n      \u001b[2mat Parser.parseExpression [as parseStatementContent] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:683:23)\u001b[22m\n      \u001b[2mat Parser.parseStatementContent [as parseStatementLike] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:477:17)\u001b[22m\n      \u001b[2mat Parser.parseStatementLike [as parseModuleItem] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:414:17)\u001b[22m\n      \u001b[2mat Parser.parseModuleItem [as parseBlockOrModuleBlockBody] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1438:16)\u001b[22m\n      \u001b[2mat Parser.parseBlockOrModuleBlockBody [as parseBlockBody] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1412:10)\u001b[22m\n      \u001b[2mat Parser.parseBlockBody [as parseProgram] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:229:10)\u001b[22m\n      \u001b[2mat Parser.parseProgram [as parseTopLevel] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:203:25)\u001b[22m\n      \u001b[2mat Parser.parseTopLevel [as parse] (\u001b[22mnode_modules/@babel/parser/src/parser/index.ts\u001b[2m:93:10)\u001b[22m\n      \u001b[2mat parse (\u001b[22mnode_modules/@babel/parser/src/index.ts\u001b[2m:92:38)\u001b[22m\n      \u001b[2mat parser (\u001b[22mnode_modules/@babel/core/src/parser/index.ts\u001b[2m:28:19)\u001b[22m\n          at parser.next (<anonymous>)\n      \u001b[2mat normalizeFile (\u001b[22mnode_modules/@babel/core/src/transformation/normalize-file.ts\u001b[2m:49:24)\u001b[22m\n          at normalizeFile.next (<anonymous>)\n      \u001b[2mat run (\u001b[22mnode_modules/@babel/core/src/transformation/index.ts\u001b[2m:40:36)\u001b[22m\n          at run.next (<anonymous>)\n      \u001b[2mat transform (\u001b[22mnode_modules/@babel/core/src/transform.ts\u001b[2m:29:20)\u001b[22m\n          at transform.next (<anonymous>)\n      \u001b[2mat evaluateSync (\u001b[22mnode_modules/gensync/index.js\u001b[2m:251:28)\u001b[22m\n      \u001b[2mat sync (\u001b[22mnode_modules/gensync/index.js\u001b[2m:89:14)\u001b[22m\n      \u001b[2mat fn (\u001b[22mnode_modules/@babel/core/src/errors/rewrite-stack-trace.ts\u001b[2m:99:14)\u001b[22m\n      \u001b[2mat transformSync (\u001b[22mnode_modules/@babel/core/src/transform.ts\u001b[2m:66:52)\u001b[22m\n      \u001b[2mat ScriptTransformer.transformSource (\u001b[22mnode_modules/@jest/transform/build/ScriptTransformer.js\u001b[2m:545:31)\u001b[22m\n      \u001b[2mat ScriptTransformer._transformAndBuildScript (\u001b[22mnode_modules/@jest/transform/build/ScriptTransformer.js\u001b[2m:674:40)\u001b[22m\n      \u001b[2mat ScriptTransformer.transform (\u001b[22mnode_modules/@jest/transform/build/ScriptTransformer.js\u001b[2m:726:19)\u001b[22m\n","testResults":[]},{"numFailingTests":0,"numPassingTests":0,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":0,"runtime":0,"slow":false,"start":0},"testFilePath":"/Users/tony/tony-space/Tony/python/automated-ptt-telegram-scheduler/src/components/__tests__/ConfigurationForm.test.tsx","failureMessage":"  \u001b[1m● \u001b[22mTest suite failed to run\n\n    \u001b[1m\u001b[31mJest encountered an unexpected token\u001b[39m\u001b[22m\n\n    Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.\n\n    Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.\n\n    By default \"node_modules\" folder is ignored by transformers.\n\n    Here's what you can do:\n     • If you are trying to use ECMAScript Modules, see \u001b[4mhttps://jestjs.io/docs/ecmascript-modules\u001b[24m for how to enable it.\n     • If you are trying to use TypeScript, see \u001b[4mhttps://jestjs.io/docs/getting-started#using-typescript\u001b[24m\n     • To have some of your \"node_modules\" files transformed, you can specify a custom \u001b[1m\"transformIgnorePatterns\"\u001b[22m in your config.\n     • If you need a custom transformation specify a \u001b[1m\"transform\"\u001b[22m option in your config.\n     • If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the \u001b[1m\"moduleNameMapper\"\u001b[22m config option.\n\n    You'll find more details and examples of these config options in the docs:\n    \u001b[36mhttps://jestjs.io/docs/configuration\u001b[39m\n    For information about custom transformations, see:\n    \u001b[36mhttps://jestjs.io/docs/code-transformation\u001b[39m\n\n    \u001b[1m\u001b[31mDetails:\u001b[39m\u001b[22m\n\n    SyntaxError: /Users/tony/tony-space/Tony/python/automated-ptt-telegram-scheduler/src/components/__tests__/ConfigurationForm.test.tsx: Missing initializer in const declaration. (16:25)\n\n    \u001b[0m \u001b[90m 14 |\u001b[39m   \u001b[36mconst\u001b[39m mockOnSubmit \u001b[33m=\u001b[39m jest\u001b[33m.\u001b[39mfn()\n     \u001b[90m 15 |\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 16 |\u001b[39m   \u001b[36mconst\u001b[39m mockConfiguration\u001b[33m:\u001b[39m \u001b[33mScrapingConfiguration\u001b[39m \u001b[33m=\u001b[39m {\n     \u001b[90m    |\u001b[39m                          \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 17 |\u001b[39m     id\u001b[33m:\u001b[39m \u001b[32m'test-id'\u001b[39m\u001b[33m,\u001b[39m\n     \u001b[90m 18 |\u001b[39m     name\u001b[33m:\u001b[39m \u001b[32m'Test Configuration'\u001b[39m\u001b[33m,\u001b[39m\n     \u001b[90m 19 |\u001b[39m     pttBoard\u001b[33m:\u001b[39m \u001b[32m'Tech_Job'\u001b[39m\u001b[33m,\u001b[39m\u001b[0m\n\n      \u001b[2mat constructor (\u001b[22mnode_modules/@babel/parser/src/parse-error.ts\u001b[2m:95:45)\u001b[22m\n      \u001b[2mat Parser.toParseError [as raise] (\u001b[22mnode_modules/@babel/parser/src/tokenizer/index.ts\u001b[2m:1503:19)\u001b[22m\n      \u001b[2mat Parser.raise [as parseVar] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1600:16)\u001b[22m\n      \u001b[2mat Parser.parseVar [as parseVarStatement] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1246:10)\u001b[22m\n      \u001b[2mat Parser.parseVarStatement [as parseStatementContent] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:607:21)\u001b[22m\n      \u001b[2mat Parser.parseStatementContent [as parseStatementLike] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:477:17)\u001b[22m\n      \u001b[2mat Parser.parseStatementLike [as parseStatementListItem] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:426:17)\u001b[22m\n      \u001b[2mat Parser.parseStatementListItem [as parseBlockOrModuleBlockBody] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1439:16)\u001b[22m\n      \u001b[2mat Parser.parseBlockOrModuleBlockBody [as parseBlockBody] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1412:10)\u001b[22m\n      \u001b[2mat Parser.parseBlockBody [as parseBlock] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1380:10)\u001b[22m\n      \u001b[2mat Parser.parseBlock [as parseFunctionBody] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:2616:24)\u001b[22m\n      \u001b[2mat Parser.parseFunctionBody [as parseArrowExpression] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:2553:10)\u001b[22m\n      \u001b[2mat Parser.parseArrowExpression [as parseParenAndDistinguishExpression] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:1837:12)\u001b[22m\n      \u001b[2mat Parser.parseParenAndDistinguishExpression [as parseExprAtom] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:1162:21)\u001b[22m\n      \u001b[2mat Parser.parseExprAtom [as parseExprSubscripts] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:734:23)\u001b[22m\n      \u001b[2mat Parser.parseExprSubscripts [as parseUpdate] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:713:21)\u001b[22m\n      \u001b[2mat Parser.parseUpdate [as parseMaybeUnary] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:675:23)\u001b[22m\n      \u001b[2mat Parser.parseMaybeUnary [as parseMaybeUnaryOrPrivate] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:409:14)\u001b[22m\n      \u001b[2mat Parser.parseMaybeUnaryOrPrivate [as parseExprOps] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:421:23)\u001b[22m\n      \u001b[2mat Parser.parseExprOps [as parseMaybeConditional] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:376:23)\u001b[22m\n      \u001b[2mat Parser.parseMaybeConditional [as parseMaybeAssign] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:301:21)\u001b[22m\n      \u001b[2mat parseMaybeAssign (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:257:12)\u001b[22m\n      \u001b[2mat Parser.callback [as allowInAnd] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:3192:12)\u001b[22m\n      \u001b[2mat Parser.allowInAnd [as parseMaybeAssignAllowIn] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:256:17)\u001b[22m\n      \u001b[2mat Parser.parseMaybeAssignAllowIn [as parseMaybeAssignAllowInOrVoidPattern] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:3306:17)\u001b[22m\n      \u001b[2mat Parser.parseMaybeAssignAllowInOrVoidPattern [as parseExprListItem] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:2788:18)\u001b[22m\n      \u001b[2mat Parser.parseExprListItem [as parseCallExpressionArguments] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:1034:14)\u001b[22m\n      \u001b[2mat Parser.parseCallExpressionArguments [as parseCoverCallAndAsyncArrowHead] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:914:29)\u001b[22m\n      \u001b[2mat Parser.parseCoverCallAndAsyncArrowHead [as parseSubscript] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:796:19)\u001b[22m\n      \u001b[2mat Parser.parseSubscript [as parseSubscripts] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:755:19)\u001b[22m\n      \u001b[2mat Parser.parseSubscripts [as parseExprSubscripts] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:740:17)\u001b[22m\n      \u001b[2mat Parser.parseExprSubscripts [as parseUpdate] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:713:21)\u001b[22m\n      \u001b[2mat Parser.parseUpdate [as parseMaybeUnary] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:675:23)\u001b[22m\n      \u001b[2mat Parser.parseMaybeUnary [as parseMaybeUnaryOrPrivate] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:409:14)\u001b[22m\n      \u001b[2mat Parser.parseMaybeUnaryOrPrivate [as parseExprOps] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:421:23)\u001b[22m\n      \u001b[2mat Parser.parseExprOps [as parseMaybeConditional] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:376:23)\u001b[22m\n      \u001b[2mat Parser.parseMaybeConditional [as parseMaybeAssign] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:301:21)\u001b[22m\n      \u001b[2mat Parser.parseMaybeAssign [as parseExpressionBase] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:226:23)\u001b[22m\n      \u001b[2mat parseExpressionBase (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:217:39)\u001b[22m\n      \u001b[2mat Parser.callback [as allowInAnd] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:3187:16)\u001b[22m\n      \u001b[2mat Parser.allowInAnd [as parseExpression] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:217:17)\u001b[22m\n      \u001b[2mat Parser.parseExpression [as parseStatementContent] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:683:23)\u001b[22m\n      \u001b[2mat Parser.parseStatementContent [as parseStatementLike] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:477:17)\u001b[22m\n      \u001b[2mat Parser.parseStatementLike [as parseModuleItem] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:414:17)\u001b[22m\n      \u001b[2mat Parser.parseModuleItem [as parseBlockOrModuleBlockBody] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1438:16)\u001b[22m\n      \u001b[2mat Parser.parseBlockOrModuleBlockBody [as parseBlockBody] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1412:10)\u001b[22m\n      \u001b[2mat Parser.parseBlockBody [as parseProgram] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:229:10)\u001b[22m\n      \u001b[2mat Parser.parseProgram [as parseTopLevel] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:203:25)\u001b[22m\n      \u001b[2mat Parser.parseTopLevel [as parse] (\u001b[22mnode_modules/@babel/parser/src/parser/index.ts\u001b[2m:93:10)\u001b[22m\n      \u001b[2mat parse (\u001b[22mnode_modules/@babel/parser/src/index.ts\u001b[2m:92:38)\u001b[22m\n      \u001b[2mat parser (\u001b[22mnode_modules/@babel/core/src/parser/index.ts\u001b[2m:28:19)\u001b[22m\n          at parser.next (<anonymous>)\n      \u001b[2mat normalizeFile (\u001b[22mnode_modules/@babel/core/src/transformation/normalize-file.ts\u001b[2m:49:24)\u001b[22m\n          at normalizeFile.next (<anonymous>)\n      \u001b[2mat run (\u001b[22mnode_modules/@babel/core/src/transformation/index.ts\u001b[2m:40:36)\u001b[22m\n          at run.next (<anonymous>)\n      \u001b[2mat transform (\u001b[22mnode_modules/@babel/core/src/transform.ts\u001b[2m:29:20)\u001b[22m\n          at transform.next (<anonymous>)\n      \u001b[2mat evaluateSync (\u001b[22mnode_modules/gensync/index.js\u001b[2m:251:28)\u001b[22m\n      \u001b[2mat sync (\u001b[22mnode_modules/gensync/index.js\u001b[2m:89:14)\u001b[22m\n      \u001b[2mat fn (\u001b[22mnode_modules/@babel/core/src/errors/rewrite-stack-trace.ts\u001b[2m:99:14)\u001b[22m\n      \u001b[2mat transformSync (\u001b[22mnode_modules/@babel/core/src/transform.ts\u001b[2m:66:52)\u001b[22m\n      \u001b[2mat ScriptTransformer.transformSource (\u001b[22mnode_modules/@jest/transform/build/ScriptTransformer.js\u001b[2m:545:31)\u001b[22m\n      \u001b[2mat ScriptTransformer._transformAndBuildScript (\u001b[22mnode_modules/@jest/transform/build/ScriptTransformer.js\u001b[2m:674:40)\u001b[22m\n      \u001b[2mat ScriptTransformer.transform (\u001b[22mnode_modules/@jest/transform/build/ScriptTransformer.js\u001b[2m:726:19)\u001b[22m\n","testResults":[]},{"numFailingTests":0,"numPassingTests":0,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":0,"runtime":0,"slow":false,"start":0},"testFilePath":"/Users/tony/tony-space/Tony/python/automated-ptt-telegram-scheduler/src/pages/api/executions/__tests__/[configId].test.ts","failureMessage":"  \u001b[1m● \u001b[22mTest suite failed to run\n\n    \u001b[1m\u001b[31mJest encountered an unexpected token\u001b[39m\u001b[22m\n\n    Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.\n\n    Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.\n\n    By default \"node_modules\" folder is ignored by transformers.\n\n    Here's what you can do:\n     • If you are trying to use ECMAScript Modules, see \u001b[4mhttps://jestjs.io/docs/ecmascript-modules\u001b[24m for how to enable it.\n     • If you are trying to use TypeScript, see \u001b[4mhttps://jestjs.io/docs/getting-started#using-typescript\u001b[24m\n     • To have some of your \"node_modules\" files transformed, you can specify a custom \u001b[1m\"transformIgnorePatterns\"\u001b[22m in your config.\n     • If you need a custom transformation specify a \u001b[1m\"transform\"\u001b[22m option in your config.\n     • If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the \u001b[1m\"moduleNameMapper\"\u001b[22m config option.\n\n    You'll find more details and examples of these config options in the docs:\n    \u001b[36mhttps://jestjs.io/docs/configuration\u001b[39m\n    For information about custom transformations, see:\n    \u001b[36mhttps://jestjs.io/docs/code-transformation\u001b[39m\n\n    \u001b[1m\u001b[31mDetails:\u001b[39m\u001b[22m\n\n    /Users/tony/tony-space/Tony/python/automated-ptt-telegram-scheduler/src/pages/api/executions/__tests__/[configId].test.ts:41\n    import { jest } from '@jest/globals';\n    ^^^^^^\n\n    SyntaxError: Cannot use import statement outside a module\n\n      \u001b[2mat Runtime.createScriptFromCode (\u001b[22mnode_modules/jest-runtime/build/index.js\u001b[2m:1505:14)\u001b[22m\n","testResults":[]},{"numFailingTests":0,"numPassingTests":0,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":0,"runtime":0,"slow":false,"start":0},"testFilePath":"/Users/tony/tony-space/Tony/python/automated-ptt-telegram-scheduler/src/pages/api/secrets/__tests__/validate.test.ts","failureMessage":"  \u001b[1m● \u001b[22mTest suite failed to run\n\n    SyntaxError: /Users/tony/tony-space/Tony/python/automated-ptt-telegram-scheduler/src/pages/api/secrets/__tests__/validate.test.ts: Unexpected token, expected \",\" (20:23)\n\n    \u001b[0m \u001b[90m 18 |\u001b[39m   getSecretMetadata\u001b[33m:\u001b[39m mockGetSecretMetadata\u001b[33m,\u001b[39m\n     \u001b[90m 19 |\u001b[39m   \u001b[33mSecretManagerError\u001b[39m\u001b[33m:\u001b[39m \u001b[36mclass\u001b[39m \u001b[36mextends\u001b[39m \u001b[33mError\u001b[39m {\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 20 |\u001b[39m     constructor(message\u001b[33m:\u001b[39m string\u001b[33m,\u001b[39m \u001b[36mpublic\u001b[39m statusCode\u001b[33m?\u001b[39m\u001b[33m:\u001b[39m number\u001b[33m,\u001b[39m \u001b[36mpublic\u001b[39m retryable\u001b[33m:\u001b[39m boolean \u001b[33m=\u001b[39m \u001b[36mtrue\u001b[39m) {\n     \u001b[90m    |\u001b[39m                        \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 21 |\u001b[39m       \u001b[36msuper\u001b[39m(message)\n     \u001b[90m 22 |\u001b[39m       \u001b[36mthis\u001b[39m\u001b[33m.\u001b[39mname \u001b[33m=\u001b[39m \u001b[32m'SecretManagerError'\u001b[39m\n     \u001b[90m 23 |\u001b[39m     }\u001b[0m\n\n      \u001b[2mat constructor (\u001b[22mnode_modules/@babel/parser/src/parse-error.ts\u001b[2m:95:45)\u001b[22m\n      \u001b[2mat Parser.toParseError [as raise] (\u001b[22mnode_modules/@babel/parser/src/tokenizer/index.ts\u001b[2m:1503:19)\u001b[22m\n      \u001b[2mat Parser.raise [as unexpected] (\u001b[22mnode_modules/@babel/parser/src/tokenizer/index.ts\u001b[2m:1543:16)\u001b[22m\n      \u001b[2mat Parser.unexpected [as expect] (\u001b[22mnode_modules/@babel/parser/src/parser/util.ts\u001b[2m:157:12)\u001b[22m\n      \u001b[2mat Parser.expect [as parseBindingList] (\u001b[22mnode_modules/@babel/parser/src/parser/lval.ts\u001b[2m:457:14)\u001b[22m\n      \u001b[2mat Parser.parseBindingList [as parseFunctionParams] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1723:24)\u001b[22m\n      \u001b[2mat Parser.parseFunctionParams [as parseMethod] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:2481:10)\u001b[22m\n      \u001b[2mat Parser.parseMethod [as pushClassMethod] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:2239:12)\u001b[22m\n      \u001b[2mat Parser.pushClassMethod [as parseClassMemberWithIsStatic] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:2018:12)\u001b[22m\n      \u001b[2mat Parser.parseClassMemberWithIsStatic [as parseClassMember] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1933:10)\u001b[22m\n      \u001b[2mat parseClassMember (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1846:14)\u001b[22m\n      \u001b[2mat Parser.callback [as withSmartMixTopicForbiddingContext] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:3166:14)\u001b[22m\n      \u001b[2mat Parser.withSmartMixTopicForbiddingContext [as parseClassBody] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1818:10)\u001b[22m\n      \u001b[2mat Parser.parseClassBody [as parseClass] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1769:22)\u001b[22m\n      \u001b[2mat Parser.parseClass [as parseExprAtom] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:1188:21)\u001b[22m\n      \u001b[2mat Parser.parseExprAtom [as parseExprSubscripts] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:734:23)\u001b[22m\n      \u001b[2mat Parser.parseExprSubscripts [as parseUpdate] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:713:21)\u001b[22m\n      \u001b[2mat Parser.parseUpdate [as parseMaybeUnary] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:675:23)\u001b[22m\n      \u001b[2mat Parser.parseMaybeUnary [as parseMaybeUnaryOrPrivate] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:409:14)\u001b[22m\n      \u001b[2mat Parser.parseMaybeUnaryOrPrivate [as parseExprOps] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:421:23)\u001b[22m\n      \u001b[2mat Parser.parseExprOps [as parseMaybeConditional] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:376:23)\u001b[22m\n      \u001b[2mat Parser.parseMaybeConditional [as parseMaybeAssign] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:301:21)\u001b[22m\n      \u001b[2mat parseMaybeAssign (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:257:12)\u001b[22m\n      \u001b[2mat Parser.callback [as allowInAnd] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:3192:12)\u001b[22m\n      \u001b[2mat Parser.allowInAnd [as parseMaybeAssignAllowIn] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:256:17)\u001b[22m\n      \u001b[2mat Parser.parseMaybeAssignAllowIn [as parseMaybeAssignAllowInOrVoidPattern] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:3306:17)\u001b[22m\n      \u001b[2mat Parser.parseMaybeAssignAllowInOrVoidPattern [as parseObjectProperty] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:2315:16)\u001b[22m\n      \u001b[2mat Parser.parseObjectProperty [as parseObjPropValue] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:2378:12)\u001b[22m\n      \u001b[2mat Parser.parseObjPropValue [as parsePropertyDefinition] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:2218:17)\u001b[22m\n      \u001b[2mat Parser.parsePropertyDefinition [as parseObjectLike] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:2085:21)\u001b[22m\n      \u001b[2mat Parser.parseObjectLike [as parseExprAtom] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:1174:21)\u001b[22m\n      \u001b[2mat Parser.parseExprAtom [as parseExprSubscripts] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:734:23)\u001b[22m\n      \u001b[2mat Parser.parseExprSubscripts [as parseUpdate] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:713:21)\u001b[22m\n      \u001b[2mat Parser.parseUpdate [as parseMaybeUnary] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:675:23)\u001b[22m\n      \u001b[2mat Parser.parseMaybeUnary [as parseMaybeUnaryOrPrivate] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:409:14)\u001b[22m\n      \u001b[2mat Parser.parseMaybeUnaryOrPrivate [as parseExprOps] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:421:23)\u001b[22m\n      \u001b[2mat Parser.parseExprOps [as parseMaybeConditional] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:376:23)\u001b[22m\n      \u001b[2mat Parser.parseMaybeConditional [as parseMaybeAssign] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:301:21)\u001b[22m\n      \u001b[2mat parseMaybeAssign (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:257:12)\u001b[22m\n      \u001b[2mat Parser.callback [as allowInAnd] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:3192:12)\u001b[22m\n      \u001b[2mat Parser.allowInAnd [as parseMaybeAssignAllowIn] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:256:17)\u001b[22m\n      \u001b[2mat Parser.parseMaybeAssignAllowIn [as parseMaybeAssignAllowInOrVoidPattern] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:3306:17)\u001b[22m\n      \u001b[2mat Parser.parseMaybeAssignAllowInOrVoidPattern [as parseParenAndDistinguishExpression] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:1813:16)\u001b[22m\n      \u001b[2mat Parser.parseParenAndDistinguishExpression [as parseExprAtom] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:1162:21)\u001b[22m\n      \u001b[2mat Parser.parseExprAtom [as parseExprSubscripts] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:734:23)\u001b[22m\n      \u001b[2mat Parser.parseExprSubscripts [as parseUpdate] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:713:21)\u001b[22m\n      \u001b[2mat Parser.parseUpdate [as parseMaybeUnary] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:675:23)\u001b[22m\n      \u001b[2mat Parser.parseMaybeUnary [as parseMaybeUnaryOrPrivate] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:409:14)\u001b[22m\n      \u001b[2mat Parser.parseMaybeUnaryOrPrivate [as parseExprOps] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:421:23)\u001b[22m\n      \u001b[2mat Parser.parseExprOps [as parseMaybeConditional] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:376:23)\u001b[22m\n      \u001b[2mat Parser.parseMaybeConditional [as parseMaybeAssign] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:301:21)\u001b[22m\n      \u001b[2mat Parser.parseMaybeAssign [as parseFunctionBody] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:2602:14)\u001b[22m\n      \u001b[2mat Parser.parseFunctionBody [as parseArrowExpression] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:2553:10)\u001b[22m\n      \u001b[2mat Parser.parseArrowExpression [as parseParenAndDistinguishExpression] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:1837:12)\u001b[22m\n      \u001b[2mat Parser.parseParenAndDistinguishExpression [as parseExprAtom] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:1162:21)\u001b[22m\n      \u001b[2mat Parser.parseExprAtom [as parseExprSubscripts] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:734:23)\u001b[22m\n      \u001b[2mat Parser.parseExprSubscripts [as parseUpdate] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:713:21)\u001b[22m\n      \u001b[2mat Parser.parseUpdate [as parseMaybeUnary] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:675:23)\u001b[22m\n      \u001b[2mat Parser.parseMaybeUnary [as parseMaybeUnaryOrPrivate] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:409:14)\u001b[22m\n      \u001b[2mat Parser.parseMaybeUnaryOrPrivate [as parseExprOps] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:421:23)\u001b[22m\n      \u001b[2mat Parser.parseExprOps [as parseMaybeConditional] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:376:23)\u001b[22m\n      \u001b[2mat Parser.parseMaybeConditional [as parseMaybeAssign] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:301:21)\u001b[22m\n      \u001b[2mat parseMaybeAssign (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:257:12)\u001b[22m\n      \u001b[2mat Parser.callback [as allowInAnd] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:3192:12)\u001b[22m\n      \u001b[2mat Parser.allowInAnd [as parseMaybeAssignAllowIn] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:256:17)\u001b[22m\n      \u001b[2mat Parser.parseMaybeAssignAllowIn [as parseMaybeAssignAllowInOrVoidPattern] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:3306:17)\u001b[22m\n      \u001b[2mat Parser.parseMaybeAssignAllowInOrVoidPattern [as parseExprListItem] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:2788:18)\u001b[22m\n      \u001b[2mat Parser.parseExprListItem [as parseCallExpressionArguments] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:1034:14)\u001b[22m\n      \u001b[2mat Parser.parseCallExpressionArguments [as parseCoverCallAndAsyncArrowHead] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:914:29)\u001b[22m\n      \u001b[2mat Parser.parseCoverCallAndAsyncArrowHead [as parseSubscript] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:796:19)\u001b[22m\n      \u001b[2mat Parser.parseSubscript [as parseSubscripts] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:755:19)\u001b[22m\n      \u001b[2mat Parser.parseSubscripts [as parseExprSubscripts] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:740:17)\u001b[22m\n      \u001b[2mat Parser.parseExprSubscripts [as parseUpdate] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:713:21)\u001b[22m\n      \u001b[2mat Parser.parseUpdate [as parseMaybeUnary] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:675:23)\u001b[22m\n      \u001b[2mat Parser.parseMaybeUnary [as parseMaybeUnaryOrPrivate] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:409:14)\u001b[22m\n      \u001b[2mat Parser.parseMaybeUnaryOrPrivate [as parseExprOps] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:421:23)\u001b[22m\n      \u001b[2mat Parser.parseExprOps [as parseMaybeConditional] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:376:23)\u001b[22m\n      \u001b[2mat Parser.parseMaybeConditional [as parseMaybeAssign] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:301:21)\u001b[22m\n      \u001b[2mat Parser.parseMaybeAssign [as parseExpressionBase] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:226:23)\u001b[22m\n      \u001b[2mat parseExpressionBase (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:217:39)\u001b[22m\n      \u001b[2mat Parser.callback [as allowInAnd] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:3187:16)\u001b[22m\n      \u001b[2mat Parser.allowInAnd [as parseExpression] (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:217:17)\u001b[22m\n      \u001b[2mat Parser.parseExpression [as parseStatementContent] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:683:23)\u001b[22m\n      \u001b[2mat Parser.parseStatementContent [as parseStatementLike] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:477:17)\u001b[22m\n      \u001b[2mat Parser.parseStatementLike [as parseModuleItem] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:414:17)\u001b[22m\n      \u001b[2mat Parser.parseModuleItem [as parseBlockOrModuleBlockBody] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1438:16)\u001b[22m\n      \u001b[2mat Parser.parseBlockOrModuleBlockBody [as parseBlockBody] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1412:10)\u001b[22m\n      \u001b[2mat Parser.parseBlockBody [as parseProgram] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:229:10)\u001b[22m\n      \u001b[2mat Parser.parseProgram [as parseTopLevel] (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:203:25)\u001b[22m\n      \u001b[2mat Parser.parseTopLevel [as parse] (\u001b[22mnode_modules/@babel/parser/src/parser/index.ts\u001b[2m:93:10)\u001b[22m\n      \u001b[2mat parse (\u001b[22mnode_modules/@babel/parser/src/index.ts\u001b[2m:92:38)\u001b[22m\n      \u001b[2mat parser (\u001b[22mnode_modules/@babel/core/src/parser/index.ts\u001b[2m:28:19)\u001b[22m\n          at parser.next (<anonymous>)\n      \u001b[2mat normalizeFile (\u001b[22mnode_modules/@babel/core/src/transformation/normalize-file.ts\u001b[2m:49:24)\u001b[22m\n          at normalizeFile.next (<anonymous>)\n      \u001b[2mat run (\u001b[22mnode_modules/@babel/core/src/transformation/index.ts\u001b[2m:40:36)\u001b[22m\n          at run.next (<anonymous>)\n      \u001b[2mat transform (\u001b[22mnode_modules/@babel/core/src/transform.ts\u001b[2m:29:20)\u001b[22m\n          at transform.next (<anonymous>)\n      \u001b[2mat evaluateSync (\u001b[22mnode_modules/gensync/index.js\u001b[2m:251:28)\u001b[22m\n","testResults":[]}],"config":{"bail":0,"changedFilesWithAncestor":false,"ci":false,"collectCoverage":false,"collectCoverageFrom":["src/**/*.{js,jsx,ts,tsx}","!src/**/*.d.ts","!src/pages/_app.tsx","!src/pages/_document.tsx","!src/pages/api/**/*.ts","!src/**/*.stories.{js,jsx,ts,tsx}","!src/**/*.config.{js,jsx,ts,tsx}","!src/types/**/*.ts"],"coverageDirectory":"/Users/tony/tony-space/Tony/python/automated-ptt-telegram-scheduler/coverage","coverageProvider":"babel","coverageReporters":["text","lcov","html","json-summary"],"coverageThreshold":{"global":{"branches":80,"functions":80,"lines":80,"statements":80}},"detectLeaks":false,"detectOpenHandles":false,"errorOnDeprecated":true,"expand":false,"findRelatedTests":false,"forceExit":false,"globalSetup":"/Users/tony/tony-space/Tony/python/automated-ptt-telegram-scheduler/jest.global-setup.js","globalTeardown":"/Users/tony/tony-space/Tony/python/automated-ptt-telegram-scheduler/jest.global-teardown.js","json":false,"lastCommit":false,"listTests":false,"logHeapUsage":false,"maxConcurrency":5,"maxWorkers":13,"noStackTrace":false,"nonFlagArgs":[],"notify":false,"notifyMode":"failure-change","onlyChanged":false,"onlyFailures":false,"openHandlesTimeout":1000,"passWithNoTests":true,"projects":[{"displayName":"unit","testMatch":["<rootDir>/src/**/__tests__/**/*.test.{js,jsx,ts,tsx}","<rootDir>/src/**/?(*.)(test).{js,jsx,ts,tsx}"],"testPathIgnorePatterns":["<rootDir>/src/__tests__/integration/","<rootDir>/src/__tests__/e2e/","<rootDir>/src/__tests__/performance/"],"rootDir":"/Users/tony/tony-space/Tony/python/automated-ptt-telegram-scheduler"},{"displayName":"integration","testMatch":["<rootDir>/src/__tests__/integration/**/*.test.{js,jsx,ts,tsx}"],"testTimeout":30000,"rootDir":"/Users/tony/tony-space/Tony/python/automated-ptt-telegram-scheduler"},{"displayName":"e2e","testMatch":["<rootDir>/src/__tests__/e2e/**/*.test.{js,jsx,ts,tsx}"],"testTimeout":60000,"rootDir":"/Users/tony/tony-space/Tony/python/automated-ptt-telegram-scheduler"},{"displayName":"performance","testMatch":["<rootDir>/src/__tests__/performance/**/*.test.{js,jsx,ts,tsx}"],"testTimeout":120000,"rootDir":"/Users/tony/tony-space/Tony/python/automated-ptt-telegram-scheduler"}],"reporters":[["default",{}],["/Users/tony/tony-space/Tony/python/automated-ptt-telegram-scheduler/node_modules/jest-junit/index.js",{"outputDirectory":"test-results","outputName":"junit.xml","suiteName":"PTT Telegram Scheduler Tests"}],["/Users/tony/tony-space/Tony/python/automated-ptt-telegram-scheduler/node_modules/jest-html-reporters/index.js",{"publicPath":"test-results","filename":"test-report.html","expand":true}]],"rootDir":"/Users/tony/tony-space/Tony/python/automated-ptt-telegram-scheduler","runTestsByPath":false,"seed":-1385543529,"skipFilter":false,"snapshotFormat":{"escapeString":false,"printBasicPrototype":false},"testFailureExitCode":1,"testPathPattern":"","testSequencer":"/Users/tony/tony-space/Tony/python/automated-ptt-telegram-scheduler/node_modules/@jest/test-sequencer/build/index.js","testTimeout":10000,"updateSnapshot":"new","useStderr":false,"verbose":true,"watch":false,"watchAll":false,"watchPlugins":[{"config":{},"path":"/Users/tony/tony-space/Tony/python/automated-ptt-telegram-scheduler/node_modules/jest-watch-typeahead/build/file_name_plugin/plugin.js"},{"config":{},"path":"/Users/tony/tony-space/Tony/python/automated-ptt-telegram-scheduler/node_modules/jest-watch-typeahead/build/test_name_plugin/plugin.js"}],"watchman":true,"workerThreads":false},"endTime":1755615258337,"_reporterOptions":{"publicPath":"test-results","filename":"test-report.html","expand":true,"pageTitle":"","hideIcon":false,"testCommand":"","openReport":false,"failureMessageOnly":0,"enableMergeData":false,"dataMergeLevel":1,"inlineSource":false,"urlForTestFiles":"","darkTheme":false,"includeConsoleLog":false,"stripSkippedTest":false},"logInfoMapping":{},"attachInfos":{}})